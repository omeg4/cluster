(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    397745,       7584]
NotebookOptionsPosition[    307212,       5809]
NotebookOutlinePosition[    383014,       7294]
CellTagsIndexPosition[    382302,       7270]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["TraceInteractive", "Title",
 CellTags->"Title"],

Cell["\<\
Trace an evaluation with an interface that allows interactive debugging\
\>", "Text",
 CellTags->"Description"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  TemplateBox[{"Definition",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Define your function using the name you gave in the Title line above. \
You can add input cells and extra code to define additional input cases or \
prerequisites. All definitions, including dependencies, will be included in \
the generated resource function.\n\nThis section should be evaluated before \
creating the Examples section below.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Section",
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->"Definition",
 CellID->474513213],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "TraceInteractive", "]"}], " ", "=", " ", 
   RowBox[{"{", "HoldFirst", "}"}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceInteractive", "[", 
    RowBox[{"eval_", ",", " ", "patt_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "$CurrentBreakPoint", "}"}], ",", " ", 
     RowBox[{
      RowBox[{"SetBreakPoint", "[", "patt", "]"}], ";", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"OptionValue", "[", "CreateWindow", "]"}], "]"}], ",", " ", 
        RowBox[{"traceInNewWindow", "[", 
         RowBox[{"eval", ",", " ", "opts"}], "]"}], ",", " ", 
        RowBox[{"traceInCurrentWindow", "[", 
         RowBox[{"eval", ",", " ", "opts"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceInteractive", "[", 
    RowBox[{"eval_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"TraceInteractive", "[", 
    RowBox[{"eval", ",", " ", "_", ",", " ", "opts"}], "]"}]}], "\n", 
  " "}], "\n", 
 RowBox[{
  RowBox[{"Options", "[", "TraceInteractive", "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"CreateWindow", " ", "->", " ", "True"}], ",", " ", 
    RowBox[{"NotebookClose", " ", "->", " ", "False"}], ",", " ", 
    RowBox[{"Stack", " ", "->", " ", "True"}]}], "}"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetBreakPoint", "[", 
    RowBox[{
     RowBox[{"Verbatim", "[", "Alternatives", "]"}], "[", "pattern_", "]"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"SetBreakPoint", "[", "pattern", "]"}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"SetBreakPoint", "[", "pattern_", "]"}], " ", ":=", " ", 
  RowBox[{"$CurrentBreakPoint", " ", "=", " ", 
   RowBox[{"Alternatives", "[", "pattern", "]"}]}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "traceInNewWindow", "]"}], " ", "=", " ", 
   RowBox[{"{", "HoldFirst", "}"}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"traceInNewWindow", "[", 
   RowBox[{"eval_", ",", " ", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "TraceInteractive", "]"}]}]}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "boxes", ",", " ", "cell", ",", " ", "nbExpr", ",", " ", "nbObj"}], 
     "}"}], ",", " ", 
    RowBox[{
     RowBox[{"boxes", " ", "=", " ", 
      RowBox[{"MakeBoxes", "[", 
       RowBox[{"Interpretation", "[", 
        RowBox[{"eval", ",", " ", 
         RowBox[{"traceInCurrentWindow", "[", 
          RowBox[{"eval", ",", " ", "opts"}], "]"}]}], "]"}], "]"}]}], ";", 
     " ", 
     RowBox[{"cell", " ", "=", " ", 
      RowBox[{"Cell", "[", 
       RowBox[{
        RowBox[{"BoxData", "[", "boxes", "]"}], ",", " ", "\"\<Input\>\""}], 
       "]"}]}], ";", " ", 
     RowBox[{"nbExpr", " ", "=", " ", 
      RowBox[{"Notebook", "[", 
       RowBox[{
        RowBox[{"{", "cell", "}"}], ",", " ", 
        RowBox[{"WindowSize", " ", "->", " ", 
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{"$FrontEndSession", ",", " ", "Magnification"}], "]"}], 
          "*", 
          RowBox[{"{", 
           RowBox[{"775", ",", " ", "436"}], "}"}]}]}], ",", " ", 
        RowBox[{
        "WindowTitle", " ", "->", " ", 
         "\"\<TraceInteractive (Evaluating)\>\""}], ",", " ", 
        RowBox[{"Saveable", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"WindowElements", " ", "->", " ", 
         RowBox[{"{", "\"\<VerticalScrollBar\>\"", "}"}]}], ",", " ", 
        RowBox[{"StyleDefinitions", " ", "->", " ", "$traceNBStyleSheet"}], 
        ",", " ", 
        RowBox[{"CellContext", " ", "->", " ", "$Context"}]}], "]"}]}], ";", 
     " ", 
     RowBox[{"Internal`WithLocalSettings", "[", 
      RowBox[{
       RowBox[{"nbObj", " ", "=", " ", 
        RowBox[{"NotebookPut", "[", "nbExpr", "]"}]}], ",", " ", 
       RowBox[{"NotebookEvaluate", "[", 
        RowBox[{"nbObj", ",", " ", 
         RowBox[{"InsertResults", " ", "->", " ", "True"}]}], "]"}], ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "NotebookClose", "]"}], ",", " ", 
         RowBox[{"NotebookClose", "[", "nbObj", "]"}], ",", " ", 
         RowBox[{"SetOptions", "[", 
          RowBox[{"nbObj", ",", " ", 
           RowBox[{
           "WindowTitle", " ", "->", " ", 
            "\"\<TraceInteractive (Complete)\>\""}]}], "]"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "traceInCurrentWindow", "]"}], " ", "=", " ", 
   RowBox[{"{", "HoldFirst", "}"}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"traceInCurrentWindow", "[", 
   RowBox[{"eval_", ",", " ", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "TraceInteractive", "]"}]}]}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"$MatchAny", " ", "=", " ", "False"}], ",", " ", 
        RowBox[{"$FinishEvaluation", " ", "=", " ", "False"}], ",", " ", 
        RowBox[{"TraceInteractive", " ", "=", " ", 
         RowBox[{"#1", " ", "&"}]}]}], " ", "}"}], ",", " ", 
      RowBox[{"Internal`WithLocalSettings", "[", 
       RowBox[{
        RowBox[{"displayButtons", "[", "]"}], ",", " ", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"out", " ", "=", " ", 
            RowBox[{"StackComplete", "[", 
             RowBox[{"StackBegin", "[", 
              RowBox[{"TraceScan", "[", 
               RowBox[{"breakOnExpression", ",", " ", "eval", ",", " ", 
                RowBox[{"_", "?", "matchCurrent"}]}], "]"}], "]"}], "]"}]}], 
           "}"}], ",", " ", 
          RowBox[{
           RowBox[{"SelectionMove", "[", 
            RowBox[{
             RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "After", ",",
              " ", "Notebook"}], "]"}], ";", " ", 
           RowBox[{"NotebookWrite", "[", 
            RowBox[{
             RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
             RowBox[{"Cell", "[", 
              RowBox[{
               RowBox[{"BoxData", "[", 
                RowBox[{"MakeBoxes", "[", "out", "]"}], "]"}], ",", " ", 
               "\"\<Output\>\""}], "]"}]}], "]"}], ";", " ", "out"}]}], "]"}],
         ",", " ", 
        RowBox[{"clearButtons", "[", "]"}]}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"TraceDialog", "::", "dgend"}], ",", " ", 
      RowBox[{"TraceDialog", "::", "dgbgn"}]}], "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"displayButtons", "[", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"CurrentValue", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "DockedCells"}], 
    "]"}], " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"CurrentValue", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "DockedCells"}], 
      "]"}], ",", " ", 
     RowBox[{"Cell", "[", 
      RowBox[{
       RowBox[{"BoxData", "[", 
        RowBox[{"ToBoxes", "[", 
         RowBox[{"Panel", "[", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Evaluation in progress\>\"", ",", " ", 
              RowBox[{"ProgressIndicator", "[", 
               RowBox[{"Appearance", " ", "->", " ", "\"\<Ellipsis\>\""}], 
               "]"}], ",", " ", "\"\< \>\"", ",", " ", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Return\>\"", ",", " ", 
                RowBox[{"return", "[", "]"}]}], "]"}], ",", " ", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Continue\>\"", ",", " ", 
                RowBox[{"continue", "[", "]"}]}], "]"}], ",", " ", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Next\>\"", ",", " ", 
                RowBox[{"step", "[", "]"}]}], "]"}], ",", " ", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Step\>\"", ",", " ", 
                RowBox[{"stepFine", "[", "]"}]}], "]"}], ",", " ", 
              RowBox[{"Spacer", "[", "50", "]"}], ",", " ", 
              "\"\<BreakPoints: \>\"", ",", " ", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"Grid", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{"#1", ",", " ", 
                    RowBox[{"RemoveBreakPoint", "[", "#1", "]"}], ",", " ", 
                    RowBox[{"Appearance", " ", "->", " ", "None"}]}], "]"}], 
                    " ", "&"}], " ", ")"}], " ", "/@", " ", 
                   RowBox[{"List", " ", "@@", " ", "$CurrentBreakPoint"}]}], 
                  "}"}], ",", " ", 
                 RowBox[{"Dividers", " ", "->", " ", "All"}]}], "]"}], "]"}], 
              ",", " ", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<+\>\"", ",", " ", 
                RowBox[{"AddBreakPoint", "[", 
                 RowBox[{"getBreakPoint", "[", "]"}], "]"}], ",", " ", 
                RowBox[{"Method", " ", "->", " ", "\"\<Queued\>\""}]}], 
               "]"}]}], "}"}], "]"}], ",", " ", 
           RowBox[{"FrameMargins", " ", "->", " ", "0"}]}], "]"}], "]"}], 
        "]"}], ",", " ", "\"\<Output\>\"", ",", " ", 
       RowBox[{"CellTags", " ", "->", " ", 
        RowBox[{"{", "\"\<TraceInteractiveButtons\>\"", "}"}]}], ",", " ", 
       RowBox[{"Magnification", " ", "->", " ", 
        RowBox[{"CurrentValue", "[", 
         RowBox[{"$FrontEndSession", ",", " ", "Magnification"}], "]"}]}]}], 
      "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"return", "[", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"$MatchAny", " ", "=", " ", "False"}], ";", " ", 
    RowBox[{"$StepFine", " ", "=", " ", "False"}], ";", " ", 
    RowBox[{"$FinishEvaluation", " ", "=", " ", "True"}], ";", " ", 
    RowBox[{"NotebookClose", "[", "$StackPalette", "]"}], ";", " ", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"FrontEndToken", "[", "\"\<DebuggerContinue\>\"", "]"}], "]"}]}],
    ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"continue", "[", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"$MatchAny", " ", "=", " ", "False"}], ";", " ", 
    RowBox[{"$StepFine", " ", "=", " ", "False"}], ";", " ", 
    RowBox[{"NotebookClose", "[", "$StackPalette", "]"}], ";", " ", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"FrontEndToken", "[", "\"\<DebuggerContinue\>\"", "]"}], "]"}]}],
    ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"step", "[", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"$MatchAny", " ", "=", " ", "True"}], ";", " ", 
    RowBox[{"$StepFine", " ", "=", " ", "False"}], ";", " ", 
    RowBox[{"NotebookClose", "[", "$StackPalette", "]"}], ";", " ", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"FrontEndToken", "[", "\"\<DebuggerContinue\>\"", "]"}], "]"}]}],
    ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"stepFine", "[", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"$StepFine", " ", "=", " ", "True"}], ";", " ", 
    RowBox[{"NotebookClose", "[", "$StackPalette", "]"}], ";", " ", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"FrontEndToken", "[", "\"\<DebuggerContinue\>\"", "]"}], "]"}]}],
    ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RemoveBreakPoint", "[", 
    RowBox[{
     RowBox[{"Verbatim", "[", "Alternatives", "]"}], "[", "pattern_", "]"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"RemoveBreakPoint", "[", "pattern", "]"}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"RemoveBreakPoint", "[", "pattern_", "]"}], " ", ":=", " ", 
  RowBox[{"$CurrentBreakPoint", " ", "=", " ", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"$CurrentBreakPoint", ",", " ", 
     RowBox[{"Verbatim", "[", "pattern", "]"}]}], "]"}]}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AddBreakPoint", "[", 
    RowBox[{
     RowBox[{"Verbatim", "[", "Alternatives", "]"}], "[", "pattern_", "]"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"AddBreakPoint", "[", "pattern", "]"}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"AddBreakPoint", "[", "pattern_", "]"}], " ", ":=", " ", 
  RowBox[{"AppendTo", "[", 
   RowBox[{"$CurrentBreakPoint", ",", " ", "pattern"}], "]"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"getBreakPoint", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ret", ",", " ", 
      RowBox[{"nm", " ", "=", " ", "\"\<\>\""}]}], "}"}], ",", " ", 
    RowBox[{"ToExpression", "[", 
     RowBox[{
      RowBox[{"DialogInput", "[", 
       RowBox[{"DialogNotebook", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"TextCell", "[", "\"\<Enter an expression: \>\"", "]"}], 
           ",", " ", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "nm", "]"}], ",", " ", "String"}], "]"}],
            ",", " ", 
           RowBox[{"ChoiceButtons", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DialogReturn", "[", 
               RowBox[{"ret", " ", "=", " ", "nm"}], "]"}], ",", " ", 
              RowBox[{"DialogReturn", "[", "]"}]}], "}"}], "]"}]}], "}"}], 
         ",", " ", 
         RowBox[{"Magnification", " ", "->", " ", 
          RowBox[{"CurrentValue", "[", 
           RowBox[{"$FrontEndSession", ",", " ", "Magnification"}], "]"}]}]}],
         "]"}], "]"}], ",", " ", "InputForm"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"breakOnExpression", "[", 
    RowBox[{"HoldForm", "[", "expr_", "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"StackInhibit", "[", 
    RowBox[{
     RowBox[{"showStackPalette", "[", 
      RowBox[{"Stack", "[", "_", "]"}], "]"}], ";", " ", 
     RowBox[{"SelectionMove", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "After", ",", " ", 
       "Notebook"}], "]"}], ";", " ", 
     RowBox[{"NotebookWrite", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
       RowBox[{"Cell", "[", 
        RowBox[{
         RowBox[{"BoxData", "[", 
          RowBox[{"simpleBoxes", "[", "expr", "]"}], "]"}], ",", " ", 
         "\"\<Input\>\"", ",", " ", 
         RowBox[{"CellFrameLabels", " ", "->", " ", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"level", " ", "=", " ", 
              RowBox[{
               RowBox[{"TraceLevel", "[", "]"}], " ", "-", " ", "1"}]}], 
             "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cell", "[", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", "level", "]"}], ",", " ", 
                    "\"\<:\>\""}], "]"}], ",", " ", 
                  RowBox[{"FontColor", " ", "->", " ", 
                   RowBox[{
                    RowBox[{"ColorData", "[", "97", "]"}], "[", "level", 
                    "]"}]}]}], "]"}], ",", " ", "None"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"None", ",", " ", "None"}], "}"}]}], "}"}]}], "]"}]}], 
         ",", " ", 
         RowBox[{"CellMargins", " ", "->", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"10", " ", "+", " ", 
               RowBox[{"margin", "[", "]"}]}], ",", " ", "Inherited"}], "}"}],
             ",", " ", 
            RowBox[{"{", 
             RowBox[{"Inherited", ",", " ", "Inherited"}], "}"}]}], "}"}]}]}],
         "]"}]}], "]"}], ";", " ", 
     RowBox[{"Dialog", "[", "]"}]}], "]"}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"breakOnExpression", "[", 
   RowBox[{"HoldForm", "[", "expr__", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"breakOnExpression", "[", 
   RowBox[{"HoldForm", "[", 
    RowBox[{"Sequence", "[", "expr", "]"}], "]"}], "]"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"showStackPalette", "[", "stack_", "]"}], " ", "/;", " ", 
   RowBox[{"TrueQ", "[", "$ShowStackPalette", "]"}]}], " ", ":=", " ", 
  RowBox[{"$StackPalette", " ", "=", " ", 
   RowBox[{"CreatePalette", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Column", "[", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"Replace", "[", 
          RowBox[{"stack", ",", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"s___", ",", " ", "_", ",", " ", "_"}], "}"}], " ", ":>",
             " ", 
            RowBox[{"{", "s", "}"}]}]}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"HoldForm", "[", 
           RowBox[{
            RowBox[{"(", "h_", ")"}], "[", "args___", "]"}], "]"}], " ", ":>",
           " ", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Short", "[", 
             RowBox[{
              RowBox[{"HoldForm", "[", "h", "]"}], ",", " ", "0.25"}], "]"}], 
            ",", " ", 
            RowBox[{"NotebookPut", "[", 
             RowBox[{"Notebook", "[", 
              RowBox[{"{", 
               RowBox[{"Cell", "[", 
                RowBox[{
                 RowBox[{"BoxData", "[", 
                  RowBox[{"MakeBoxes", "[", 
                   RowBox[{"h", "[", "args", "]"}], "]"}], "]"}], ",", " ", 
                 "\"\<Input\>\""}], "]"}], "}"}], "]"}], "]"}]}], "]"}]}], 
         ",", " ", 
         RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "}"}], ",", " ", 
     RowBox[{"WindowTitle", " ", "->", " ", "\"\<Current Stack\>\""}], ",", 
     " ", 
     RowBox[{"WindowFloating", " ", "->", " ", "False"}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"$ShowStackPalette", " ", "=", " ", "False"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "simpleBoxes", "]"}], " ", "=", " ", 
   RowBox[{"{", "HoldAllComplete", "}"}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"simpleBoxes", "[", 
   RowBox[{"expr_", ",", " ", "arg___"}], "]"}], " ", ":=", " ", 
  RowBox[{"Replace", "[", 
   RowBox[{"$noFormatSymbols", ",", " ", 
    RowBox[{
     RowBox[{"HoldComplete", "[", "syms___", "]"}], " ", ":>", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "syms", "}"}], ",", " ", 
       RowBox[{"MakeBoxes", "[", 
        RowBox[{"expr", ",", " ", "arg"}], "]"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"$noFormatSymbols", " ", ":=", " ", 
  RowBox[{"HoldComplete", "[", 
   RowBox[{
   "ResourceObject", ",", " ", "CloudObject", ",", " ", "ResourceFunction", 
    ",", " ", "ResourceSubmissionObject"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"margin", "[", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"level", " ", "=", " ", 
      RowBox[{"TraceLevel", "[", "]"}]}], "}"}], ",", " ", 
    RowBox[{"mCurve", "[", "level", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"mCurve", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Round", "[", 
   RowBox[{"4.", "*", 
    RowBox[{"(", 
     RowBox[{"26", " ", "-", " ", 
      RowBox[{
       RowBox[{"25", "^", 
        RowBox[{"(", 
         RowBox[{"1", " ", "+", " ", "x"}], ")"}]}], "/", 
       RowBox[{"26", "^", "x"}]}]}], ")"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "matchCurrent", "]"}], " ", "=", " ", 
   RowBox[{"{", "HoldAllComplete", "}"}]}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"matchCurrent", "[", "___", "]"}], " ", "/;", " ", 
    RowBox[{"TrueQ", "[", "$StepFine", "]"}]}], " ", ":=", " ", "True"}], 
  "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"matchCurrent", "[", "arg___", "]"}], " ", "/;", " ", 
    RowBox[{"TrueQ", "[", "$MatchAny", "]"}]}], " ", ":=", "  ", 
   RowBox[{"!", 
    RowBox[{"TrueQ", "[", 
     RowBox[{"AtomQ", "[", 
      RowBox[{"Unevaluated", "[", "arg", "]"}], "]"}], "]"}]}]}], "\n", 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"matchCurrent", "[", "___", "]"}], " ", "/;", " ", 
    RowBox[{"TrueQ", "[", "$FinishEvaluation", "]"}]}], " ", ":=", " ", 
   "False"}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"matchCurrent", "[", "arg___", "]"}], " ", ":=", " ", 
  RowBox[{"MatchQ", "[", 
   RowBox[{
    RowBox[{"Unevaluated", "[", "arg", "]"}], ",", " ", 
    "$CurrentBreakPoint"}], "]"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"clearButtons", "[", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"CurrentValue", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "DockedCells"}], 
    "]"}], " ", "=", " ", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"CurrentValue", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "DockedCells"}], 
      "]"}], ",", " ", 
     RowBox[{"Cell", "[", 
      RowBox[{"___", ",", " ", 
       RowBox[{"CellTags", " ", "->", " ", 
        RowBox[{"{", "\"\<TraceInteractiveButtons\>\"", "}"}]}], ",", " ", 
       "___"}], "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"$traceNBStyleSheet", " ", "=", " ", 
  RowBox[{"Notebook", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Cell", "[", 
      RowBox[{"StyleData", "[", 
       RowBox[{"StyleDefinitions", " ", "->", " ", "\"\<Default.nb\>\""}], 
       "]"}], "]"}], "}"}], ",", " ", 
    RowBox[{
    "StyleDefinitions", " ", "->", " ", 
     "\"\<PrivateStylesheetFormatting.nb\>\""}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell["Documentation", "Section",
 Deletable->False,
 CellTags->"Documentation",
 CellID->855965831],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  TemplateBox[{"Usage",Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Document input usage cases by first typing an input structure, then \
pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoUsage"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"UsageInputs",
 CellTags->"Usage",
 CellID->310800389],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TraceInteractive", "[", 
  StyleBox["expr", "TI"], "]"}]], "UsageInputs"],

Cell[TextData[{
 "evaluates ",
 Cell[BoxData[
  StyleBox["expr", "TI"]], "InlineFormula"],
 " in an interactive interface where each step of the evaluation can be \
inspected."
}], "UsageDescription"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TraceInteractive", "[", 
  RowBox[{
   StyleBox["expr", "TI"], ",", 
   StyleBox["patt", "TI"]}], "]"}]], "UsageInputs"],

Cell[TextData[{
 "sets ",
 Cell[BoxData[
  StyleBox["patt", "TI"]], "InlineFormula"],
 " as a breakpoint for entering subsessions."
}], "UsageDescription"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  TemplateBox[{"Details & Options",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDetailsOptions"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Notes",
 CellTags->"Details & Options",
 CellID->66019318],

Cell[TextData[{
 Cell[BoxData["TraceInteractive"], "InlineFormula"],
 " has the following options:"
}], "Notes",
 Editable->True,
 Deletable->True,
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{{3.7483860298194323`*^9, 3.748386042971049*^9}, 
   3.764085700772437*^9, 3.765107486113298*^9, 3.765109247743043*^9, 
   3.7655441768065567`*^9},
 CellTags->"Nothing",
 CellID->329531895],

Cell[BoxData[GridBox[{
   {
    ButtonBox["CreateWindow",
     BaseStyle->"Link"], 
    ButtonBox["True",
     BaseStyle->"Link"], 
    RowBox[{
    "create", " ", "a", " ", "new", " ", "window", " ", "for", " ", 
     "tracing"}]},
   {
    ButtonBox["NotebookClose",
     BaseStyle->"Link"], 
    ButtonBox["False",
     BaseStyle->"Link"], 
    RowBox[{"close", " ", "the", " ", "window", " ", "when", " ", "finished"}]}
  }]], "TableNotes",
 Editable->True,
 Deletable->True,
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{{3.7483860298194323`*^9, 3.7483861435451703`*^9}, 
   3.764085700833911*^9, 3.7651074861912947`*^9, 3.765109247823832*^9, 
   3.76554417687105*^9},
 CellTags->"Nothing",
 CellID->187709111]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  TemplateBox[{"Examples",Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"[Right-click]\"", FontFamily -> "Source Sans Pro Semibold", 
                FontColor -> GrayLevel[0.286275], FontSize -> 14, 
                StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Insert Page Break\"", FontFamily -> 
                "Source Sans Pro Semibold", FontColor -> GrayLevel[0.286275], 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          " between cells or through the menu using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"Insert\"", FontFamily -> "Source Sans Pro Semibold", 
                FontColor -> GrayLevel[0.286275], FontSize -> 14, 
                StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Page Break\"", FontFamily -> "Source Sans Pro Semibold", 
                FontColor -> GrayLevel[0.286275], FontSize -> 14, 
                StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
             False]]], 
          ").\n\nExamples should be grouped into Subsection and Subsubsection \
cells similarly to existing documentation pages. Here are some typical \
Subsection names and the types of examples they normally contain:\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Basic Examples: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "most basic function usage\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Scope: \"", FontFamily -> "Source Sans Pro Semibold", 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Options: \"", FontFamily -> "Source Sans Pro Semibold", 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          "available options and parameters for the function\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Applications: \"", FontFamily -> "Source Sans Pro Semibold",
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          "standard industry or academic applications\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Properties and Relations: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "how the function relates to other functions\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Possible Issues: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "limitations or unexpected behavior a user might experience\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Neat Examples: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoExamples"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Section",
 Deletable->False,
 CellTags->"Examples",
 CellID->180595041],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 CellID->103550037],

Cell[TextData[{
 "Retrieve the ",
 Cell[BoxData[
  ButtonBox["ResourceFunction",
   BaseStyle->"Link"]], "InlineFormula"],
 ":"
}], "Text",
 CellID->241571174],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceFunction", "[", "\"\<TraceInteractive\>\"", "]"}]], "Input",\

 CellID->39153316],

Cell[BoxData["TraceInteractive"], "Output",
 CellID->575923692]
}, Open  ]],

Cell["Trace an evaluation and stop whenever addition occurs:", "Text",
 CellID->256805882],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TraceInteractive", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "+", 
      RowBox[{"2", "#"}]}], "&"}], "/@", 
    RowBox[{"Range", "[", "3", "]"}]}], ",", "_Plus"}], "]"}]], "Input",
 CellChangeTimes->{3.764086594092951*^9},
 CellID->780572474],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "6", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.748391551278968*^9},
 CellLabel->"Out[126]=",
 CellID->436579877]
}, Open  ]],

Cell[" ", "Text",
 CellChangeTimes->{3.748393877669798*^9},
 CellID->129777857],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3c9uG1m+2HEjAYIs8woBvMgjBNxlmZ1wg2yymnuT4SCbCTA3cJC34F79
CloJIIwAcuyJpZGnPS1ZbdmSSpZa7rbsbk63rDgaJdR4FEpl/hFJUVVF/qSi
9PmgYLTJqjrFhldfnHPqX/7Df/m76j+5d+/eP/7z1h9/9/f/7d/87nd//9//
3b9o/eXf//Yf//Nvfvvr//Rvf/tff/2bX//uX//DP219+D9af/yrf3bv3tl/
f277a9vJuWaz+f/O/d9zx+f+0nbU9n8AAAAAuKU6CagThdJGlPaitB01m820
JnXi0ueL+opTGp06xam3NaWDfmr73wAAAADcUp0E1JuhOgGqU5/SmtRbny6L
Tp1pTr3FqdOa0kEP2z4CAAAAcEt1ElBvhkoDVG99GjrxaWh06p3m1ClOndyU
Dnpw7hcAAAAAbpeff/65969pBepkqE6A6tSnvolPfWvu+qJTZyunTnHqTG1K
W9PP5/58rgEAAADALZX2n7QFpQ2qMwmqU596N30aTE990alvmlNfceq0pp/O
/QgAAADALZX2n06D6qtPQyc+ddLT6Og0tDilrenDhw/vz+0DAAAAcEul/efD
hw9pgxpan0akp77u1DvTqROdOsUpzU2tQd+9e/fDue8BAAAAuC3etqV/TfvP
u3fv0gb14cOHTn3qpKfeWU993alvslNfdEqnOfUWp7Q1tUbf29v77twuAAAA
ALdOWn729vbSDPXDDz/01qd04lNfeuqb8tS3wq4vOjUajR9//LG3OKW5qTX0
zs7Omzdvtre3EwAAAABune3t7Tdv3uzs7KQNam9vr7c+/fjjj41Goy899a22
S7vTYHTqTHNq3Sqd4NS6f9qaWuNubW1tbm5ubGy8BgAAAOC2eNWW/nVjY2Nz
c3NraytJkjdv3qQB6u3btz/88MPo9JR2p94Vdunb69KZTj/99FPr8tZNWrdq
3bOTm1rDtYZeX1//9tza2toLAAAAAG6dtbW1tP+sr6+/evVqY2MjnQS1s7Oz
t7eXTnzqTU/pG+56V9v1TnZKX2DXiU7ff//97u5u625bW1uvX79uDfHy5cvW
iKurqysrK3869/z5868BAAAAuHWeP3+e9p+VlZXV1dW1tbX19fXXr19vbW29
efMmTU/v379P93r65ZdfOq+360x5SrtT72SnRqORRqednZ3Nzc1Xr159++23
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
AAAAACLoTgAAAABE0J0AAAAAiKA7AQAAABBBdwIAAAAggu4EAAAAQATdCQAA
AIAIuhMAAAAAEXQnAAAAACLoTgAAAABE0J0AAAAAiKA7AQAAABBBdwIAAAAg
gu4EAAAAQATdCQAAAIAIuhMAAAAAEXQnAAAAACLoTgAAAABE0J0AAAAAiKA7
AQAAABBBdwIAAAAggu4EAAAAQATdCQAAAIAIuhMAAAAAEXQnAAAAACLoTgAA
AABE0J0AAAAAiKA7AQAAABBBdwIAAAAggu4EAAAAQATdCQAAAIAIuhMAAAAA
EXQnAAAAACLoTgAAAABE0J0AAAAAiKA7AQAAABBBdwIAAAAggu4EAAAAQATd
CQAAAIAIuhMAAAAAEXQnAAAAACLoTgAAAABE0J0AAAAAiKA7AQAAABBBdwIA
AAAggu4EAAAAQATdCQAAAIAIuhMAAAAAEXQnAAAAACLoTgAAAABE0J0AAAAA
iKA7AQAAABBBdwIAAAAggu4EAAAAQATdCQAAAIAIuhMAAAAAEXQnAAAAACLo
TgAAAABE0J0AAAAAiKA7AQAAABBBdwIAAAAggu4EAAAAQATdCQAAAIAIuhMA
AAAAEXQnAAAAACLoTgAAAABE0J0AAAAAiKA7AQAAABBBdwIAAAAggu4EAAAA
QATdCQAAAIAIuhMAAAAAEXQnAAAAACLoTgAAAABE0J0AAAAAiKA7AQAAABBB
dwIAAAAggu4EAAAAQATdCQAAAIAIuhMAAAAAEXQnAAAAACLoTgAAAABE0J0A
AAAAiKA7AQAAABBBdwIAAAAggu4EAAAAQATdCQAAAIAIuhMAAAAAEXQnAAAA
ACLoTgAAAABE0J0AAAAAiKA7AQAAABBBdwIAAAAggu4EAAAAQATdCQAAAIAI
uhMAAAAAEXQnAAAAACLoTgAAAABE0J0AAAAAiKA7AQAAABBBdwIAAAAggu4E
AAAAQATdCQAAAIAIuhMAAAAAEXQnAAAAACL8KZjuBAAAAHA36U4AAAAARNCd
AAAAAIigOwEAAAAQQXcCAAAAIILuBAAAAEAE3QkAAACACLoTAAAAABF0JwAA
AAAi6E4AAAAARNCdAAAAAIigOwEAAAAQQXcCAAAAIILuBAAAAEAE3QkAAACA
CLoTAAAAABF0JwAAAAAi6E4AAAAARNCdAAAAAIigOwEAAAAQQXcCAAAAIILu
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
22wCu7RKEUXv5FpvWZ3kfqi6W8VRrN5JOk/33N3LH9JRKTdVdO8UsghdobUd
vRMAAACAXNA7lVL83mlx8cjaxglOW9ful368XSG9U0TtNDrZv/NQ/85n7mrW
LNevO9T80s6P122yzg6yvzO62L8uoo25fmvEJ/sFFs3oxJ6IsiFsbrmuqUbr
pF7SRBd46d64tYRdJuebyWbgva+aZGDvyI0Ro3cKm2eXr/QJv/9seif/Kkhn
Te8EAAAAIFv0TqWUpHdqffPau65+KthKhPROVmEVfpleLJEHz5EXlLmy7pDn
pvblab4r1PTF6J0W3aeudJkdt+e4pu6mw1XsuHqK0LVOMsaT3ulS7oka14p1
W5e+Ne6veeVYV/T1j1EnIbXv3z3kkjVTz1V38c53al+j1xfxWXPudsjTstWa
i9GdpHfq8l2pV/NeTxgxa3onAAAAANmidyqlhL1T4/tPb2mOMS6tpHLunaKv
suvfuun67kackYusL2XffMbbujhNjv6wTu4RrO3j+sYFXu0xrfVWynVSjX43
k9+aSusT39kxIQ9JwhGto2srV+/hXarubveXocVeWBnkvXPFJ8y5CsQk19l1
uQZYag0cJdka5tsz/ijtzuKqth+9EwAAAIBc0DuVUqB38jQ/zYIoondqGGkO
G96aMjjnnJiMFWRdWea7fKy+dZPk/B/vTUwur4t9aZKPdBghXZmvabBpCV7r
FV0Lxe4lIhsTa/nE7NtTNs7UaQ231N3nfBF5rZj7fuStkeyEJ8UMTHon9XPJ
X2/FfJ7E7p1UmyEwa3onAAAAANmidyqlYO/UqI+ssmjkqa1der2TM7HrE+uK
GN9Ja1Rxm+5nvbXZXY26rlEtj4rJkXiC6inzNfWVHZ5Rj3oDn+KmWrP4vUT4
w96uPZwCyv+D6G7EXwaFPhy6QyyZfJ6d66wi65s1acUUOSSY6oGI0zvVPJ+y
x3V2AAAAAIol7Z1mskfvFErWO3nTqpIieyT3RXmB6ZsnRLVmlfV1dnoHz5qf
9eZiFTjBDsdg2eJeTWbNITiKtZbM19RVoPT2eq/0cgqTqEon2ZYJedyt+Td+
FngImt9wF0lR3Yl2jWMN6tQlu1Gc3sn5nvQUKP3PvVMvsO6joHfalWzW9E4A
AAAAskXvVEqS8Z2e3t9/tV1AbV3bHjDc2yON91/tH07cV0wV0TuZnTpjfAFa
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
759xst4pdP61vt7u1kgRzvCmrdFLZftU7R1te+r2l57p7Nv22rvbnkk19tKU
Z+8nmmFXb+sKCM/GkH7GoOuCBP9jFbXurindC2qP+Cp5HCX3tegMceFZVe8T
KnyAiDjDR+gz6J1GVGduOIfk1tjJrS+cImBzT/vby7yjKZuPK+4cnLd+ak/Z
Y/dS7kVQ7q5rjO+kfcKTs2yu1Wt/6ZmJ1qKGbS71uT7Rq282MHvEY+pj1juF
9JeGT63ArP0rFLoxTZe/eSWffANE3pHO9vRcLNiaUHfLIwFJQWS9xfjfEpK+
1GvvJ7j/hCJpjzSHLTJ+ozd9p9bY8ZC+cznbQflOZt1U8UN90p0fe8FCT/fK
lrN29E4AAOSpzL1T2NVfgcvXxC6Y+yJ//weWJR9DQD1/+d9re9W9k2yGwSV2
37Y5tXrl5MJGjYg/w+aKeW8e+Nt0e9tKPzdZZ93bE3rvJuTz7NT3dZF6Ua1p
wgaIMB4+Qp9Z76SsZBqH3e0RoZZ5LkKSDqxsH0fH+Tw735DO7Sk9CxFyVkpk
z2BcPLW2gGcTBO9fa1HDNlfoNWYRq2/8gYBhj6mPSe+kuP5RuXihi6G4As1Z
pdCNqb38YZdsehck7I4it2d7uCfvQ6m15ZGA9qdQpPJSr7OfIK+rIq8Lk+5S
mL3RB78T8k4duuOxGPLOle/5Tq4rKJ2FCf+bYMactdMaUG5HyAuP5HWA3gkA
AJUy906pynzfRmfUKcDNsHcyG/soeEv9q9cyFdWTaBQNGSvV5oqk3zspt2z8
Z1a0hNfZ6T8W+T9q9E5pCL2aPr82wqLzCRsJxpPKQBY7Hin3Tu5aTNK7lbl3
Mn4doHcCAECF3ikt9E4wZdY7hQxwHKVURUr0eD7yQZvyU6rNFUm3d+oJjnnl
naSUvVPoZxaa3VHq6J3SoD0yYh4S9E4F7QGUuHfSRO8EAMCSQO+UFnonmDIa
V1z1kXI6SlWk6Hx+mTOmT/CCuR07Nq8MfLJfukq1uSJp9k7LQlrLMvdOrbO0
/C1k43K4HqMBzFNH75QG+RjYuh92kbK4vZNk2KKcVL93yhu9EwAAhShB7+T+
AOWW9Puh7P+mZg3kEPyrbWF1VIF3DS1RAyk7WlcpLItbDVgDIJWjSNHpnUZc
I0m5toXzVcZrIt9c1gKVZCu26Y7LHdIsZdk7RT73op8PrjXw/kIEutl8n+T0
TmkI7ga0HuwC3rv0e6fIYYtM7jTJO7V8xyMReqfYrwP0TgAAqJSidwqqYu+k
ul96JyhEFwWu3iVsqO5K0eydmnb4RgwvdENUvXdS90qZ9k5R9J4P0ifCjtwW
UoreKQ2y3QD1Z01kzKR3Sm15S/dOTe8U+3WA3gkAAJVCe6c8FdU7AUpp7fdW
i0nvhGhV357VXX56p46j0zt1Pnqn2K8D9E4AAKgsmd4JKJ3KHWinoro9QzlV
fXtWd/npndCR6J1ivw7QOwEAoELvBBSlcgfaqahuz1BOVd+e1V1+eid0JHqn
2K8D9E4AAKjQOwFFqdyBdiqq2zOUU9W3Z3WXn94JHYneKfbrAL0TAAAq9E5A
USp3oJ2K6vYM5VT17Vnd5ad3Qkeid4r9OkDvBACACr0TUJTKHWinoro9QzlV
fXtWd/npndCR6J1ivw7QOwEAoELvBBSlcgfaqahuz1BOVd+e1V1+eid0JHqn
2K8D9E4AAKjQOwFFqdyBdiqq2zOUU9W3Z3WXn94JHYneKfbrAL0TAAAq9E5A
USp3oJ2K6vYM5VT17Vnd5ad3Qkeid4r9OkDvBACACr0TUJTKHWinoro9QzlV
fXtWd/npndCR6J1ivw7QOwEAoELvBBSlcgfaqahuz1BOVd+e1V1+eid0JHqn
2K8D9E4AAKjQOwFFqdyBdiqq2zOUU9W3Z3WXn94JHemiJWCR3gkAgHzROwFF
qdyBdiqq2zOUU9W3Z3WXn94JHanoTigPi/ROAADki94JKErlDrRTUd2eoZyq
vj2ru/z0TkB10TsBAJAneiegKI8tVUt89VNX9e1Z3eUv5oUDQGJZvA7QOwEA
oELvBAAAACRB7wQAgAq9EwAAAJAEvRMAACr0TgAAAEAS9E4AAKjk3zsRQggh
hBDSSaF3AgBAJefeCQAAAOg89E4AAEjl2TsBAAAAAABg6aB3AgAAAAAAQBbo
nQAAAAAAAJAFeicAAAAAAABkgd4JAAAAAAAAWaB3AgAAAAAAQBbonQAAAAAA
AJAFeicAAAAAAABkgd4JAAAAAAAAWaB3AgAAAAAAQBbonQAAAAAAAJCFdHun
5Z9fQQghhBBCCCGEEEKICL0TIYQQQgghhBBCCMki9E6EEEIIIYQQQgghJIvQ
OxFCCCGEEEIIIYSQLELvRAghhBBCCCGEEEKyCL0TIYQQQgghhBBCCMki9E6E
EEIIIYQQQgghJIvQOxFCCCGEEEIIIYSQLELvRAghhBBCCCGEEEKyCL0TIYQQ
QgghhBBCCMki9E6EEEIIIYQQQgghJIvQOxFCCCGEEEIIIYSQLELvRAghhBBC
CCGEEEKySCG908A7Lso0hW9VQjopqzZsf7ZeH1t01Md2bV+/uvgFq2LYmIQQ
QgghhJAllVL3Tpe+afD9bxv6wNtFxH/El/ROhOSejc/aBUn92V39z+5yOpP6
sxsKX7bKhY1JCCGEEEIIWVopc+80+P63jXzksrE//n0R8Z9G9UTvRFLJhn5x
qM+Rvl42bguckLOquQEXF+vbnO/H26RL7oHQ25hsQ0IIIYQQQkinpCy90zvf
MPietwx98B0i4j/iS5Hh3/mNY3/95yeuvUZE/Ed8aX3fPyW9EzFL85yTXRuL
XoxqZ9Xj9UXvZly/S3zdv54HIo2NaRTzLU8IIYQQQgghOaUUvdM73zB4ycXD
l11y9IplR/9kmfjP4LveOPCuN459/Pembl376hOPioj/iC8HLrlY/Mie8orm
lJdcHKyeCt+qpMxpHqTHPbeEOFm9vXGNWH37Kt93tMsTHoiwjRnj5jR4hBBC
CCGEkPKlPL3T6OUfOvHlvz15w1eOrfxs/dN/NPaJy49fc9Wr//r4Qu2QiPiP
+FJ8s/7pjx1b8dmTa74iJhY3oXciZuEIPbVYQxV5TrMxqJJ4IKI2plEo8Qgh
hBBCCCHlTCl6p2b1dPSTf3hqy/3ndu0889MnTz2yZWbj+lM/fGB+/57zx8fP
nzg+/8Je8WXjm49sOfPUk2IyMbG4SYzr7KxLWvzDoaiPgldt6Hc+fGpsV+OE
BMUc1qzf5fqYqnr92Q1rPGcvrN64bVf451gFjz2VR6Pyw0zXoop7N7jrHFZf
smzqY+3IEW+iN6b+o79mW31RIbBsoQumsa3kq9z8jDPPppNOqftYaG1qs6eW
bAmt7eadQ/OJNPb4muWB2Wo/ENLuxX6M3HPW22j6q5lkyvQ3prV9nPUN/9Jo
yyeIPSi6/F7Cf2eDrw+Pbwyc3CXbjNIzwRK9XjXvJXBqmWSTRjwng5NJ1r3x
BAgup7WtvN9P9bc77Omn+06UYBOlvy6h7y+6dxee5oMS/RukmMy/cawFbr+z
iP/3r1+d6a8nIYQQ0slZTKDwhc8uX179D3v27vlvV/93/ZuIicVNxA1zXtSy
9E7vuKj+Zx8/85MnLkxNnp+ceG10eG5P/7nn/nNu7+75F/fNH9g/t//5c7v+
U3xT/EhMICYTE4ubxBhX3Kh3ssddEfuT9f5nd1k7t/3bgnOwbm7vwztTunb4
gxPYM07veLZ1F81FFYd1awzuOq/V9y5b+No1p5ceBWhtTGmkR5Gt3qkuDg18
8S9byILpbSvZKtsH7K3POKtbxy/bfVOaPhZRm9rgqeXcdWsJrS2wUbkxo68X
C3kgQnpI14/0NloJeye9jek8J60tGf6l0ZZPkPY2l9xL2O+s/PUh+AubtHcy
+B3Mp3eyV1zyB4JF7/Kn/dutfPoZvBPF3UTpr0vo+4vu3ek9veP2Tv5fydZS
1e2lav3Sj3GGJyGEEBIriwkUvvDZZc/ePQtz5w4dOqxZPYnJxMTiJuKGOS9q
eXqno3/6sdOPP3J+/JULp0+9fubMhemp+ZcOnH5068y9G2bvv+vVf/mn+YMH
xDcbPzp9SkwmJhY3ybh3sncmXRM3/ohpPYEDZYJ/X3TVhu2tPXl7As85SPbc
+lM+nvWvgt5dZ7v64csWXDvrqMc6JFf8NHpjSiMdyFrz0DJ8wYy2lfu2kjN5
lq+21zFYRETNX39Taz+1pMfOkiVUPjMTPxDOI2660UxWM5/eSXtjGp/vlP2l
ds07tU7hCN6L1XrVZaNUqV4fAl1i0t7J5Hcwl97J6eL8i+rvnVL/7Q5/6uq9
E8XcRBm9UqneX3TvLjqpnu/UWDzfRl69UfKqRQghhBC9WG/u+dyqQnF6JJ3q
yWji1FNY73TJxYPvfvPQ+35t+LJLRn73faOXf2j86s+f6dt+/vix1+fOvb4w
f2F6am7f87Pf/97k2hunbv767A/umX9h74XZmdcXFsQEYjIxsbiJuKG4uZiJ
mJWYoZhtqr2TdH/ev6Mb+VlUit31YFLonfw755p3neXqqxdDcdFZa2LpI6W9
MZWrGffQMnzBtLaVZDK7iFBd0Od8X3P++pta96llHTtLNrikN2gvQMQRn8kD
YR+8u59guhvNYDXz6Z1MN6ZR4lxbZBD70ZGfSWK/gGyXXHKlfn0IPFcT9k4m
v4M59E72kstqan/vlPpvt/zpZ/ZOFHMTpbwuUe8vuncXnWS9k1YSfnwAIYQQ
soTT3FWmd5JEs00qtnRaXlzv1CidfvPXR//gg/XPdI3/zV9OfLV75p475vbt
tpqlZum0+9Un/2V2093TG74z3XuL+M+Zf3ty/sB+e4LZGTGBuIm4obi5mImY
1dAH3t6ontI/30l+INyag3JkD+/0OuchpN876d51lquvWrbQQwZrhpLDn0Qn
dTQPGQIHIzEOLYMLprOtZKusHKnGN6Xm/FPvnUIeX8Uc5Bs57gMhrZh0N5r+
aiacMrONaRSdLR87ziGzbOM7z7rAEzL09cE/q1TOd9L7Hcy+d/LV1J45y893
SvG3W/r0M3wnSnS+U1rrEvn+ont30cmhd9J7uySEEEJIMPROIYnslAovnZYX
2Du9563Dv3Xp0U9+dOJrfzdz1/rT//TQmf/3b3O7d82/9OJC7eW5fbvP9P34
1EPfn7mn1+qdZu6549TDD5556sm5/c8vHH55/qUDYmJxE3FDcXMxk6Of+ujw
hy8dfO9bMxnfqe4ZdtU7h8gDk9Y1Qc2BKSRpj6+beu+kfdcZrr5q2RRr512S
wGrqb0zth17z0DJiwXS2lWyVtSsUvfln1DtJN47iRxrHZdoPhOK8hWr3TiYb
0yg6R8Srtwd+awwG5G/OPLQN9i9D+Hr5ZpXS+E46v4OZ907udQmsl2p8p9R+
u0OeftrvRAnHd0pnXaK3v+bdRYfeiRBCCClx4jVI8W5VxYQ0S2UonZYX2Du9
963DH373sb/6zKkt98/t6V84cnhu3/On//nhmfs2zN67YfaBjeL74t+p766d
vPlGEfGf2fvvnH3w3tn77xITzNx35+lHHxY3adxwT7+YWMxq+LffnbR3kpwA
3x4sorG3WW+Oa+o5FtbtnZTCDrvS6Z2i7zrD1Vctm3zt/H+nVgyEorExtR96
vVWIWjCdbSVbZYMKRWf+JeidND5YTe+BaD3WwY1D7ySNzkfaOWODu35ndI6C
3c//0A3iqyyy7J3ivF4F79TznEyrd5KOx5X41SOd3knJ90DE30QprovO9te6
u+jkdp1dwl9zQgghZEnGeqPP51YVjbRfKknptLzI6+zeMvTBd9Sv/ETj8rr+
584fH1+ovTy7+b5GxfStr0/d0jN9+7dn7rx15nu3iQlm7u2d+d7t03fcMn3r
2qlvf2Pq5q9P3vz12S33L9QOiRuKm4tpxKzEDMVs0+6drKxZv2H7tubHZjkf
TOPMIfKUfvXVDZGHXdldZ+e96yxXX7VseuvrP+7Q3pjaD73WoU30gulsq2S9
k878MxrfSbrBMzrfSXUs7EpVeyfzjWmURGdihMe7gr478rQo/gYm7Nou/8tO
8t7J3phmv4Ou56R+pSN7+NQXVPoWWNI76Sx5dtfZaRSAxveezrpoXzEXcXfR
ybp3Wr2x9eGVjCtOCCGEGMd6c8/nVtWNr2UqT+m0vOBxxd8y8l//yyuf/8zU
d9fO7d+zUDt0ettDM9+7bfYH98zcffvJb/zvqVu+eeYnT8zt6Z/b2y/+M7Wu
5+RNq2c23ja76e6Zu+84/c//uHDkkLihuLmYiZhVo3RKOK643p6qxh+vvVFN
ED26bPCTvNzfj+6ddO8609VPNoSs/7a6G1P5QCjrjsYBizv9vrMXIhZM68mW
vHcKn79p7xT91FKO6xs6uHeC8Z1cD4T1VlEPfEyhce+k8xtkOmUuG9Mo2Y3v
JH25aH3pexJKv8xkXPF4r1eyF8/lzvD18jsy7J1kr0We/kTnxcr4t1v1C+Va
U7N3ojQ3UfxXKr1tFXl30Um/d1qz/nHrGkanCqsHPkmQEEIIIVqx3krzuVWl
4+6aylM6LS+wd2pm8P1vG/nIZcf/5xfP7vyP10aHzz79s9OPPnzqhw9M994y
cf21U+u/Nben/8L0VGOY8T39U7d/++QNX53u/Y6Y4NXHHjn3i39v3GTnf4ib
i5mIWTmzDb/30POdxKGub2d7zbZd/et93/EP0eCMm+EZXGjVBmfECdnHvkcM
CeL+TmPBpEMJrQqsl+IiiKi7znb1kw0h6z/w1NyYsoR9jFpQ1HDQwQWL3laJ
rrPTmL9x76Tx1HKOaqWXcMpPikjt8+xWyw6BzXsn/dXUnjKPjWmU7D7PLvCk
cj9SkeWGdJXF64Pehw+Gne8U7/XKebBc82wVWb7fHZ0P6wzcS+jLhTUr2XV2
iX+75RNLB0zTeyeKvYnSfaXSeHvVuLvoZNA7ud9ZxvQGUiOEEEKsLCZQ+MJn
t0HyuVXV41RP5Smdlpepd7owPXV+/Ni5XTubpdP/OnnT6tlNdy/UXn59fv71
+bmFI4dmf/j9ybU3nLzxazN3fnful8+cP35M3CTl3mnXRvtPuu1d3/Y5GPYf
Lq0fBj/Cu7WHaY3aOuY/CnAmsOcT3IEPuX7H+uzysXrzj6eBiwjEHnj7+3V7
kNhtG9YY3HVmqx+6bN71VV87I/lEquiNKU3zHvU+Bsu/caIXTGdbJeudQudv
sKm1n1qehXTdtX0Xsu3W3CaR/YnJAxE8SDe/zk5jNY2nzGFjGkVvy8eIsjRo
rlrw+lbFk7z9C9vf/jJkw67euK392133PJ8TvV7ZC7y+sQrNsYCc0YHEZBua
y+Z5BHXqC9cmini5aI++7u9qEv92b3u8vuhfeFmxo/lOFH8TpftKtSLq7VXz
TSoqWV5nt6rxZI4+P5YQQghxsphA4Quf3QbJ51ZVD72TE8l1di/seX3u3OKF
8wuHD07fsW7i7780efPXT215YG73rtdGhl4bHpx7/penHvnh1HdvPnn9tdMb
bl04/LKYWNxE3DDN6+wae6rOIKXt83DWP97vDBnR2F2Xf2jamlUbPJON7fId
ejTn0/558JT7sHFjGvvqzszr7lrJ+bu2h+8v2hF3ndnqhy6bZ32tQ0j5brl0
GN6IjSmNtNmI6J1MFixyWyW8zi5s/vqbWv+p5XqG2MdNrQdX3K90u0WPsmX+
QCTZaPqrGWfKjDemUTS3vHmkRYpz9K2sUPxdhO+pKzv9Q1ZES5/PiV6v2htq
1QZXA+b8gq/e6HkEtc5Raa9y2HhEzraSXzuWwm+39+mnelXUeydKtIlSfKWy
Zxj69qr5JhWa7McVDxvrjBBCCCGhsd7j87lVpcN1du74xxXf/dz5kycWL5xf
fP31haEjsz+4Z/LmG6dvXzdz352nHtp0auuW0w9vPvWjTbMP3jvzvdun1vXM
br5/YWhATCxuIm4obp7CuOKliOYYtmHrVc4/p5Zn2WSPfhpDOusm0UNcgU2t
85Fqxg9Eng9QZaO95Y0jL0nsamKbrGaJ+yTUvs6udGn1ThsiBjy3n8kbVMVp
RJINfl6ulOJNQTy3nXI4pFDSnKwSq0wIIYRUM/ROOmFccV8avdN73zr84Xcf
+6vPnNpy/9ze3QtDR86fPPH62bMLg0dO/WjT1K3/Z3rDrdO935la1zN5842T
a2+YuqVnZuNtM3ffMX3b/z31jw8uDA2IicVNxA3FzcVMxKyGf/vdYrb0TkWv
RcmXLXiFF71TajH5g772A8GHj6e85WPMWfKCad3jWMilkcZlUeV7p2cjr6Wy
WgvrSjF6p8LfFOxBxhpnba1/PLR30pmsEqtMCCGEVDP0TpGRtkzlqZ4K653e
89bh37r06Cc/OvG1v5vZuP70th+d27njtfrY/KGXZh+8d+rb35ha/62pW755
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
AB3GVzcFGyfpgE5O3fT/AdA+4xU=
   "], {{0, 0}, {1576, 954}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{788, 477},
  PlotRange->{{0, 1576}, {0, 954}}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7483915315565805`*^9},
 CellID->89971072],

Cell["\<\
The buttons at the top of the window perform the following actions:\
\>", "Text",
 CellID->215845540],

Cell[TextData[{
 StyleBox["    \[FilledSquare]",
  FontColor->RGBColor[0.8, 0.043, 0.008]],
 " ",
 StyleBox["Return:",
  FontWeight->"Bold"],
 " Finish the evaluation with no further interruptions and return the \
result."
}], "Text",
 CellChangeTimes->{{3.7483866036589813`*^9, 3.7483866198305144`*^9}, 
   3.7483866918464465`*^9, {3.748386738870096*^9, 3.748386740220031*^9}},
 CellID->378675105],

Cell[TextData[{
 StyleBox["    \[FilledSquare]",
  FontColor->RGBColor[0.8, 0.043, 0.008]],
 " ",
 StyleBox["Continue:",
  FontWeight->"Bold"],
 " Resume evaluation until the next breakpoint is encountered."
}], "Text",
 CellChangeTimes->{{3.7483867516627045`*^9, 3.748386783447815*^9}},
 CellID->110516947],

Cell[TextData[{
 StyleBox["    \[FilledSquare]",
  FontColor->RGBColor[0.8, 0.043, 0.008]],
 " ",
 StyleBox["Next:",
  FontWeight->"Bold"],
 " Proceed to the next expression in the trace."
}], "Text",
 CellChangeTimes->{{3.7483867516627045`*^9, 3.748386791267593*^9}},
 CellID->431443114],

Cell[TextData[{
 StyleBox["    \[FilledSquare]",
  FontColor->RGBColor[0.8, 0.043, 0.008]],
 " ",
 StyleBox["Step:",
  FontWeight->"Bold"],
 " Same as \[OpenCurlyDoubleQuote]Next\[CloseCurlyDoubleQuote], except \
includes atomic expressions."
}], "Text",
 CellChangeTimes->{{3.7483867516627045`*^9, 3.7483868015742984`*^9}},
 CellID->1021861671],

Cell["\<\
Additional breakpoints can be added during evaluation by clicking the \"+\" \
button to the right of the breakpoints:\
\>", "Text",
 CellID->142242215],

Cell[" ", "Text",
 CellChangeTimes->{3.748393877669798*^9},
 CellID->156731695],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3X2QXWld4PEAClslVQLDixbsyotYpbWWYiSFQ1kqluDG5Q8VyyVVlkF0
cJdaQLBUQCvujEuG9wF5HQQygDgS0AWpUaldNcIMMyTTeZ0k/ZpOvyTd6XSn
X6aTTs8L+3Sfvie37739kif93NvP7c+nfpXqvvec0zfp1D11vnXOuS/4nTf/
2i1P3LZt29v+Q/jj1173x7/w1re+7u2//rTwzW+86W3//Q1v+r3f/S9v+sPf
e8PvvfVlv/Ok8OBXwx//6cnbti18/dhjjz266JFF8/PzVxddWTRb8TAAAAAA
W0YZhS4vKkrR1atX5+fnH3nkkaImVWel+UVzc3NFUApbmJ6enqy4VDEBAAAA
QJsqE1AZhaYWTU9Pz8zMzM7OXrlyZW5urrovlacqhccvX75cNqWwtYsXL46N
jV1YNAoAAADAFlC0oLGKixcvFtFpamqq6EtlXKrPSmGZsGRYK2zn3LlzQ0ND
g4ODA4vOAgAAANDWigo0uGhoaGh4ePjcuXMjIyMXLly4ePHipUuXpqeny7hU
ZqXiIripqamJiYmxsbGwVtjImTNnenp6uru7uxZ1AgAAANDWigrUvainp6e3
t7evr6+/v39wcPDcuXMXLlwo4tLly5eL2y6VWWlmZmZiYiIsEBYLy4d1T58+
/dBDDx0/fvzYoqOLjgAAAADQdoryc6zi+PHjJ06ceOihh06ePNnZ2dnT03P2
7Nlz586NjY1NTk4+/PDDxWlLRVkK34YHw1MjIyMDAwPd3d1hrbCRw4cPHzp0
6DuLHgAAAACgrRUV6ODBg4cOHXrwwQc7OjqOHDly/PjxU6dOdXd3nz17dmRk
ZGJiYnp6uribd3nCUlGWvgQAAAAAdTo7O/v7+8+fPz8+Pl5cEFfcuHt2djZ8
OzExMTo6Ghb7LgAAAABU+dKXvvTQQw/19vYODw+PjY1NTU3Nzs5euXKl/Ei4
8fHxkZGRokG1+sUCAAAAsLbJpih60fHjx3t6eoaGhopbLRVlqbwU7uLFi+fP
n1eWAAAAAHLRzLJ07Nix7u7uwcHB4hPiHn744eKEpenp6fDt2NjYuXPnlCUA
AACAXDS5LHV1dQ0MDIyOjk5MTMzMzJSXwoVvL1y4MDw8rCwBAAAA5KKZZeno
0aOdnZ3lx8MVZSn8WZSl0dHRoaEhZQkAAAAgF+tMQ/9aZf2P1JSlI0eOnD59
uihL4+PjMzMz5U2Witt3Dw4OKksAAAAAuWhmWTp8+PCpU6f6+/vPnz8/Pj4+
PT09Ozsb/izL0sDAgLIEAAAAkItmlqWOjo6yLF28eLEsS5cuXSo+GE5ZAgAA
AMhIk8vSyZMnz5w5c+7cuaIslR8MV5Sls2fPKksAAAAAuVhnWbpBRS968MEH
q8vS1NSUsgQAAACQryaXpYceekhZAgAAAGgP0bEo4mo4ZQkAAACgnShLAAAA
AMRRlgAAAACIoywBAAAAECe6LF0XZQkAAACg/ShLAAAAAMTZwHzkajgAAACA
LUVZAgAAACCOsgQAAABAHGUJAAAAgDgbWJZWoSwBAAAAtB9lCQAAAIA4yhIA
AAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAA
QBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKYsAQAAABBH
WQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYA
AAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA415uJdu/erSwBAAAA
8N3rLEu7K5QlAAAAACKy0vXGJWUJAAAAoC3FZaXrikvKEgAAAEBbut6sVP+t
sgQAAACwNV1vVlrlQWUJAAAAYEtZf1la5+PKEgAAAMAWsc6ydL1PKUsAAAAA
bW89ZSn6WWUJAAAAoI2t2YVunLIEAAAA0JaUJQAAAADiKEsAAAAAxFGWAAAA
AIijLAEAAAAQR1kCAAAAII6yBAAAAEAcZQkAAACAOMoSAAAAAHGUJQAAAADi
KEsAAAAAxFGWAAAAAIijLAEAAAAQR1kCAAAAII6yBAAAAEAcZQkAAACAOMoS
AAAAAHGUJQAAAADiKEsAAAAAxFGWAAAAAIijLAEAAAAQR1kCAAAAII6yBAAA
AEAcZQkAAACAOMoSAAAAAHGUJQAAAADiKEsAAAAAxHkwMWUJAAAAoF0pSwAA
AADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAA
cZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxl
CQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIA
AAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAA
iKMsAQAAABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIo
SwAAAADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIA
AAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAA
QBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBH
WQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYA
AAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAA
AOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA4
yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIE
AAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAA
ABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADE
UZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQl
AAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxlCQAA
AIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIAAAAg
jrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKMs
AQAAABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAA
AADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAA
cZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIAAAAgjrIEAAAAQBxl
CQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAAiKMsAQAAABBHWQIA
AAAgjrIEAAAAQBxlCQAAAIA4yhIAAAAAcZQlAAAAAOIoSwAAAADEUZYAAAAA
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
Ju1YbcurvNZlG699+et6kStseJVXuFhS1thoJdnU/92rItoKr2WNFxBWW7bZ
jmvNb5WnJhu1rYYvYOHHr/oiXekHeVCWALKgLAGQ1OYqS4sL7C2evI6ytGxz
jWJT8XjNKU1rdou6TrJBZWntV7i0ncoiDVdYOdrUXSpY+1rWegHXzv6q+3dY
5an6b1f5Qau/SGUJ8qAsAWRBWQIgqU1XlkqRZalYptEP2L935Wa10muobH95
KrmxsrSOV1j+tB27K/dzqlu+8c9Z3nZWW2Y9L6Cjo7yJU20eavhUTVlaKSwt
P7VKWYJsKUsAWVCWAEiq7cpSzfVg69zyaksX959evPN0x0aUpXW8wqplG1zy
ttrPWf7oKuc1rfUCroWjhndHb/xUw7LU4F9i2RPKEmRLWQLIgrIEQFKbpizt
31t7UsyNnLPU2Kq9ZQ2LgWnHsu2s90XWbmntV1izZMNtxZeltV/AtbuDL/vM
uDWeWuHiuPpXv+aLVJYgD8oSQBaUJQCS2iRlqfbG0JM3dp+lxrckWv0ascav
dkf1tXAbeJ+l1V9h1c9a+PF7d+xYK88sX2mNv+laL6BShKpuxF25Sm6Vpybr
ytJKZ0et+SKVJciDsgSQBWUJgKRaU5YaWXdZql6wUahaWKrRp8XVfjbc2hek
rf1RZ+t6kQ23u+orrHuNyz84bqUfXfc3W+lvusYLqH06fF99u+0Vnmr0d1/+
0XGNX3jcvyGwCShLAFlQlgBIanOesxSWqlywtXv33t1795fBo2blxptbXLBy
Xs3SvZGWAsjyLYcfudQ+Vjg7Zumkm6Wfv5TFll7pul9kA6u8wvofVL6S8vqz
qj63Y/fu3ZWXt6wjrf43XeMFLPaj8m+9o6YDNXzq2jV29c2qskLta1z/v+FS
a3IWE2wqyhJAFpQlAJLaJGWp7j5LHZX7Gi0sulAwdix1lKrTcWrvFrTsXJri
vtvbataq2XLHKnfIrt7QtS2tuKmGL3I1K7zCmpsg1dz36Nojy/4W5Zau52+6
8j9R8SOXVljIPcsueVv5qaWfV3+K1P7qf8JKP7quf0NlCTYjZQkgC8oSAElt
mrIUY9U7XAOQlrIEkAVlCYCkNlVZ6ti7rrN9lq+yQ1kCaAllCSALyhIASW2q
srR/d8RNm8MWlSWAFlCWALKgLAGQVHPLUuXW1I1S0OJzMY1o+U2AAGgSZQkg
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
PnZpYuGG3h0HJz7wrotvf8ulO94dFnj4K3df+ea/Lqxy77+F1cNGwqbKzbb8
OM4YYzbVlHEpdVbaqSwBZEJZAiCplpSlxy5NPDpy/soD9y5mpf958U/fNvXp
j813n3786tXHr87N93ROfe6vxm99+8V3/MHkh9879537Hh09H1ZRlowxZs1R
lgCooSwBkFQLroY71vH43JXvPvbofNepSx/cO/bW3x+/7Z3Td31q7tADj5w9
80h/39yD35m++3MT773t4h+/6dKH3jPfdTosHFYJK7oazhhjVhlXwwFQT1kC
IKlm38H70P2PXrzw3cceDT94/kzP1Gc+Pn7bOy59YO/kJz88/flPT//NXTNf
3Df9hU9PffYTkx/9wMTePVP77pw/0xsWDquEFcPq7uBtjDENxx28AWhIWQIg
qWaUpR94Sv+Ln33+1181fdedc4cPzZ/pefTihccvX57v65n+wqcn3vO/Ln3o
PZfuePfE3j3jt71j/Na3T9y+Z/Ij75/82Acvvf9/T//1Z+fP9IaFwyphxbB6
2EjYVP+PPDtsVlkyxphiGnak1HFJWQLIgrIEQFLNKEvPeUr/Dz9r6BUvHfuD
N0x+5H0zX/rClXsPPDI8eLXz5NRnPzHxrj+beN9fTNz+5xff8Zaxt/3+2Ft/
/+Lb3zLx7j+/9IF3hT+nP/ep+c5TYeGwSlgxrB42MvSLL+1/8bOUJWOMKWaV
gpQ0LilLAFlQlgBIqilXw33vmR/6/oGffMHwq24e+a1fHXvLLQuXxR05dPXk
8ZkvfX7y43dMffaTi5e/vf/SHbdf+uDeSx9539SnPxYemfrkh2e+/MWrp06E
hcMqYcWwethI2NSZ5z8tbFZZMsaYNdtRurikLAFkQVkCIKlm3cH7e8889/v6
X3TT2R977sBLXjjy26+ZveerV0+duPzv/zL7L9+4cuj+qyeOXj390HzXqTDh
8avHDs99577L//qNy9/8l/BtWDisElYMq4eNhE0tZCV38DbGbPlZZzVKFJeU
JYAsKEsAJNWMslQ3Q7/0spm/u3u+r/vqQ8fmThy52nnykeGBxy/PLr2ky7OP
DJ5dOFXp+JGwQFgsLBxWabiplh/WGWNMq+a6elGKuKQsAWRBWQIgqZaUpeFf
fvnsP37t0bHRoiBd+fY35w4ffOzSRPGSwhfh2yvf/vfwVFggLBYWDqsoS8YY
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
ePiB5Me1J79w05nbv5osliycrFJjNFz4jjb/Pndx3x2dL3LaecfarVvOFtYW
3PzKp50779i3uNi9od13FH8nVPbuMvd+M3wjmSrqHelNl+56CNUPlC3/brp0
5pnyxsxZL1D49lCkkEzZCgsW0VbhKq/XpqvpgkvGHouopq721gqVMLctYwKO
/AMRTFfax6irh1RUo8VXs58lm2/Mnk5MxT92nhpwtFT47i/+nc1+PgR+X0PN
GOzN1dfnVfizM6fXWGQAmtvnbG1n2bWDFW3yt7u4qnFnoj6aqPm6FJ5fYndX
LDKczVmst3FaBU6XOHNKBADiXdeHUZd9gI4fP3HbbbdduHAhfpVk4WSVZMXB
lSrP0GbwPvSvf+3MX936zOKJSyeOXTx44PzuXefu++b5B+6/8LcPXvjeQ+cf
+u65b38zeTJ5KVkgWSxZOFmlxgzelZKlTujQ+iqn1mQouwNX0p1wYuM7n67r
vvzMLrCx4cbuWDd2sb6D1vV19K6HVf3ushXXrrd1inYXaMygYD03C5eRvRPK
LVhcW4WqvLnRnZ3K7Ny9u2fJqseirKkrvLV627t9dPflNmb57VnBgShIGjMN
WdZoY5gsxTVm5yi2Vi3+MbXKQKOlwl/LohfDnw/ZZftNlir8Dg4nWQoEouGK
Nv3bnV/V+DNR3SZqvi6F55fY3ZXqK1nq/ZVMnVR8ByQANOC6Poy67AN02223
Xf/pT9/ypS9FhkvJYsnCySrJioMuW9bQkqUn/9WvnPrSFy4deeqZUyvPnjnz
zMnFCz/43qkv3rz0yQ8tf+ojp//3/7rwyPeSJ9deOrWSLJYsnKwy4GQpO7Hu
5l9Hs3e5vXc/+3ZvPNG5Mc788fiOOxq+Y83JQkp2PdjqF5ct5y/6O1s3CXl/
7y9tzKDgVMfxf98uKFiltkqvG7r5XOzcpvdGDWXbj2/q6LdW8O44UMKc1cMq
HYhsrhTZaFWqOZxkKboxK/dZGvyAuFZ0tTPcOafgxbzPh8xR7TdZqvI7OJRk
qXNcezfQW9HGf7vzqlrlTFSziQb0SZV3fondXblG+yytFS/zHZA5OSMAUK51
ch/OWhOkkxTFhEuVFh6EQSVLL3zuvhf/2P6f/TsHXvbCx//Rzx58+c8fee3v
npn/y0tHDz97/tyzqxeeObl4/sHvLn/6Yyeuftviu96+/OefuPDwA88sLz27
uposkCyWLJyskqyYrJ5sJNlUssFks40mS8Er9t5L2Zwr5N4VIq4nG0iWgndg
NbuQNFT9/GLkDA3bWLigX0vNi/Nwt47YZKmwYFFtld9ZIbP33vvuyO3HN3Xs
W6u1XM44n+jfpMuBhSIPRGA/sY1WoZrDSZaqNmYldUYAVd98uDdI/osFnw+Z
92qfyVKV38EhJEvt50JBdG9JG//tDle12pmoZhM1XJey80vs7sr1lyxF6evs
BQBb2vqlsmQpIDIvGnmsdHlgydJarPT3/+7Bf/rSQ6+cOfIf/+2xN84ufeKD
5x+8v5UdrcdK95/+6v9evuHjJz/0npNz1yb/OfO1r1743kPtBZaXkgWSVZIV
k9WTjSSb2v9zP7EWLjXfZ6n4Bqb8YjH6UrT5ZCl214Osfv5CBTcFrWUDxe+r
Y0awp0ydm8e85i+9181JlvKOcG+AV34v3XSyVHB8c7YQbuSYZUJ1DN4jxjZa
fiFHkyxVb8xKYlq+tsJctfNizvs7b/Klnk010mcp7ndw8MlST4N1vRaOTxr8
7Q5XtdqZqK8+S03VpfT8UiFkLDGEZEm0BAB1SZYKlKZG4xArXR5csvTTzzvw
Cy968jd++dgf/pelj7zv1P/63Jk7vnb+/m9f+MHfri48ev7B+8/Mf3nlc59e
+sRcK1la+sQHVz7/mTO3f/X8Q99d/eGjF37wvWThZJVkxWT1ZCNP/uYvH/jF
F+37mecNZJ6lnV0d27uXLb312NjGHTk2t914shS96wFWP69sObXr3l6mmvGN
mVuMmslSScFi2ipU5eiQJG77A0qWgo2T81LEnVf0gcjpezDZyVKVxqwk5p53
cXe135nu8q1vvDDvDQ//y6tXsEtX7WSpyu/gwJOldF1iA+bmfruDVa14Jqrb
RI3Wpbz9I3dXTrIEAGOsXkZUb61JVJAdjUmsdHlwydLPPO/AL7748L975cpN
nzq/e9fqYz88/+B3T+38/NJ1H1r+5IeWr/9o8nzy7+KfXX3iXW9LHsl/lj/1
4eXPfHL5Ux9JFli67sOnvvj5ZJW1FXfvShZONnXgH7y432QpcMWX/tqZ9Tme
O5OEVkyWchXdWDWTLJXveoDVL9h8oHZlw0TiGzO3GPWSpYjxK6VtFVqtQkgS
s/0xSJbWn24iWdo41tmdS5aCIlp+Y9hd9O9M93qpoKQwRekdgDWYZKnO51Wo
+EWbrJks9fwc0Tmr2d/uYFUrnonqN1GDdYlp/6jdlRvaaLiB9SsEgCnWOtEP
Z60JFUyQxidWujzA0XA/vv+lP3noVb++Nghu132Xjh5ZXXh0+cbr1kKkP337
4rXbT37g3Usffu/Sx96fLLD0ybmlj33g5AevPfneqxff/SeL73r7iXe9ffmm
T60u7ElWTFZPlkk2lWww2WzTyVL75X37du9e/4qXzpe8dLZQ2vE+/1K09MZq
cKPhoofprL/cT/XzNx9T3+A9WUxj5hajVrJUXrDO8wVt1V+yFLP9xpOlgmYd
UJ+lvLvd8vXHPlmq3piV9NWbImLTeT32ul7sfQMWFSq4bF/JUvvlar+DRZuM
HFYVTJIyXbc6T+Rutanf7vQLMcciIuKrvPdm6hI9rq1kd+UGnSxtBGB6LAFA
Da2T+3DWmlw9OdJYxUqXBzuD948//n//X0/97isX/+zq8w/tXl3Yc2rH55Y+
9v7lP//E0sc/cPxP/sfite8881e3nt+96/wDu5L/LF6z/fg7/mjpo+9fvuHj
Sx//4Kmd/3P1sT3JisnqyUaSTa3FSn3O4B13LRrxB+hueQuUX0S3exiE794j
kqXYXQ+0+tE3EcG/6MbcfUYWo7VMbqCxs8fmlyVFFSy/4o0mS8Xbr5oslb+1
cv/MnvdCuJFjlskciNbJYGfmK/8qJ0sxv0FVlxxKY1YS0/J9bDmvI0mwq1nv
R0uoWJn3asVkqd7nVejDs/Nszo4qJkuhenQ9FxeXVPztzvuFKmng0PPNN1H9
T6roaKl4d+WaT5YW97XHnqY+y2KGngIAGa1T6XDWmmjpNGmsYqXLg0uW1h/7
XvL8x3/pZUf/n9edvefOiwcPnL3766e++PmVz15/cu7aY29+w+L7/vT87l3P
nFxcm9B7967FD7z7+FvfeHLuPckCp2/5wrm/+T9rq9xzZ7J6spFkU53NFu+9
sM9ScgGYuW6+o+diMHtF3Jm/omvB5LKyexqj4FC1qDvWpGDBKX2KN1dh2cFW
v9LAh9IxGFVq3yM8XChvkEhZj65swcrbqq/RcBHbr5wsRby1OvetwYGW4d+k
mPvMqJFHi6Gb3OrJUnw1o5ccRmNW0kS3p6ItZz4vWrsqjS+CVd44sKVdv4r6
LNX7vOocrOxnWM7T5W2a3kvEoLHQaLi+f7vDC4finMgzUe0mavaTKuL0GrG7
cgNIltJnlp1xE5oBQMt1fRh12QeiXtWmuEEKdMKlsYqVLg8xWXrm5OKlI4fP
ffue9Vjpvx1/xx8t3/Dx1YVHn71w4dkL51cf27P82U+fuPqtx9/2h0sf/rPz
37n30tHDySoNJ0t37Otco3ffN63dxbT/+Jh+cdPmTA/t5XovwDsLpF7vvUDN
HWWzu30jlV41lci0/jK6M7X5rml5I3Y9sOoXlq27vvl3A4E/Y5c3ZlCwV0fZ
HXlswWLaqr9kqXD7FZo69UzxW6tnz13LBb9OPbbjTJUDET8Ssa9qVl5yCI1Z
ycC6LOXGAus7y95p57zJU+/LzR8LGjb0hm6/n/v6vGoXeN96urmz51C1Plqq
fq6km6jk42L9hWCy1Pdv9+6NCKaribPRTeSZqH4TNftJdbng/BKzu1iDHA23
uFbnGmkXAFvXdX0YddkHol7VprhBCmy5ZKlnNNzDu589f+7yM5dWf/jIyQ9e
c+y///6Jd7195abrz9//7YuP7794YN/5735n5QufXfyzdx1/8xtOfui9qz98
NFk4WSVZscnRcGvPdqYD7UpuOlM35P/tcXFtzdRimUE8GxeXndd7N1M0f0vX
yt1FCPa56fmrdMmuB1b9wrIFBoiEL7xDN2JljRkUPPglyVKVgpW2VZ+j4Yq2
H9/UPc8UvLV69tzd3MGiR953VToQ/TRafDXrLFl93Vb5Ixuzktrzv5QJRiWd
veWGJL1pQ89bN9Q24aQ28H7u6/Nqs6EW04nFZt/DfV1HMKpBN6tcNHir81p4
oQZ+uwPvrFBpo85EfTVRg59U7ZUKT6+RJ6lCg0yW+l4VALa61jl+OGtNtC04
Gq5rBu/777t0/OnLz1y6/Oyzq/sfW/7zT5x419tOfuCapes+vPK5G1ZuvunU
529c+Ysblj/zyaWPfWDxmu3LN35qdf/eZOFklWTFZPUGZvAeC7VmlNhQawDA
kIxP2YIDrob4jujrEMcYcVOHh7nlLRh5IMb4V3Z8RLd8ZeH3bPsueXcwAK35
JoweDTd2Nkq5r7i0nb5WNd/R0SPIJsBYHNik5TopVEHuE7lYmbGoMgBMJslS
jK05g/e+n3negV988eF/98qVmz51/oH7V/c/dun408+ePbu677GVv7hh8b3/
78kPvffk3HsWr9l+4l1vO3H1Wxev3b700fcvffyDJ9///638z8+s7t+bLJys
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
pk8nAuqEQq2MqJUXtTKldKz0/wMsMEg9
   "], {{0, 0}, {1566, 945}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->NCache[{783, 
     Rational[945, 2]}, {783, 472.5}],
  PlotRange->{{0, 1566}, {0, 945}}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.748391626325635*^9, {3.748393128911044*^9, 3.7483931494844203`*^9}},
 CellID->209436321],

Cell["To remove breakpoints, just click them in the list.", "Text",
 CellChangeTimes->{{3.764086004223688*^9, 3.764086005246028*^9}},
 CellID->88176781],

Cell["Now clicking \"Continue\" will stop on multiplication as well:", "Text",
 CellChangeTimes->{3.764085920676964*^9},
 CellID->275176949],

Cell[" ", "Text",
 CellChangeTimes->{3.748393877669798*^9},
 CellID->542909312],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3U9vW+ee2HGjBYou+xYKZNFtdgV3XXZnTNGFu5qZdjjoZgrMFC668GsY
7n0BA957MRBAGAX8R1OLo0x0Y0WJEslHluQklp3o+jqy66tWuh6V0hHJI/KQ
Ig/PT+aRPh8cGA7Pn4dMsvrieZ7zr//8v/1J/Z9du3btb/5l+48/+bP/8e/+
+q//7H/+h3/V/of/+Fd/81//8q/+4r/8+7/673/xl3/x1//2z/95+8P/1f7j
3/yLa9eO//6x448dhycODg7+34n/e2L/xB86PnT8HwAAAAAuqW4C6kahtBGl
vShtRwcHB2lN6salj2f1Fac0OnWLU7Y1pYO+73gHAAAAwCXVTUDZDNUNUN36
lNakbH0aFp2605yyxanbmtJB9zp+BQAAAOCS6iagbIZKA1S2PuVOfMqNTtlp
Tt3i1M1N6aBvT/weAAAAgMvlzZs32X9MK1A3Q3UDVLc+9U186ltz1xeduls5
dYtTd2pT2prenPjdiV0AAAAALqm0/6QtKG1Q3UlQ3fqU3fRpMD31Rae+aU59
xanbmn458TMAAAAAl1Taf7oNqq8+5U586qan0dEptzilren169evTuwAAAAA
cEml/ef169dpg8qtTyPSU193ys506kanbnFKc1N70JcvX/504kcAAAAALosf
OtJ/TPvPy5cv0wb1+vXrbn3qpqfsrKe+7tQ32akvOqXTnLLFKW1N7dFfvHix
fWILAAAAgEsnLT8vXrxIM9RPP/2UrU/pxKe+9NQ35alvhV1fdNrd3f3555+z
xSnNTe2hNzc3nz9/vrGxkQAAAABw6WxsbDx//nxzczNtUC9evMjWp59//nl3
d7cvPfWttku702B06k5zaj8qneDUfn7amtrjPnv2bH19fW1t7XsAAAAALovv
OtJ/XFtbW19ff/bsWZIkz58/TwPUDz/88NNPP41OT2l3yq6wS99el850+uWX
X9q3tx/SflT7md3c1B6uPfTq6uo3J1ZWVr4GAAAA4NJZWVlJ+8/q6up33323
traWToLa3Nx88eJFOvEpm57SN9xlV9tlJzulL7DrRqcff/xxa2ur/bRnz559
//337SG+/fbb9ojLy8tPnz797YmlpaUvAQAAALh0lpaW0v7z9OnT5eXllZWV
1dXV77///tmzZ8+fP0/T06tXr9K9nn7/+993X2/XnfKUdqfsZKfd3d00Om1u
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
LlyI5xLPfnrdoHqK/hu8x3onAAAAaJHeaU781cmSWmnq5zttba11NFmxYDcK
O6xz587t3bs391vPPffc448/Hv23zg3pnQAAAKAteqdZtPHhk6nr6babpfzT
mRrN77S2srS0vBr3O9PoYdZWllM3tn2+0+jnTuXd3nSPFwAAAK4weqfZs3/z
U92K6VMfPh9XTBt/1ftK89OZ8gxKnk4bszLxHqZ/80srvSpobXXQOrWyF1M+
XgAAALji6J1mzeWhyZoyyZ1XvJG1RMuTNJkeZm37hKMJ7cR0jxcAAACuQHqn
GdS/aC6TT43vZKeOtbXV5aVMGTOxHqZz67lN0FJLuzDl4wUAAIArjd5pRm3s
P//FX9punz71Sycf/KvLLd3WcB8z0R4mVQUtLS33r7qb2I3qnQAAAKAleicA
AAAA2qB3AgAAAGDszpw5o3cCAAAAYLzOnDlz33336Z0AAAAAGKO4dLp8+bLe
CQAAAIBxGZROW+Z3AgAAAGBMkqXTlt4JAAAAgDH5xje+ce+99362b+fOnakF
9E4AAAAAtEHvBAAAAEAb9E4AAAAAtEHvBAAAAEAb9E4AAAAAtEHvBAAAAEAb
9E4AAAAAtEHvBAAAAEAb9E4AAAAAtEHvBAAAAEAb9E4AAAAAtEHvBAAAAEAb
9E4AAAAAtEHvBAAAAEAb9E4AAAAAtEHvBAAAAEAb9E4AAAAAtEHvBAAAAEAb
9E4AAAAAtEHvBAAAAEAb9E4AAAAAtEHvBAAAAEAb9E4AAAAAtEHvBAAAAEAb
9E4AAAAAtEHvBAAAAEAzOxKy39U7AQAAANDMtdde+5q+X/zFX0y1T3onAAAA
AJoZnOz06le/+jWveY3eaW6d+tjb37v0hk5e94VT5Yse+sJd8ZJLb999aDJ7
l7G6vNSxsjql26fUWv/+WZv2nsyLtdWVzpBdlRD9c3l1bTwjuLYytOlo4yPe
NZkNLvtRBAAAWrVjxw690zybq95pdXks751pT6+XcBcFyHQ4462Icm9C7wQA
AMwZvdOc6/ZONXqkusuPkUpjLvTKwZH6iDGd7TPbegMVD9b2Aa+tblc7I5c6
g5+Z1bWeETfYuW9ivd3UOwEAAO3SO825+emdxtFnMAH9U2Ia3VOdK/WukHt5
0Dtlm9SSb9XTYle7pncCAAAmQe80k5LtULYp6n7lzr2ZJRNX0qXzhS/nbHlr
6+EvRN+96eEJHNFIZQaTNcr1kI2bkrW11W3jOLGnddsnPCXPd+p2b2O+LE7v
BAAAzC2900xq2DttHd/9utnsnQKajHs/89qf/cPXLt+3nvzi4fveFH3xZz+z
e/tLT7y385WS3P7nh8N3bG1lObKyGv6+vmJWn4CWYKJHGk8Vvr1vS92DXRu6
SKzoGEcpnsILjd4pUnmWK+6X7fsitau5h9edAzw1EIMltzeQrJMqbqpk13N3
ay11b3T2orMbhUcZckfEU5sntxkdWvUjWu8EAABMhN5pJjXtnba2vnzne5fe
cNfHjodseXKCrrGLa5ZUl3Lqz5c7Hct7701/pSSJhQP3rE7BMnrvNLEjrd7V
ovtkpNPT6pwulTg1aKlbAK6udJvApaBSpKB3Shx3Xp2UvKuW+8VRo94pd5vJ
rSf3v6SjKhyq6t6pZBeWSms7vRMAADAReqeZ1Lx32trae1PnBKe7bno49+Pt
ptI7VdROh0/tvveJ3ffe995uzfKmm5/o/rOXP7/59vjsoN5XDm/tvrmijXnT
XRWf7JfZtVon9lSUDWVbm+iRBrROxXs60gVeoSv393CpzvlmeRsYvq21nIm9
KwejQe9Uts2lVOlTfvvt9E7pQ8jdtN4JAABol95pJo3SO/W/+Ib3vu4L2Vai
pHeKC6vyy/QaqXzzXHlBWSI3PzG0au/ytNQVauEa9E5byVNXluq9b5/gkSab
jkSxk+gpSo96lDmewk6XSi7UuVZsOb70rXN73SvHlqqvf6w6CWn79pNTLsUb
Hbrqrtn5TtvX6K1WfNZcsh0aatnWuruxPErvtJS6Um9t+HrCik3rnQAAgHbp
nWbSiL1T5+tfvrM7x3huJTXh3qn6Krvdd93+puVOBjMXxf/M++J9w63LoMkJ
n9YpOYN173195wKv7Tmtww4qcVJNeDczuSPNrU9SZ8eU3CUjzmhdXVsleo/h
vVpeTv6ztNgrK4OGb7zgE+YSBeIo19ktJSZY6k8clTMa9cez+Sztg90tGj+9
EwAAMBF6p5mU6Z2Gmp9uQVTRO3Uc6k4b3l8yu+UJqTNXUHxlWerysfW7bs85
/2d4lTqX1zW+NCkldxqhUK0fabZpyV7rVV0LNe4lKhuTeP+izW8v2TlTpz/d
0vLq4B+V14olbye/Nco74algA3V6p+LHUrreavg4adw7FQ1DZtN6JwAAoF16
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
l/h2d+3Eqp1vdd+DJ3egcI8ySw59I/9tfHjPsDN9aNEO5h1ctFxysfwBqLmr
OcOV3UK9bQYNdWLR6vu0q2o84zuvpFKJ9yHvOMp3I14vveHe1oY2VvDYC9r/
eB+G96JwNIpuqHo8B/fY8L1UPOyH9E7jkfsyoPfrPmfBpr/qt8JfJ6SeCdNX
VNf520fDJ/qaz9SZFx4Vz2tV9UW8VsjxlRqtdyo6+pJHwHL2NKkcYzq6/q1O
sHdq9Je/2sNS/bwc/Yq87rrKjl7vBEDKTPROS1nZRqf/Cirz5Dl42dqbCaD7
RL8S0jsFzSEQuP3k0XSWWi55jZq9Qj//4Ga0d4oHKDEamXVLXoqFHntmwd5L
p9UavdOoMyE0nCchXO3eKfuevldEXdV9K93Rf3c9XAf0F+sudPX2S8Z+5dBb
++q4odgxA73TzsS7/07TcHWye0huODsCOQvV3NX84Rqtdwoc6twjyr1P+0bs
nQb7lT6OgN3INk+9lZKbKnrshe3/9l6UPgrKbihoPHv3WHx/9O6igtvJ7jkj
yL4MGPzcD3dPI/2qr/M6IflclDONX3Dv1PyJvs4zdc4Lj6DntZIn/Hj5yuOr
MqneKdmy5fSVaWM6uqqd7Rhv79S/W5cLpCrNpsNS3TsV/2Gs6Nej3gmAzZno
nULex8dP1vELqNTy2XOyt/+qWdo7hc4hELb9onPDi15SZv6mmnMO+Uz2TpnX
MDl7XvG6MeDY8+6cvHun+rZGmAmh4TwJ4Wr2TtnWafCV1BvjnXcM/zkypw1I
fDl19lS/h5hi7zRoEPJObur8sTVdnKVuaWfOSTc1drVguEbpnYKHOvg+HRip
d9punTKnKAXtxvAI5A1cwWCG7v/O6N6+Y2d633fmnGtVeq8FHkjnIZdcMO+B
lLPnjCD3PffaavYZYLRf9TVeJ2z/XSL3CatWndLsib7GM3XeC4+KZ67Jnu+U
aBS71Uj16V41eqfEKWx5p8jlGtPRVe1sRyu9U6FEyTrKsOidAGjJXPROgyfl
vBVyX6FlX4s1nkMgcPtFrxwyn/xb/IlsmS3MZu+Us1j6G0Uf/xt87BW3FPAa
tZ2ZEMKb0iC1eqeic51C5qTJX7KoESi6pUn1TvldUp6STiNzyLV7p5xL79Jb
CN5m8FCH36cDI/RO/d3akb5/a+xGYgxyh6NyUw3ndyqo9tINZOiB5F80WPYN
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
89szzKZ5H8/53X+9EwtpsZuZxT66xvROALRN7wTTMndvtMdifnuG2TTv4zm/
+693YiEtdjOz2EfXmN4JgLbpnWBa5u6N9ljMb88wm+Z9POd3//VOLKTFbmYW
++ga0zsB0Da9E0zL3L3RHov57Rlm07yP5/zuv96JhbTYzcxiH11jeicA2qZ3
gmmZuzfaYzG/PcNsmvfxnN/91zuxkBa7mVnso2tM7wRA2/ROMC1z90Z7LOa3
Z5hN8z6e87v/eicW0mI3M4t9dI3pnQBom94JpmXu3miPxfz2DLNp3sdzfvdf
78RCuoor1ZbeCYDW6J1gWubujfZYzG/PMJvmfTznd//1TiykaZcfTM2W3gmA
1uidYFrm7o32WMxvzzCb5n0853f/9U7AgtE7AdASvRNMy6euVFf44Y/dvI/n
/O7/dH5xALSjjV+PeicANvVOAABAC/ROAGzqnQAAgBbonQDY1DsBAAAt0DsB
sDmN3klERERERBY+eicANifeOwEAAFcIvRMAk+ydAAAAALhy6J0AAAAAaIPe
CQAAAIA26J0AAAAAaIPeCQAAAIA26J0AAAAAaIPeCQAAAIA26J0AAAAAaIPe
CQAAAIA26J0AAAAAaIPeCQAAAIA2jLd3uuaXrxUREREREREREYmidxIRERER
ERERkTaidxIRERERERERkTaidxIRERERERERkTaidxIRERERERERkTaidxIR
ERERERERkTaidxIRERERERERkTaidxIRERERERERkTaidxIRERERERERkTai
dxIRERERERERkTaidxIRERERERERkTaidxIRERERERERkTaidxIRERERERER
kTYyld5p33df1WqmPqoii5Trb73nK+vrR7YG1o/suueWG6a/Y/MYgykiIiIi
IldUZrp3evm37n/Fdx74oe+KEv1P9E+9k8jEc9tXegXJ+ld27f7KrkFnsv6V
W6e+b3MXgykiIiIiIldWZrl32v+K7zz046888i/+SZTofzrVk95JxpJbd0dv
9b3TD8ttd2dOyLm+O4BbW+t3D77ebEivuDsibDCNoYiIiIiILEpmpXf6npfs
//5vP/DD3x0l+p/on1EO/sO/d+zf/5un3vD6KNH/RP+Mv55eUu8k9dI952TX
bdPejfnO9Z9e3xoexlt2Rf/efYs7YhyDWSv1R15ERERERGRCmYne6Xtesv9l
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
9zx+6ZuPRgtHq0QrRqtHGzn6sz9x8Mdevv8HvqOV+Z3Wh6ZdHd5C5RuT/jVB
3YkpcrI9v+7Ye6fgm27x8Iv2reDohvckc5jhgxl81we+tazYsZCxyjvk4Aol
bPst9U65g1PwrYD3ZcF3RMF5C/PdO9UZzFoJeUd8wz2Zn5oaE/J3N17aBqf3
ofy4Upsa0/xOIT+DrfdOyWPJHFfR/E5j++kuefgFPxONOL/TeI6levwDb646
eicREZEZTrMGqdla85iSZmkWSqdrptg7/cB3HPyx7zv2737+7J0fuvjA7st7
91x86Gvn/vvHNz9465kP3Hrmw7dFX4/+e/qPbjr1trdEif7nzIfec+YjHzjz
ofdGC2x+8D3nPvnxaJXOig/sjhaONnXwH3zfqL1Tzgnw25NFdF5trnfnNR16
LxzaOxUqe9s1nt6p+qZbPPyifcs/uvTfqQsmQgkYzOC7PuwQqnYsZKzyDrlG
hRKy/RnonQI+WC3sjujf19nB0TvlJuQj7QZzgyd+ZkLeBScf/6UDkqos2uyd
mvy+yt7o0GNyXL1T7nxcI//2GE/vVCh1RzQfojEeS8j4B91cdSZ2nd2IP+Yi
IiJXZOIn+smsNafJ7ZdmpHS6ZprX2X37gR/+7vXX/HTn8rrdX33+xPHLa4+f
ueODnYrp93/n9Nt3bLzrDzbf847NP35ntMDmB1Y2//hdG+9++8Y7bjr9B797
+m2/c+ptv3Pmzg9dXnsiWjFaPVom2lS0wWiz4+6d4tx4y6333N392KzBB9MM
tlB5Sn/x1Q2Vb7vau85u+KbbPPyifQs73vT7juDBDL7rg97aVO9YyFiN1juF
bL+l+Z1yB7yl852K3gsnMq+9U/3BrJWRzsQoz/ABpm5oqEVJNzBl13alf+2M
3jv1BrPez2DiMRle6eTdfcUXVKZ2OKd3Ctnz9q6zCygAa9/6eI4l+Iq5ipur
Ttu90w239T+80rziIiIitRM/uU9mrflNqmWandLpminPK/7th/73/+3JX/75
039008WHH7i89sS5uz+2+cfvPPOn799837ue/t3/5/Tbf+/8X3zm4gO7Lz64
O/qf0zfvePqtN2ze9s4zt79v833vPvff/+vlvU9EK0arRxuJNtUpnUacVzzs
lWrAH6+HU7RA9eyy2U/ySn69uncKvelWD3+0KWTT64YOZuEdUVh3dN6wJLM7
dfZCxY4FPdhG753Kt1+3d6p+aBXO61s6ufcI8zsl7oj4qWI98zGFtXunkJ+g
uktOZDBrpb35nXJ/XfT/mXoQ5v6zlXnFm/2+yvvlec1g+vr8G6rZO+X9Lhrq
T0J+WdX+6S76gUocab1nonEOUfPfVGFjVXlz1Rl/73TjLZ+Or2EcVGHrmU8S
FBERkaDET6WTWWuuk+yaZqd0umaKvVM3+1/xnYd+/JUn/vOvPnvvl547fPDZ
L//VuU9+/OxHP7yx8vaTb3rD6Vt+/+IDu1/YON2ZZvyB3aff9QdPv/k3N1b+
MFrgmU994sJf/6/OKvd+KVo92ki0qcFmy2+99Hyn6K1u6sX2jXfv2n1L6ivp
KRoG82YMTS50/a2DGSfyPva9YkqQ5Fc6O5Y7ldD1meMquAii6qbbPfzRppBN
v/EMHMy8lH2MWlbVdNDZHaseq5GuswvYfu3eKeChNXhXm3sJZ/5JEWP7PLsb
8t4C1++dwg8zeMlJDGattPd5dpkHVfKeqiw3cg85+v0Q9uGDZec7Nft9Nbiz
EtvsF1mpn52QD+vM3Erpr4t4U3nX2Y38052/cO6EaWHPRI2HaLy/qQKeXgNu
rjot9E7JZ5YjYROpiYiIxNkawdR3vr0Bmcxa855B9TQ7pdM1s9Q7vbBx+vnj
xy7surdbOv3fT7/1hjO3v+/y2uMvXrr04qWLl/c+ceajf3Lqpjc//Zbf2nzP
H1382/ueP3EsWmXMvdOu23p/0t1+6bt9DkbvD5fxN7Mf4d1/hRnP2nok/S5g
sEBvO9kX8CXX78SfXX5kvfvH08xFBNEr8O2vr/cmib371htr3HRrh1+6b8PH
W3ztTM4nUlUPZm66txj2MVjpwanesZCxGq13Kt1+jaEOfmgN7WTipns3kTdu
3TGp7E/q3BHZN+n1r7MLOMzaS05gMGslbOQbpLA06B5a9vrWggf59g/s7u1/
lgzsDbfdvf3TvT70eB7p91Vvh2/pHEJ3LqDB7EDRYrd2923oHgypLxJDVPHr
Ynv29XRXM/JP992fXt9K73xesRP4TNR8iMb7m+raqqfXwCepqrR5nd31nQdz
9fmxIiIig2yNYOo7396ATGateY/eaZCc6+weeeDFixe2Xnj+8p7HNt5988n/
8mun3vY7Z+/88MX7dz136MBzB/df/Nrfnv3ER0//0dueftMbNm59x+U9j0cL
R6tEK47zOrvOK9XBJKXb5+Hc8undgykjOi/X8z807cbrbx1a7Miu1FuP7na2
v5895b5s3pjOa/XBxteTtdLg79pDUn/Rrrjp1g6/dN+Gjjd+C5n/sjx3Gt6K
wcxNbrNR0TvV2bHKsRrxOruy7YcPdfhDK/EI6b1v6t+50e3mjlv1LFv174hR
Bi38MJss2fJg1krgyNdPbpEyePddWKGku4jUQzfv9I+8Ijr38TzS76vtgbr+
1kQDNvgBv+G2oXsw6ByV7UMum49oMFb5146N4ad7+OFX9Fsx7JlopCEa42+q
3gZLn14Dn6RK0/684mVznYmIiEhp4uf4yaw113GdXTLpecXv/+rzTz+19cLz
Wy++ePnA3jN/+v5Tb3vLxrtu3vzge85+7Pazd9157uN3nP2z28985AObf/yu
0zfvOHPHhy4f2BctHK0SrRitPoZ5xWcigXPYlh3XbP45dXb2Le/eH8eUzqEZ
6S6eg6EO+Ui12nfEJO+guU3wyNdOfknSqybuzqtZmj4Ig6+zm7n0e6dbKyY8
7z2Sby0qTisy2uTns5WZeFKIHtuDcrikUApcbC4OWUREZD6jdwqJecVT6fRO
P/AdB3/s+479u58/e+eHLj54/+UDe59/+qkXn3328v69Z//s9tPv+H83bn3H
xsofnr55x6m3veXUTW8+/fYdm7e9c/N979545/939r9+5PKBfdHC0SrRitHq
0UaiTR38B98XbVbvNO2jmPF9y17hpXcaW+r8QT/4jvDh42Me+QZbzvmFGd/i
kZJLI2uXRXPfO32l8lqquLWIrxTTO039SaE3yVjnrK1bPl3aO4UsNheHLCIi
Mp/RO1Umt2Waneppar3T93/HwR99+dGf+YmTv/WfNm+75dzdf3bh3p3PrR+5
9MQ3z3zkA6f/4HdP3/L7p9/+e0+/5TdP3vBrJ//Lrz395t88/Ye/t/GuP4j+
e/ajH778xGPRwtEq0YrR6tFGjv7sTxz8sZfrnWbzNe1M7Vt3Z7LzouudRk7h
5W8j3BE33NabvKX+m/QrKDVHvk7yP9rsmuTVUjmlULPH+bz3TrHyo04sqXea
hSeFoYtei/cncLHEnXL38ETo/Y9ImM3XHiIiIrMevVN5SvqlGamepned3bcd
+Pt/9/A//eH1n186/h/+7cnfXO5ccPfQ/Ze++fVzd39s8/0rZz7ywe6Fde/c
WHn7xrtv3rjtljO3vy/6ypkPvufcJz9+6bFHo4WjVaIVo9WjjUSbOvBD3xVt
Nts7Xd+Z+WH9SOrD2bcSXwmdxKPtjPb2ofvCePov42vsWzxJyOTnu0jNhLM9
Le2RVMb/Rr79d4jTG+r681pX3hH9t3nrM/WeelqP2zGOfHBKzlzqz7+U9zun
d1fWfIudP6dZk88mm3S226TK38DbfV2DXy9FP91z2DvN1JPCYF6s8rsvcLHE
nTL4lIER7nQRERHRO5WmslmaheppqvOKf9uBH/w7B1/5skP/6AcPv+pHjr/u
l8+v3nPpsUef/fIXz3/xLy/c/9VLjz586fFvXN7zWJTo65ceefDi39737P/6
y2f/+ovRP6OFo1WiFaPVo41Em+qUTnnziufOYjpsRt7UzOfbh1GOd1rvKIfm
6Bj6tOsh89g7TWuou0Na+0/5lXfEeqMpgud9MCcw8mEpPSmlrFxqdDZLwU9H
7yqn7gerzVYDmR6KsEdFr5EY36+XRXrimOIPV+dODHjEBi7WL9aSv8qCPvxC
REREcqJ3KkpgpzT16mlqvVMmR//VT5779Ccu71+79I1HLj760KUnvvnc+uEX
nz0fP1qi/3nuyKHOaU5ffyhaIFosWjhaJXdTU7/3RQqySO8QRcabwp+OxGeZ
+dmpMW4iIiIiixG9U25qtUnTrZ5mp3da/9c/df4vPvP8yRNxv3ThK3998cHd
L2ycjh8t0f9E/7zwlS9H34oWiBaLFo5W0TuJiIiIiIiILGoKrk4JMvWdby8P
PPhArR5pUD1FK054V2eld/qelxz9mX929s4PXdh17/kvfO7sJ+7cvO2Ws3/2
p5f3PPbCM+eiRP8T/bPzxU/cef4vPxctFi0crRKtqHcSERERERERWcjonXLz
6zf89gMPPlDr5KVo4WiVaMUJ7+pM9E7f85L9L3vp4Vf9yFO//h+fvvE3jl37
C+s/95NHfvpVJ/6va8+v3nP5wN4o0f9E/4y+uP5z//zYdb/w9Jt/I1o4WiVa
MVs9Tf0BICIiIiIiIiIis9M7HXzly46++uoo0f/s/95v2feylx75qX98+h03
PfOZT0aJ/if6577v/ZboW50l/2V/Sb2TiIiIiIiIiMhMZiZ6p7h6+v5vP/DD
3x0l+p9OlfQ9Lzn4D//esX//b556w+ujRP8T/TP+enpJ19mJiIiIiIiIiMxe
ZqV3ysv+V3znoR9/5ZF/8U+iRP8T/TNwxamPqoiIiIiIiIiIzHLvtO/l37r/
Fd954Ie+K0qndHr5t+qdRERERERERETmJTPdOzXN1EdVRERERERERERq9U7n
z58/d+7cmTNnNjY2Tp06FS3QrHcSEREREREREZGFT9wXffWrX33ooYe++c1v
7t279+DBg0ePHj127NhTTz0V905nzpw5d+7c+a64d9rc3Ez2TtGKeicRERER
EREREUkm7ot27dr18MMPP/bYY/v27Tt06NCgdzp16tTGxkZu73T69OlogWjJ
/fv3RyvqnUREREREREREJJm4L9q9e/cjjzzy+OOP79+///Dhw+vr68ePHz95
8mSqd3r22WfjKZ6ir8S9U7TkgQMHohX1TiIiIiIiIiIikkzcF91///1f//rX
n3jiiQMHDgwmdzp58mRycqdnuwa908bGRrRAtOTBgwejFfVOIiIiIiIiIiKS
TNwXfe1rXxtMKp6a3CnVO8WX2sWfahctEC156NChPXv26J1ERERERERERCSZ
uC968MEH40nFDx8+/OSTTxZdZHfhwoVB7xR9PVogWvLIkSPRinonERERERER
ERFJJu6LHnrooXhypyNHjmRPdop7pwtd8aV28ezi0QInTpw4evTovn379E4i
IiIiIiIiIpJM3Bc98sgje/bsiS+yS53sNLjI7sKFCxcvXowvtYtneYqneFpf
X9+/f7/eSUREREREREREkon7okcffXRwkV18stPGxsbm5mbyIruLXfEpT/HV
doMpng4ePKh3EhERERERERGRZOK+6LHHHosvsjt+/Hh8hV3uyU6XLl2Kq6fB
KU/xpXaHDx/WO4mIiIiIiIiISDJxX7Rnz55Dhw7FJzvFV9glZ3aKT3a61JU6
5SlaMlplfX093o6IiIiIiIiIiEgy+/btG5zslLzCLnWy0+XLl5PVU/Td+FPt
Tpw4MfVDEBERERERERGRGczhw4ePHTt28uTJ5GfYZUun5557Llk9JWd5OnHi
xPr6+pEjRw4dOnTgwIH9+/fv27dv7969a2tre/bseaLrcQAAAAAWxWN98T/j
/mfPnj1ra2t79+7dv3//wYMHjxw5EpdOp06dKi+dUr1TfMpTXD1F60ZbeOqp
p44fP/7kk0+ur68fPXo02vLhw4cPHTp0sOsAAAAAAAsq7n8OHTp0+PDho0eP
rq+vHzt27MSJE/Fc4snSKZ7WKdU7Pf/889nqKT7r6cyZM9HqGxsbp06dirYW
d1DRlo8fPx7dxJNd6wAAAAAsqLj/OXbs2PHjx0+cOHHy5MnUp9cNJhLPLZ3i
3ilVPSVPfIq2sNm10RVt+VTX010nAQAAAFhQcf8Td0Fx3RRPIT6YRXxwmlP2
Crvn+1LVU/LEp8iggIrEW042UQAAAAAsjLhfGohboLgRituhQeOUvLYut3R6
4YUXstVT6sSnQfsUF1CDDmpQQwEAAACweAYVUNwIxe1QsnEanOaUWzrFUtVT
6sSnuH0aFFCDDmpQQwEAAACweAYV0KAUGkzllDrNqah0SlZPuSc+pdqn3AIK
AAAAgAWTqpuyjVPuhE6Duun/B3xM3/c=
   "], {{0, 0}, {1576, 954}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{788, 477},
  PlotRange->{{0, 1576}, {0, 954}}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.748391689513672*^9},
 CellID->1454768],

Cell["\<\
The \"Return\" button will complete the evaluation with no further \
interruptions:\
\>", "Text",
 CellID->44350],

Cell[" ", "Text",
 CellChangeTimes->{3.748393877669798*^9},
 CellID->532258910],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3U1vW/ee2HGjBYou+xYKZNFtdgV3XXZnTNGFu5qZdjjoZgrMFC668GsY
7n2BAN57MRDAEQr4QVOLo9zoxo4SJZKPLNlJLDvRdRzZ9VUrXY9K6YjkEZ95
eH4Uj/T54MBIyHP4J52svvg//Os//29/Uv1n165d+5t/2fzjT/7sf/y7v/7r
P/uf/+FfNf/lP/7V3/zXv/yrv/gv//6v/vtf/OVf/PW//fN/3nzxfzX/+Df/
4tq1k3/+2PLHlqNTh4eH/+/U/z11cOoPLR9a/g8AAAAAl1Q7AbWjUNqI0l6U
tqPDw8O0JrXj0sfzuopTGp3axSnbmtJB37e8AwAAAOCSaiegbIZqB6h2fUpr
UrY+DYpO7WlO2eLUbk3poPstvwIAAABwSbUTUDZDpQEqW5/6TnzqG52y05za
xamdm9JB3576BQAAAIDL5c2bN9l/TStQO0O1A1S7PnVNfOpac9cVndpbObWL
U3tqU9qa3pz6/ak9AAAAAC6ptP+kLShtUO1JUO36lN30qTc9dUWnrmlOXcWp
3Zp+PvUTAAAAAJdU2n/aDaqrPvWd+NROT8OjU9/ilLam169fvzq1CwAAAMAl
lfaf169fpw2qb30akp66ulN2plM7OrWLU5qbmoO+fPnyx1M/AAAAAHBZfN+S
/mvaf16+fJk2qNevX7frUzs9ZWc9dXWnrslOXdEpneaULU5pa2qO/uLFi+en
dgAAAAC4dNLy8+LFizRD/fjjj9n6lE586kpPXVOeulbYdUWnvb29n376KVuc
0tzUHHp7e/vZs2dbW1sJAAAAAJfO1tbWs2fPtre30wb14sWLbH366aef9vb2
utJT12q7tDv1Rqf2NKfmR6UTnJqfn7am5rhPnz7d3Nzc2Nj4DgAAAIDL4tuW
9F83NjY2NzefPn2aJMmzZ8/SAPX999//+OOPw9NT2p2yK+zS0+vSmU4///xz
8/HmhzQ/qvmZ7dzUHK459Pr6+ten1tbWvgIAAADg0llbW0v7z/r6+rfffrux
sZFOgtre3n7x4kU68SmbntIT7rKr7bKTndID7NrR6YcfftjZ2Wl+2tOnT7/7
7rvmEN98801zxCdPnjx+/Ph3p1ZXV78AAAAA4NJZXV1N+8/jx4+fPHmytra2
vr7+3XffPX369NmzZ2l6evXqVbrX0y+//NI+3q495SntTtnJTnt7e2l02t7e
3tzc/Pbbb7/++uvmh3/55ZdpZfr8889XVlYajcby8vKjR4/+NwAAAACXzqNH
j5aXlxuNxsrKyueff/7FF1/87ne/e/LkyTfffLO5uZmmp5cvX75+/brvlKd0
kV17Z6fmW7/88svPP/+8u7v7/Pnz//Sf/9LlcrlcLpfL5XK5XC6Xy+XqutbX
158+fbqzs/PDDz90TXlq7/LUe4zdmzdvXr9+3Xxka2vrwn+Cy+VyuVwul8vl
crlcLpdrDq+vvvpqY2Pj2bNn33///e7ubteUp/ZSu65Fdr///e9fvXr14sWL
p0+fpp9zDAAAAMDc+3Um0l705Zdffvvtt1tbW8+fP+/d5am91C7bndJFdi9f
vmw+srGxoTsBAAAAlMUsu9Pq6urXX3+9ubmZLrVrH2zX1Z2yJ9ml3enHH3/c
3t7+7rvvdCcAAACAsphld/riiy/W1tY2Nja2t7e///773t3F06V22e7UfOun
n3764Ycfnj179u233+pOAAAAAGUxy+70+eeff/XVV9999116ql17qd2g7tR8
Mdud1tfXdScAAACAshgzHD3IGP+Vru60srLy5MmTQVs8tbtTurlT86l0U/H0
MDvdCQAAAKBcZtmd/vEf//Hx48fr6+tJkjx//ry9xVPX1uKDutM333yjOwEA
AACUxYV0p6dPn2a3Fh+nO21tbelOAAAAACUyy+7UaDS+/PLLb775Ju1O33//
/fDu1HxRdwIAAAAoqTG705SGd6f0SLve7mS+EwAAAEB5zUN3sr8TAAAAwOWT
OyXNeH8n59kBAAAAlMuFdKd859npTgAAAAAlojsBAAAAEEF3AgAAACBC7u40
Ed0JAAAA4KrRnQAAAACIUGBcss4OAAAAgDbdCQAAAIAIuhMAAAAAEXQnAAAA
ACIU2J2G0J0AAAAArhrdCQAAAIAIuhMAAAAAEXQnAAAAACLoTgAAAABE0J0A
AAAAiKA7AQAAABBBdwIAAAAggu4EAAAAQATdCQAAAIAIuhMAAAAAEXQnAAAA
ACLoTgAAAABE0J0AAAAACKI7AQAAABBBdwIAAAAggu4EAAAAQATdCQAAAIAI
uhMAAAAAEXQnAAAAACLoTgAAAABE0J0AAAAAiKA7AQAAABBBdwIAAAAggu4E
AAAAQATdCQAAAIAIk0akP/3TP9WdAAAAABhp0uiU0p0AAAAAGC5HdJo0PelO
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
3X6HWlpsYUyn0RbG22rYOw1+65Swg0lNUr1j0GAw96afAwAAgLboneit/Pg2
gZHunuzO7th5c+lBb+0MLd6OXOVFOgnjBGWh9T1Nbp7qtA3ZvD2FJY9kcXyS
O5ehyvvOBlo41HpMwm7lKkeNKo0bVed6turlrY3jBAAA9Am9EzzvVDRkTYey
BgAAgDZ1q3d6//vf3/ZP9U4AAAAAa8zS0lIXe6d65VKDH+mdAAAAANaepaWl
nTt3drd3qu2X6r2udwIAAABYk8LSaXl5ueu9U7xiSnxR7wQAAACwVkWl00pX
xxWvaplaKp30TgAAAACDLl46rXT7eXbvT5JyXr0TAAAAwEB7/PHHd+zYcX/J
tm3bwtfDsZ6qXoyk7I5qq6f0M+qdAAAAAJ6H0tdHi62MJa53AgAAAHiea6lB
CqunVmfROwEAAAA8D7VaIrVB7wQAAADwPKR3AgAAACALeicAAAAAsqB3AgAA
ACALeicAAAAAsqB3AgAAACALeicAAAAAsqB3AgAAACALeicAAAAAsqB3AgAA
ACALeicAAAAAsqB3AgAAACALeicAAAAAsjBwvdOV77tKREREREREREQkiN5J
RERERERERESyiN5JRERERERERESyiN5JRERERERERESyiN5JRERERERERESy
iN5JRERERERERESyiN5JRERERERERESyiN5JRERERERERESyiN5JRERERERE
RESyiN5JRERERERERESyiN5JRERERERERESyiN5JRERERERERESyiN5JRERE
RERERESySE96p8MvvyzT9PyoinScTQ+trKzM3ntN77dEREREREREpM30de/0
qp+ZeN1Lj7z+ZUGCL4Jv9U7yvIneSURERERERAY+/dw7TbzupVO/+aaZ3/31
IMEX+epJ7yRdycaxlZWVhzb2ejMapb97pwE4gCIiIiIiItL79Evv9IoXTLzm
xUfe8PIgwRfBt0Emf+UXj/3pHz997V8FCb4Ivg1fr55S7yStpVDp7NrU681I
sZF92zu976oNu4LtG9vQ680QERERERGRfk5f9E6veMHE5S+cfNPlR3//t47+
wW8FX0y88kWHX/mimbf/2slPr/vpfd8KEnwRfHv48hcGPypO+fuFKS9/YW31
1POjKv2cQmEye/d1vd+Shun33unK6+6dGYD6TkRERERERHqZ/umdpq9449Mf
+MtnPvLBY3/+ntl3/c7M711x/K/+7Kf337OcOxgk+CL4Nnhx9l1vO3bVe565
4YPBxMEseidpLQPTlvR97zQwDZ6IiIiIiIj0LH3ROxWqp6Pv+O1Tm285u2vH
me9/99Rdmxc3bTh1x63n9++5eHzu4tPHzz+6N/g2/+Jdm89s/W4wWTBxMEsb
99ldc89swtA09euIazaO5X9UMLMr3wPUWcING3bNRlOuzM4+tPGGitLguk13
xydYmQ2WtqHinL1QNVTcu1T7SjHJp/yxTQ3W3sKqV2H3E7at7t6Fwwc16jSa
H8xW3v3op9WLXZkJduSeTdXlT+3O1k5TpzgKN2DmnhsqJ77h7tmktz4/+w0b
7ql4C2p2s85hTHmI2v7MlD42NfvS3YR7V2ctjT8n6d+mqqMX/jpUvXcd/Y50
+GFITDhZwr7n/zjUbmd4rCpfT/vb3covb/KfppR//To4RN3fl4Z/09KurnEK
b0rz36A6k1UfnHCDZ2MHeXZsw3WZ/nqKiIiIrEZWOtDzjc8uH7juw3v27vlv
V//39LMEEwezBDOu8qb2S+/08stm/+jtZ75336WT8xfnT1yYnjy3Z+zsww+e
27v7/E/2nX9s/7n9j5zd9WDwYvCjYIJgsmDiYJY2xhVvqXcKJ87/23527KFd
4YnG2N21SwhnL55PRVPGTr5qJyguOH6C1lnvVFpFYVODU+wbWlj1au1+5bY1
3rvC9IlnZKkOZmIanNHfEJwXR3+dZmZnCyl9Hz8dTt7Z2rV3p3e6e1fV8a+z
osTmpOkh6uQzE212phdlFZul5LU0+py09DZ10Dul+x1Zxd6puOMJpfRK5fa3
+tvdyi9v8ses+V+/dg9R9/el4d+0tKtL9/Fut3cKD0L5oJW2ara4VaU/XzMD
cHmniIiISKOsdKDnG59d9uzds3zu7MGDh1JWT8FkwcTBLMGMq7yp/dM7Hf3D
t52+566Lc09dOn3quTNnLi2cPP/EY6e/tWXxKxuXbrn5p//2L+effCx4Mf+j
06eCyYKJg1ky7p2K/7CPTZz/H8rhB7j6pLLmvOCajfeWzqqKE1RcT1Jc2li3
eqfiSUf1LqRbdba733jbavcuPAMdeyj57DvlwUxMvRHFozO4sburF5vfkYd2
RafD9XY2rEcSL1hK+Pil7Z0KmxS/LKTuipLmbXqIOvrM1PkcdjeFLQwLwNq1
hK3XbEJH1Orb1H7v1MrvyKr0TlEXV72p1b1Tyi1v9Ze39iPRyl+/Ng9R1/el
8d+0tKtrnq5e75TfvKqDfN2mcFMzvihRREREJNuE/9BanbkGKFGPlKZ6amni
rqdnvdPlL5x49c8eee3PTb7p8qlffe30FW+cu/p9Z0bvvXj82HPnzj63fP7S
wslz+x5Z+toX59d99OSNH1v6+pfPP7r30tLic8vLwQTBZMHEwSzBjMHswUKC
RQULDBbb1d4p8dyq+qSjzrlM9RpT/Mu/C71T9YlSylVnufv1NyN576KJE9+p
1Aez7m7Wzls8VU9x3U6Dna3ZsK70TnXuoqpdUc21H2kOUUefmdjErZ1rt5Di
YUm+kqT4ob034ZarVt+m9nunVL8jq9c7Fbc8qbOt7p1Sbnlrv7xX1vxpau2v
X5uHqMv70uxvWtrVNU9nvVOqJH6YRURERAYqeqd6Sdkm9bZ0urJ3vVO+dPql
n5/+jTfMvnto7i/+64kPDS9++fPn9u0Om6VC6bT7p9/9t6XbvrSw8VMLI+uD
L8488N3zj+0vTrC0GEwQzBLMGMweLCRY1JHXvyxfPXX/eqfqc6vwxL+0hLqj
rFROn+aakO73TmlXneXu19u2hqdv4QITTkU7usCmcPqW/NY3P81vtrPVx7Bb
4zulW1Fs3vSHqKPPTIND2q1Ep8xJn89o4ys/kG29TZ1e79T4d6TzD0NiEnaz
qrOtWHLy9U5Nt7zT3qm1v34dXe/UrX1p+jct7eqaZxV6p3R/okVERET6OXqn
BmnaKfW8dLqyh73Ta14y+eZXHX3HW0/87V8v3rzh9L/ceeb/PXBu967zT/xk
OXfg3L7dZ0a/c+rOry1+eSTsnRa//PlT37z9zNbvntv/yPKhA+efeCyYOJgl
mDGYPVjI0Xe+dfItr5r4hZdkMr7TbMUQuJVLaHqSWPz/4OEgIQkpj3Xc9d4p
9aoz3P1621Zn7yq3pGY30x/MtG99K5f3NN7ZqhPnzHqnxBXV3HOU5hB19JkJ
k+aM+Lp7a5bTwiDwhYU3bCCrt6H1t6nz8Z0a/Y50/mFo8GmsN0BczX7VG9+p
yZZ32Du1+Nevw/GdurMvzY9/ytU1j95JREREJEX0To3ToFnqh9Lpyh72Tr/w
ksm3vPrYn7z71OZbzu0ZWx4/dG7fI6f/9ZuLX9249JWNS7duCl4P/nvyM+vm
b/xokOCLpVu+sHT7V5ZuuTmYYPGrXzj9rW8Gs+Rn3DMWTBwsavKXX91p75Rw
ml8euGMlHG56V3gPS8u9U12NToG70zs1X3WGu19v25L3rvqagTqD0qQ4mGnf
+lYu7xmk3inNIeroMxP75DQ5I47GBo8tJc0Bj38Y6owaFOtYyhuWZe/Uzu9I
5x+GBp/Gune0VX/aE55nl2bLu9M7pfg4dXiIurgvaY5/qtU1z6rdZ5fqek4R
ERGRPk34j67VmWtAk9gv9UnpdGUv77N78ZE3vHz2v/xe/va6sYcvHp9bzh1Y
+qev5iumf/zYyfWfWPjcJxe/8OnFL342mGDxKyOLX/zcwufXL3x63clPfvzk
jR+bv/FjS5tvWc4dDGYMZg+mCRYVLDBYbLd7pzA3bNh47935M4vyM86iJTS9
vaJ+s9H0FDi7++wqV53l7tfbtnT7W30OmPpgpnzrW7sYoFFJVX0Mm4xe1fqh
SLui9Ieoo89MmI6uxGicyv2qWlFFi1L9Jnb6NrXWOxU/SA1+Rzr+MCSvsXKv
az7JVRuc0Dul2fLs7rNLUQC2vPbu7EvqO+aarK55su6drtsUtmHGFRcREZGB
jt4pTapapv4pna7s8bjiL576z//pqfe9++Rn1p3bv2c5d/D03XcufvGzS1//
8uKXPvfMx//3yfX/cOZ7953bM3Zu71jwxcmbPvHM31+3uOmzS7d9afFLnz/9
r/+8PH4wmDGYPVhIsKh86dThuOLpzhpSXEhQmXoTNB/pN3oUVNUyEwadTj6l
SrnqTHe/s+F8q+dNezDrvhFJvVPaiwFaH7C6zuPGEjuNVG997TY0v6Oq3usd
fWbqHtIuJfEjWvq26kOY+G0m44q39zvS6YchMZVFU9K7U9GfpPkFafnetNqj
UVN/tfbXr5uHqP17BtMdq6ara57u9043bLgnvIcxqsJma54kKCIiIjJgCf9Z
szpzDXTiXVP/lE5X9rB3KmTidS+d+s03Hf+f7392x48vTE8+u/0Hp7/1zVN3
3Lowsv7E9dee3PCP5/aMXVo4mR9mfM/Yyc998pmPfGhh5FPBBD/99l1n//1H
+Vl2/DiYPVhIsKhosY3X3vB6p9mZ6hOfG+7eNbah6pXqK2SiMUwqhr65ZmM0
+kdpgoQbmurdOhR/Jb9htRVT1blYwxtSmq06293vbDjf6hIg5cFMSsJNYa0O
fpL8UPhrireSJb53sbep1F1UbX9ST1KafaXy+BeX0Phjk/YQdfSZafDb1I3U
bFu8IWxabrT6NqW/3qm935EOPwyJia+l4e9OuKik++xSbHmT3ilx4rY+jR0e
os73JWmbG/xJT7G65smgd4rf2DiTbiA1ERER6besdKDnG5/dAVmduQY9UfXU
P6XTlf3UO11aOHlx7tjZXTsKpdP/eubvr1u67UvLuQPPnT//3Plzy+MHl+74
2vy6jzzz0b9d/MJnzv3HzovHjwWzdLl32rWp+L/Xy6chpX/Gz84W/ydy+MPa
x6mX/rUfjqCbUA5E//e5sJzak6kGN1uFz5GfmS38j+yaGzqCs6Hy67PFAXvv
3nhDC6vObPcbblvl/ta/jynh6WDND2ZiCmtscE1ImpTPhcO1j5W/3Vizrtl7
N+Tfu8LwL9GAMMEGbBybiQ5IaV8qz1jjs0dTpvzYND9EXfjMlI9eFkPH1C0N
Cge59o6/moPQ0ttU/hBuuru8v7MVh6Wj35EOPwzNDlGT353y6OvVXU3DLU/z
y3t3xedzpc7nJPVfv/YPURf2pc5vUOKf9JR/GJsly/vsrsl/mBN7NhEREen3
rHSg5xuf3QFZnbkGPXqnKAn32T2657lzZ1cuXVw+9OTC52868Xd/M3/jx05t
vvXc7l0Xpo5cmJw498h/nLrrjpOfufGZ669d2Pjp5UMHgomDWYIZu3mfXf6s
IRowtnwdzoZ7xqLhO/KnTskPTbvhmo0Vk83sqjoNLCyn/PPa2x8aDfKTP2+K
Fj4brwiiawwqVF1d0GTVme1+w22r2N/wdD75FClxSOQmBzMxSXfVtXNPTfUx
SbquoNyNXLMxVnpEO3jdpoo3tNHs8bc+zcem+SHqwmemciNbOXopklikRGff
dSuU6i4i7dtUVX4mHpaOfkc6/DA0+DDnd7lRdxodq+TPeaMtT/nL2+zzmfLj
1Pkh6sK+VC2w4Z/0lH8YGyb7ccVbeW6CiIiISJ8m/PfW6sw10HGfXTzV44rv
fvjiM0+vXLq48txzy0fGl77+5fkbP7rwuZsWv/qFU3fedmrL5tPf/KdT37ht
6favLH7xcydv+sTSP92yfORwMHEwSzBjMHsXxhXvi6QcT7jRfvXn/9run21L
eveTB5YZnLT/sen0fUnzMLv2klySFKuJu5Nqlnb3JfV9dn2XUu+0scmA58Wu
dWPFAFnp09ng5/2VvvhDFHy2o/9x0KBQSjnZQOyyiIiISGfRO6WJccWrku+d
fuElk2959bE/efepzbec27t7+cj4xWeefu7ZZ5cnxk9947aTn/4/Cxs/vTDy
qZM3fWL+xo/Or/vIyfWfWNz02cUvfX7hs//31D/fvnzkcDBxMEswYzB7sJBg
UZO//OpgsXqnXu9Fn29bwq12V0bD/gxk9dSz3im7SynqXcATrnGm9qK16E1s
uSwa+N7poab3UoWtRXinmN6p53+Iin9t8ldtbbinYe+UZrKB2GURERGRzqJ3
aprElql/qqee9U6vecnkm1919B1vPfG3f724acPpu79xdse2C7Mz5w8+sXT7
V05+8uMnN/zjyfX/8MxHP3Tiur858Xd/88xHPnTyU/+w8LlPBv89dcetywef
DCYOZglmDGYPFnL0nW+dfMur9E79eX7RV9tW2Jjk8bETb5a55rpND1XfMtlX
6VHvdF2b18+k3qOERqt8t1RCKdTecRj03mllpflex6bUO/XDH6LSyEuhutuT
crLYm3J35UDo+ZsTV5IrXBEREZEBit6pcRr0S31SPfXuPrufPfJLPz/9G2+Y
fffQ3F/81xMfGs7fcLdv9/knfnL67jsXvzyydPtXCzfWfXZhZP3C529a2LRh
6bYvBa8sffULp7/1zfNPPhZMHMwSzBjMHiwkWNSR178sWGxt73RNfhSO2XJK
J66xF1MOqJJ1OjuVK5yk9P6UqoVtCwdsWf0b3JJHJYqNKhN9PKLv+rmC6OBj
08FnJrMRxRteuVQafylpm4vtSoun2IlHr61nk612ym1S03ew3Ne10RPW++Ud
wN6pr/4QReNiNX77Uk4We1OiJ1B08KaLiIiI9FP0Tg3StFnqh+qpp+OK/+yR
1/7c5Jsun/rV105f8ca5q993ZvTe808+9uz2H5754ffP7n74/GP7zx94fPnQ
k0GC188/uvfcf+x89kfff/bffxh8G0wczBLMGMweLCRYVL50ShpXPHFE2Up9
coI5mKdynexvr87u646XckPhLC/+gUkcjLqv0ouPTeEAZnQRRcOLUhqVS21d
zVLn6BXvcio8WG22P38lo94pzW9QsZHoXgWxlv5Y9e4PUeFNTPGJTTlZqVgr
//VK+cAFERERkb6O3qleUnZKPa+eetY71eToH77t9D13LU/kzj/+6LnH9p0/
+MSF2ennnj0TflqCLy7MTOUvc/rJvmCCYLJg4mCWxEX1/N0XWcWspQagj45e
7Flmjm0Lx01EREREpLvROyWmpTapt9VT//ROs3/09jPfu+/iieNhv3T2oX8/
t3fs0sLJ8NMSfBF8e/ah7cGPggmCyYKJg1n0TiIiIiIiIiJrNc1uX2qk5xuf
Xfbs3dNSjxRVT8GMq7yp/dI7veIFR9/x26c233J2144zW7976q7Ni5s2nPrG
15cPPXnpp6eDBF8E3+ZfvGvzme9/N5gsmDiYJZhR7yQiIiIiIiKyJqN3SswH
rvvwnr17Wrp4KZg4mCWYcZU3tS96p1e8YOLyF05f8canP/CXz9zwwWNXvWf2
XW+b+b0rjv+Pq86M3rt8ZDxI8EXwbfDi7Lt+59ifv+eZj3wwmDiYJZixtnrq
+QdARERERERERET6p3eafNPlR3//t4IEX0y88kWHL3/hzNt/7eSn1/30vm8F
Cb4Ivj38yhcFP8pP+QelKfVOIiIiIiIiIiJ9mb7oncLq6TUvPvKGlwcJvshX
Sa94weSv/OKxP/3jp6/9qyDBF8G34evVU7rPTkRERERERESk/9IvvVNSJl73
0qnffNPM7/56kOCL4NuUM/b8qIqIiIiIiIiISD/3Todf9TMTr3vpkde/LEi+
dHrVz+idREREREREREQGJX3dO7Wbnh9VERERERERERFpqXc6c+bM6dOnl5aW
FhYW5ufngwna651ERERERERERGTNJ+yLHn744X379j3xxBPj4+OTk5NHjx49
duzY008/HfZOS0tLp0+fPlMQ9k6Li4vx3imYUe8kIiIiIiIiIiLxhH3Rrl27
9u/f/+STTx4+fHhqairqnebn5xcWFhJ7p5MnTwYTBFNOTEwEM+qdRERERERE
REQknrAvGhsbe/TRRw8cODAxMTE9PT07Ozs3N3fixImq3unZZ58Nh3gKXgl7
p2DKI0eOBDPqnUREREREREREJJ6wL9q9e/dPfvKTgwcPHjlyJBrc6cSJE/HB
nZ4tiHqnhYWFYIJgysnJyWBGvZOIiIiIiIiIiMQT9kWPPPJINKh41eBOVb1T
eKtd+FS7YIJgyqmpqUOHDumdREREREREREQknrAv2rt3bzio+PT09FNPPVXv
JruzZ89GvVPwejBBMOXMzEwwo95JRERERERERETiCfuiffv2hYM7zczM1F7s
FPZOZwvCW+3C0cWDCY4fP3706NHDhw/rnUREREREREREJJ6wL3r00UcPHToU
3mRXdbFTdJPd2bNnz507F95qF47yFA7xNDs7OzExoXcSEREREREREZF4wr7o
sccei26yCy92WlhYWFxcjN9kd64gvOQpvNsuGuJpcnJS7yQiIiIiIiIiIvGE
fdGTTz4Z3mQ3NzcX3mGXeLHT+fPnw+opuuQpvNVuenpa7yQiIiIiIiIiIvGE
fdGhQ4empqbCi53CO+ziIzuFFzudL6i65CmYMphldnY2XI6IiIiIiIiIiEg8
hw8fji52it9hV3Wx0/Lycrx6Cn4aPtXu+PHjPd8FERERERERERHpw0xPTx87
duzEiRPxZ9jVlk4XLlyIV0/xUZ6OHz8+Ozs7MzMzNTV15MiRiYmJw4cPj4+P
53K5Q4cOHSw4AAAAAMBa8WRJ+G3Y/xw6dCiXy42Pj09MTExOTs7MzISl0/z8
fOPSqap3Ci95CqunYN5gCU8//fTc3NxTTz01Ozt79OjRYMnT09NTU1OTBUcA
AAAAWKPC/mdqamp6evro0aOzs7PHjh07fvx4OJZ4vHQKh3Wq6p0uXrxYWz2F
Vz0tLS0Fsy8sLMzPzwdLCzuoYMlzc3PBKp4qmAUAAABgjQr7n2PHjs3NzR0/
fvzEiRNVT6+LBhJPLJ3C3qmqeopf+BQsYbFgoSBY8nzBMwUnAAAAAFijwv4n
7ILCuikcQjwaRTy6zKn2DruLJVXVU/zCp0BUQAXCJcebKAAAAADWjLBfioQt
UNgIhe1Q1DjF761LLJ0uXbpUWz1VXfgUtU9hARV1UFENBQAAAMDaE1VAYSMU
tkPxxim6zCmxdApVVU9VFz6F7VNUQEUdVFRDAQAAALD2RBVQVApFQzlVXeZU
r3SKV0+JFz5VtU+JBRQAAAAAa0xV3VTbOCUO6BTVTf8fRMFTFQ==
   "], {{0, 0}, {1576, 
   954}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{788, 477},
  PlotRange->{{0, 1576}, {0, 954}}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.748391726137533*^9},
 CellID->82563332],

Cell["\<\
The colored numbers on the left of each cell correspond to the current trace \
level of the evaluation:\
\>", "Text",
 CellChangeTimes->{{3.749808461675256*^9, 3.749808466459106*^9}},
 CellID->96263973],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"factorial", "[", "0", "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"factorial", "[", 
    RowBox[{"x_Integer", "?", "Positive"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"factorial", "[", 
     RowBox[{"x", "-", "1"}], "]"}], "*", "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TraceInteractive", "[", 
  RowBox[{
   RowBox[{"factorial", "[", "4", "]"}], ",", "_factorial"}], "]"}]}], "Input",\

 CellLabel->"In[129]:=",
 CellID->218259673],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.748388510564213*^9, 3.748391803012146*^9},
 CellLabel->"Out[131]=",
 CellID->27675719]
}, Open  ]],

Cell[" ", "Text",
 CellChangeTimes->{3.748393877669798*^9},
 CellID->819598997],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3c+PI1di4PnCDLCY4/4LA8xhD3Xpg4EFb3PcmzELHrTog8czprEXL+BZ
eGeRENy3OQ7P9iQE6+SLD0I2iMIAbnZaXemSVaJ+dKVYWaEqkfpRJVVRLWd5
qt1To3ZOJplkBOMHI4LJRyaZnw8CjVby8QWjjl+89+Jf/v7/829a/+zWrVv/
4V+c/8+/+bf/37/+4z/+t/////m/nv9H84/+w//9h3/0B//+//ij//cP/vAP
/vh///1/fv7H/3r+P//b/3Lr1sX//+3UD1P/Y+z169f/few3Y/849uupV1P/
DQAAAIAdNUtAsyg0aUSTXjRpR69fv57UpFlc+u28VHGaRKdZcUq2pslN/2Hq
JQAAAAA7apaAkhlqFqBm9WlSk5L1qSg6zZY5JYvTrDVNbno69fcAAAAA7KhZ
AkpmqEmAStan3IVPudEpucxpVpxmuWly0+/HfgUAAADAbvnuu++S/zmpQLMM
NQtQs/qUWviU2nOXik6zo5xmxWm2tGnSmr4bG429AAAAAGBHTfrPpAVNGtRs
EdSsPiUPfcqmp1R0Si1zShWnWWt6PvYtAAAAADtq0n9mDSpVn3IXPs3S0+Lo
lFucJq3pm2++eTb2FAAAAIAdNek/33zzzaRB5danBekp1Z2SK51m0WlWnCa5
6fymX3/99VdjXwIAAACwK76YmvznpP98/fXXkwb1zTffzOrTLD0lVz2lulNq
sVMqOk2WOSWL06Q1nd99OBwOxj4HAAAAYOdMys9wOJxkqK+++ipZnyYLn1Lp
KbXkKbXDLhWdXrx48e233yaL0yQ3nd/6yZMnjx8//uyzzyIAAAAAds5nn332
+PHjJ0+eTBrUcDhM1qdvv/32xYsXqfSU2m036U7Z6DRb5nQ+1WSB0/n8k9Z0
ft9Hjx6dnJw8fPiwDwAAAMCu+HRq8p8PHz48OTl59OhRFEWPHz+eBKgvvvji
q6++WpyeJt0pucNu8va6yUqn58+fn3/9fJLzqc7nnOWm89ud3/r4+PiXY598
8snHAAAAAOycTz75ZNJ/jo+PP/3004cPH04WQT158mQ4HE4WPiXT0+QNd8nd
dsnFTpMX2M2i05dffvn555+fz/bo0aN+v39+iwcPHpzf8aOPPvrwww8/GLt/
//77AAAAAOyc+/fvT/rPhx9++NFHH33yySfHx8f9fv/Ro0ePHz+epKdnz55N
znr61a9+NXu93WzJ06Q7JRc7vXjxYhKdnjx5cnJy8umnn/7yl788n7zX600q
03vvvXfv3r2jo6O7d+/+4he/eBcAAACAnfOLX/zi7t27R0dH9+7de++9995/
//0PPvjgo48+evDgwcnJySQ9ff311998803ukqfJJrvZyU7nH/3qV796/vz5
06dPB4PB//Xv/tDlcrlcLpfL5XK5XC6Xy+VKXcfHx48ePfr888+//PLL1JKn
2SlP2dfYfffdd9988835Vz777LONP4LL5XK5XC6Xy+VyuVwul+saXh9//PHD
hw8fP378xRdfPH36NLXkabbVLrXJbjQaPXv2bDgcPnr0aDLPGQAAAADX3t+v
xaQX9Xq9Tz/99LPPPhsMBtlTnmZb7ZLdabLJ7uuvvz7/ysOHD3UnAAAAgG2x
zu50//79X/7ylycnJ5OtdrMX26W6U/JNdpPu9NVXXz158qTf7+tOAAAAANti
nd3p/fff/+STTx4+fPjkyZMvvvgie7r4ZKtdsjudf/Ttt99++eWXjx8//vTT
T3UnAAAAgG2xzu703nvvffzxx/1+f/JWu9lWu6LudP7HZHc6Pj7WnQAAAAC2
RcVw1E2o/pdUd7p3795HH31UdMTTrDtNDnc6/9bkUPHJy+x0JwAAAIDtss7u
9Ld/+7cffvjh8fFxFEWDwWB2xFPqaPGi7vTgwQPdCQAAAGBbbKQ7PXr0KHm0
eJXu9Nlnn+lOAAAAAFtknd3p6Oio1+s9ePBg0p2++OKLxd3p/I+6EwAAAMCW
qtidrmhxd5q80i7bnax3AgAAANhe16E7Od8JAAAAYPcsnZLWfL6T99kBAAAA
bJeNdKfl3menOwEAAABsEd0JAAAAgBB0JwAAAABCWLo71aI7AQAAANw0uhMA
AAAAIawwLtlnBwAAAMCM7gQAAABACLoTAAAAACHoTgAAAACEsMLutIDuBAAA
AHDT6E4AAAAAhKA7AQAAABCC7gQAAABACLoTAAAAACHoTgAAAACEoDsBAAAA
EILuBAAAAEAIuhMAAAAAIehOAAAAAISgOwEAAAAQgu4EAAAAQAi6EwAAAAAh
6E4AAAAABKI7AQAAABCC7gQAAABACLoTAAAAACHoTgAAAACEoDsBAAAAEILu
BAAAAEAIuhMAAAAAIehOAAAAAISgOwEAAAAQgu4EAAAAQAi6EwAAAAAh6E4A
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
zoTK3SnqtBrxyU2NRqvdKfmK7gQAAMCV6U67Jd2dptfhOz97mf+N54/242Ef
nNS9YXl3GrVyQkqvNa0xqcgT7fcK2kuvPcjMXZBrkt0pmv3CkglDdKfKzx60
O2XOCp/Wp9ai9qQ7AQAAcGW6024p6k7jtU+56enBB8k8dfd5zRuWdafijpQX
eQobUX536uzlD467U0nP6Seiyuq7U41nD9idOq3c6FT6ujrdCQAAgCvTnXbb
6Pmzd9oLlzMFXu8Up6HmeIvZxQKkYauZ114S5Wf893grXDQYtZr9THdKjJ9O
Xnj3271W9/JGUbffyOk5lbtTUtyL+tk+U+fZq86ZUtqdkmudGtO9dVGiRRV+
VXcCAADgynSnGyBeBJV7glPQ851m7WW+sYxa2ciTWPOTPqApX2kpire5Fe/m
m7WdgN2p/Nkrz5lS1p0S2Wk+IBV+kB6hOwEAALA83ekmOPnLhVvtrqL0fKd4
61yv3c1Z2hS3l3hkeW8pnGTOrDtl9ujFbWf20eq7U41nrz7nvJLuNLfaqTU3
KP6o4Mu6EwAAAFemO90AL++2N9edyo45yulOC16NN6d6wMmeDZVNUgG6U/Vn
rzPn3PyLu1PmbKdG/Bq7ODzlpyXdCQAAgCvTnXbc82d34/Od8vfZXUnFWDQY
tfd6jWa17rTp9U6Vw1e1RlTl2evOOVW3OyVeY1e24El3AgAA4Mp0px0z21KX
d+UfGx70fKcCeclo9ec7FQ/IaVxzp5rnvREv54V6tRpR1Z8dojs12p1Oq5Fs
T+2O7gQAAEBoutOOKe5Oh3ef531hmffZxed1F17xe+LOOnu91v6wM4gbS9TN
T0yJ189l32c3zASQ8p1xyW1uiffZDRe/zy55IlPeCeQJZY2o+rNXn3PuAauu
dxrno6iTOO8puflOdwIAACAI3WnHZLvTfvvwnZ89GxV94cEH5W0qrW53WjBy
fhFRYslT5ppGmHipUuGV6DklPzUxctadeq29vEOZEgu68p6oqDtVfvacf4QV
nise56NobuGT850AAAAISHfaMdPuVLEgrWe9U+GwnHVKhelpue60qGXN3z3u
Tu1Bau1Tes6VdKfC08tX2J3SC55mX0u2J++zAwAAIBTdacfU7k7rON/pVWd/
2Gr2Ev2n12j2292i18adj+8nD+KeG1y3O+VM2GvsDTvptUbJ7jT+ymzVU7OX
+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
AAAAIehOAAAAAISgOwEAAAAQgu4EAAAAwHKOjo4Opu7cuZP6VHcCAAAA4OoO
Dg5Sf9Gd4HqK2o1bcxrtaNO/6Qoyj9PqbPonAQAAsFq6E2wL3QkAAIDtojvB
trgMNY12J7q06V90RdPH6EweTHcCAADYNboTbItZd9r23pQW6U4AAAC7SXeC
baE7AQAAsF10p90y/PWf/s7o98+vH//6Wf6IH3o/+X484GWv/vTd/q3b715c
zWFh+hiM2nu9y2G3e429YWcQf7Gx/yp3fONy/PgrzX5nkBmWP/jianUXjmn2
WvujzK991W6+W/iT5mYbpm6XvvZGtZ+91pwJpd0pc2JSRtBmVX77grKkOwEA
AOwo3Wm3lHWnZ38xjk6T6ye/qTt9eXcatXJCSq81rTGpyBPt9wraS689yMxd
kGuS3Sma/cKSCUN0p8rPrjvlf1F3AgAA2DW6024p6069n4zi7lS4JqpQWXcq
7kh5kaewEeV3p85e/uC4O5X0nH4ia6y+O9V49mDd6azT0p0AAAC4PnSnLfXD
T3+cKEjF15/+xQ/JrwVe7xSnoeZ4i9nFAqRhq5nXXhLlZ/z3eCtcNBi1mv1M
d0qMn05eePfbvVb38kZRt9/I6TmVu1NS3Iv62UJS59mrzplS6XynTmsafxob
7ThxAiv/GboTAADAjtKdttSS3Snw+U6z9jLfWEatbORJrPlJH9CUr7QUxdvc
infzzdpOwO5U/uyV50ypeq54nJ5utTp11jdFUWeRqM5cuhMAAAC607Zaujtd
Sen5TvHWuV67m7O0KW4v8cjy3lI4yZxZd8rs0Yvbzuyj1XenGs9efc55Nd5n
l9jyVmNrXck2vVpdSHcCAABAd9pasx1zc2Wp/H12V1LhfXaLjznK6U4LXo03
p3rAyZ4NlU1SAbpT9WevM+fc/NW709lS6Ul3AgAAYKV0p+01W/L0/U+H079t
vjtdGIzae71Gs1p32vR6p8rhq1ojqvLsdeecqtedzlIb7ip+Z1V0JwAAAHSn
rXb4Mn1CeHl3Cnq+U4G8ZLT6852KB+Q0rrlTzfPeiJfzQr1ajajqzw7anc6S
+Sfoq+wW3Vh3AgAAuLF0p+3W+8nlOU5/djj+77LutMz77OLzuguv+D1xZ529
Xmt/2BnEjSXq5iemxOvnsu+zG2YSRPnOuOQ2t8T77IaL32eXPJEp7wTyhLJG
VP3Zq88594BLdKd6AWiFdCcAAAB0p22XCk1l3WnWqWrsxavbnRaMnF9ElFjy
lLmmESZeqlR4JXpOyU9NjJx1p15rL+9QpsSCrrwnKupOlZ895x8hVHdKHPS0
zrCjOwEAAKA7bb+5A8avw3qnwmE565QK09Ny3WlRy5q/e9yd2oPU2qf0nCvp
ToWnl6+hO8UJaJ1b7XQnAAAAdKdd8Js/+53pAeOH1+B8p1ed/WGr2Uv0n16j
2W93i14bdz6+nzyIe25w3e6UM2GvsTfspNcaJbvT+CuzVU/NXuqnVu9O9Z89
QHeK2q1Uv4nXO4XuTud3arQ6k3voTgAAAOhOu2F2wPiPv78O77MLovx8p620
4u40bUyN9mX+iTqz6hQ87MwC10V9autOAAAA6E674Yef/jhxcFOw7pTYxZY8
CXwtdKdk15lopQpUFC8yyrOu7FTxtlG7NX2Q9R8/BQAAwDroTrtidrJTyO6U
fg1c2aHZYW69qe4UdfuTRtTYu+pyrzp79xI/IB12clY+RZ1Wfv1prKHqRBd3
z9y+uDs1qg0EAABgW+lOu2OZd9XVl39w9xq601k0GLXHBzdtqDvNNbfMoVL1
LNedzqJOSn7+SuWfi3VRBSMDmf8BhTkp/TjR2jdvAgAAEJbuRG2Di1O4G811
d6eN2/h6JwAAANguuhMAAAAAK3d6eqo7AQAAALBap6enR0dHuhMAAAAAKzSJ
Tq9fv9adAAAAAFiVWXQ6c74TAAAAACuSjE5nuhMAAAAAK3J8fHz37t2DqcPD
w9QA3QkAAACAEHQnAAAAAELQnQAAAAAIQXcCAAAAIATdCQAAAIAQdCcAAAAA
QtCdAAAAAAhBdwIAAAAgBN0JAAAAgBB0JwAAAABC0J0AAAAACEF3AgAAACAE
3QkAAACAEHQnAAAAAELQnQAAAAAIQXcCAAAAIATdCQAAAIAQdCcAAAAAQtCd
AAAAAAhBdwIAAAAgBN0JAAAAgBB0JwAAAABC0J0AAAAACEF3AgAAACAE3QkA
AACAEHQnAAAAAELQnQAAAABYztHR0cHUnTt3Up/qTgAAAABc3cHBQeovuhNc
B1G7cWtOox2tdsJWZ0U/FQAAAHLpTnA96U4AAABsO90JrqfLTNRod6JLV5/y
Umcyte4EAABAWLoTXE+z7nT13lQwte4EAABAWLoTXE+6EwAAANtOd9oi3z19
q9N94z+/86PLq/vG2/ffuvd0sPArb759MfiNztP69+v2b91+9+JqDgvTx2DU
3utdDrvda+wNO4P4i439V7njG5fjx19p9juDzLD8wRdXq7twTLPX2h9lfu2r
dvPdwp80N9swdbv0tTeq/ey15kwo7U6Z85oyir6rOwEAALAWutPWePpmXJxS
V/fN6GXeV16+9XY87M3ay2bKu9OolRNSeq1pjUlFnmi/V9Beeu1sPCvINcnu
FM1+YcmEIbpT5WfXnQAAALipdKetsaA7FWWlua+8cS+3TS1Q1p2KO1Je5Cls
RPndqbOXPzjuTiU9p5+IKqvvTjWePVh3Ouu0dCcAAACuM91pazx98+37b0Uv
E4Hm5SA6eXO2ountk0y7CbzeKU5DzfEWs4sFSMNWM6+9JMrP+O/xVrhoMGo1
+5nulBg/nbzw7rd7re7ljaJuv5HTcyp3p6S4F/WzfabOs1edM6XS+U6d1nTN
U6NGRdKdAAAAWAvdadt9dzI98en+Yc6nIc93mrWX+cYyamUjT2LNT/qApnyl
pSje5la8m2/WdgJ2p/JnrzxnStVzxeP0dKvVqRYXdScAAADWQnfadtH9Hy3o
TldSer5TvHWu1+7mLG2K20s8sry3FE4yZ9adMnv04rYz+2j13anGs1efc16N
99klTnqq9Po73QkAAIC10J222MtBdD9+vV3OPrsrqvA+u8XHHOV0pwWvxptT
PeBkz4bKJqkA3an6s9eZc27+6t3prGZ60p0AAABYC91pyxSdLt5967uV36ti
LBqM2nu9RrNad9r0eqfK4ataI6ry7HXnnKrXnc5SG+6qTK07AQAAEJbutGVy
utMbnZPDougU9HynAnnJaPXnOxUPyGlcc6ea570RL+eFerUaUdWfHbQ7nSXf
cLfwa7oTAAAAa6E7bZn87lSww26Z99nF53UXXvF74s46e73W/rAziBtL1M1P
TInXz2XfZzfMBJDynXHJbW6J99kNF7/PLnkiU94J5Alljaj6s1efc+4Bl+hO
yfK0oCrpTgAAAKyF7rS9pmuZLq785UxzkeqNey+rzFq3Oy0YOb+IKLHkKXNN
I0y8VKnwSvSckp+aGDnrTr3WXt6hTIkFXXlPVNSdKj97zj9CqO6UOOipOCvp
TgAAAKyF7rTVvjt5Y9HL7Nax3qlwWM46pcL0tFx3WtSy5u8ed6f2ILX2KT3n
SrpT4enla+hO8Yqn4m/qTgAAAKyF7rTdZiuaCs4VD3++06vO/rDV7CX6T6/R
7Le7Ra+NOx/fTx7EPTe4bnfKmbDX2Bt20muNkt1p/JXZqqdmL/VTq3en+s8e
oDtF7VaqHsXrnXQnAAAANkx32h6De/fHR4jPtsu9POxch/fZBVF+vtNWWnF3
mjamRrszGRR1ZtXJPjsAAAA2TnfaHoN73R9lDhW/vN4uOlr8SjeMd7ElTwJf
C90pXrjUuNRKFagoPkM8T6YqRe3WdKrSk8cBAABgBXSn7VHcnUIsdrqQcxTS
okOzw9x6U90p6vYnjaixd9XlXnX27iV+QGLpUtG+uajTamSL08XYnKaUmVB3
AgAAICzdaZu8HEQnb76dqE9vd9/oPB2EiU5j+Qd3r6E7nUWDUXt8cNOGutNc
c8scKlXPct3pLOqk5Oev6CI+xUXpYl1U0cj0fGvfPgkAAMDNojtRYnBxCnej
ue7utHEbX+8EAAAA2053AgAAAGDlTk9PdScAAAAAVuv09PTo6Eh3AgAAAGCF
JtHp9evXuhMAAAAAqzKLTmfOdwIAAABgRZLR6Ux3AgAAAGBFjo+P7969ezB1
eHiYGqA7AQAAABCC7gQAAABACLoTAAAAACHoTgAAAACEoDsBAAAAEILuBAAA
AEAIuhMAAAAAIehOAAAAAISgOwEAAAAQgu4EAAAAQAi6EwAAAAAh6E4AAAAA
hKA7AQAAABCC7gQAAABACLoTAAAAACHoTgAAAACEoDsBAAAAEILuBAAAAEAI
uhMAAAAAIehOAAAAAISgOwEAAAAQgu4EAAAAQAi6EwAAAAAh6E4AAAAAhKA7
AQAAABCC7gQAAABACLoTAAAAAMs5Ojo6mLpz507qU90JAAAAgKs7ODhI/UV3
gusgajduzWm0o03/pivIPE6rs+mfBAAAQGi6E1xPuhMAAADbTneC6+ky1DTa
nejSpn/RFU0fozN5MN0JAABg9+lOcD3NutO296a0SHcCAAC4KXQnuJ50JwAA
ALad7rRFvnv6Vqf7xn9+50eXV/eNt++/de/pYOFX3nz7YvAbnaf179ft37r9
7sXVHBamj8Govde7HHa719gbdgbxFxv7r3LHNy7Hj7/S7HcGmWH5gy+uVnfh
mGavtT/K/NpX7ea7hT9pbrZh6nbpa29U+9lrzZlQpTtFnXarkTg3qdFotNrt
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
AOH0Tk1zdWCwplQyxxUfUewstvhI4BOhd4r3Om3zBVVSb+Ku2nun1D2W9E4r
C/PdDQktqAAAANiu9E4N1D1pLpW7azjYaUvGUEhFg2bXc9fT6p1W9i23O6K5
3aMe7lXl3L3YClSrkhKTT+I8u5XF+blU+ZTfO82FTQgAAMD2p3dqqPOHL33h
Nf326e7XnD74+av13V32wN0T6J02V1bPLLQGbppS7zTQuaUGlapmuN5pc2Ux
oaRJ6o+xNJneqWuwf8qtk5KbszLxkzcBAABoCr0THatbo3DP7Zp07zR1Uz/e
CQAAALYrvRMAAAAAY7exsaF3AgAAAGC8NjY27r//fr0TAAAAAGPULp2uXr2q
dwIAAABgXHql06bxnQAAAAAYk3jptKl3AgAAAGBMvv71r9933333du3fvz8x
gd4JAAAAgDronQAAAACog94JAAAAgDronQAAAACog94JAAAAgDronQAAAACo
g94JAAAAgDronQAAAACog94JAAAAgDronQAAAACog94JAAAAgDronQAAAACo
g94JAAAAgDronQAAAACog94JAAAAgDronQAAAACog94JAAAAgDronQAAAACo
g94JAAAAgDronQAAAACog94JAAAAgDronQAAAACog94JAAAAgDronQAAAACo
g94JAAAAgDronQAAAACog94JAAAAgOHcf//993Z99rOfTdyqdwIAAABgdPfe
e2/iJ3onqM/Kwtw1A+YWVsa7wPnFMa0qAAAAjEjvBJOkdwIAAGDn0DvBJHVq
ormFxZWO0RfZsdhetN4JAACAptA7wST1eqfR+6acReudAAAAaAq9E0yS3gkA
AICdQ+80ZadX3vyf/99/V5SDX03N9OTywdZc+9+3XP0e9y1f84ovbWXXWm71
sXpmYfdSZ7JXLM3tXltc7c84t/dS5vRznelbs+xaXlxNTZY98Vbm9xVOs2tp
fu+Z1NpeWtj1pdxVGljaWuLuktl9pvK2V1pmzFC9U28Mp8LZ9E4AAAA0jN5p
yobonQZmyWilSpT3TmfmM4qUpfluG5MoeVb2LuV0L0sLq6ll59Q18d5ppbeG
JQuso3cK3na9EwAAAJTRO03ZEL3T8sHYrfs/fbriPZb1Tvk9UlbJk9sRZfdO
i7uzJ+73TiV9znKsVBl/71Rh2/VOAAAAUEbv1CQn3tctlIpOoKv5eKd+NbSr
dYrZ1gFIa/O7srqXWPPT+nn/VLiV1TPzu5ZTvVNs+u7Cc+/9FUvz+zp3tLJv
eS6jzwnuneL6fdFyup+psu2hy0wo7p16BVOJzNn1TgAAADSM3qlJwnqnmsd3
6nUvgx3Lmfl0yRM75ic5QFO20qaof5pb/tl8vW6nxt6pfNuDl5mgdwIAAGDn
0Ds1SWjvNJLS8Z36p84tLezLOLSp3730pyzvW3IXMqDXO6XO0et3O72bxt87
Vdj28GUO0jsBAACwc+idmqQZvVPZMEcZvVPBpfEGhBc46bGh0pVUDb1T+LZX
WebA8ovHd8oeycn4TgAAAMwkvVOTNKV32rJ6ZmH30tyusN5p2sc7BRdfYR1R
yLZXXWZX6bjiWR2T3gkAAICZpHdqkkaM75QjqzIa//hO+RNkdFwDo5pnXREv
44J6lTqi0NUea++0ubk43zmbrtcg6Z0AAACYSXqnJqnvenb98bpz079O3Obi
7qX5vWuLq/2OZWVfdsUUu/xc+np2a6kCpPzMuPhpbrHr2a0VX88uPiJT1gjk
MWUdUfi2hy9zYAPLe6d086R3AgAAYCbpnZokrHdaPvjv+r3T/k+fDlly1d6p
YMrBg4hihzyl0i1h+ocq5SbW55SsamzKXu+0NL87a1Cm2AFdWVuU1zsFb3vG
ThhT75QsmvROAAAAzCS9U5M053in3MkyjlPKrZ6G652KuqzBe+/3TguriWOf
ksscS++UO3r5+HunRNWkdwIAAGAm6Z2m7eKn37//fcsXW//fnPGdLi3uXZvf
tRTrf5bmdi0v7Mu7bFw0/XJ8IO6Biav2ThkLXJrbvbaYPNYo3ju1Zukd9bRr
KbGq4b1T9W2vp3eKnWw3t7CodwIAAGAW6Z2mrHfw0lb7tNKg69nVonx8p5lU
T+8Ub57m9E4AAADMIL3TdD35xf2xwZr6qbF3ip3FFh8JfCL0TrFT5jrmC6qk
3sRdGb3TysJ8d1GJq+ABAADAlOmdpu3i1klz759g75S8DFzZoNn13PW0eqeV
fcvtjmhu96iHe1U5dy+2AgFVUv7kmb1TYoF6JwAAAJpC79QUpy9+9e79b55E
75Q3cPcEeqfNldUzC62Bm6bUOw10bqlBpaoZrnfaXFlMKKm/eifb5ZVUyQWu
TPz0SQAAAMimd9qhVrdG4Z7bNeneaeqmfrwTAAAA7Bx6JwAAAADGbmNjQ+8E
AAAAwHhtbGzcf//9eicAAAAAxqhdOl29elXvBAAAAMC49EqnTeM7AQAAADAm
8dJpU+8EAAAAwJh8/etfv+++++7t2r9/f2ICvRMAAAAAddA7AQAAAFAHvRMA
AAAAddA7AQAAAFAHvRMAAAAAddA7AQAAAFAHvRMAAAAAddA7AQAAAFAHvRMA
AAAAddA7AQAAAFAHvRMAAAAAddA7AQAAAFAHvRMAAAAAddA7AQAAAFAHvRMA
AAAAddA7AQAAAFAHvRMAAAAAddA7AQAAAFAHvRMAAAAAddA7AQAAAFAHvRMA
AAAAddA7AQAAAFAHvRMAAAAAddA7AQAAAFAHvRMAAAAAddA7AQAAADCcPTHp
W/VOAAAAAAzn+uuvf3XXr/zKryTaJ70TAAAAAMPpHez0qle96tWvfrXeaWad
/ejb3jP3+q289nNniydd+9zH21POve3A2mTWjqlaWZi7ZsDcwsp4Fzi/OKZV
BQAAYFvas2eP3mmW6Z3IpXcCAABguvROM67VO1XokapOzwzr1ERzC4srHaMv
smOxvWi9EwAAAEX0TjNO70SuXu80et+Us2i9EwAAAEX0To0Ub4fSTVHrJ3c+
kZoydiZdMp/7YsaSNzcf/lx06y0PT2y7mCi9EwAAANOld2qkIXunzZMHXtuo
3mnf8jWv+NJWdq3lVh+rZxZ2L3Ume8XS3O61xdX+jHN7L2VOP9eZvjXLruXF
1dRk2RNvZX5f4TS7lub3nkmt7aWFXV/KXaWBpa0l7i6Z3Wcqb3ulZcYM1Tv1
xnAqnE3vBAAAQAC9UyMN2zttbn7xzvfMvf7jHz0ZsuT6lfdOZ+YzipSl+W4b
kyh5VvYu5XQvSwurqWXn1DXx3mmlt4YlC6yjdwredr0TAAAAs0nv1EjD906b
m0/csnWA08dveTjz8nbN6p3ye6Sskie3I8runRZ3Z0/c751K+pzlWKky/t6p
wrbrnQAAAJhNeqdGGqV36v7w9e957efS1VNB79QurIpP06uorHfqV0O7WqeY
bR2AtDa/K6t7iTU/rZ/3T4VbWT0zv2s51TvFpu8uPPfeX7E0v69zRyv7lucy
+pzg3imu3xctp/uZKtseusyE4t6pVzCVyJxd7wQAAEAAvVMjjdg7bf38i3e2
xhjPrKSa1zsNdixn5tMlT+yYn+QATdlKm6L+aW75Z/P1up0ae6fybQ9eZoLe
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
UTCiZvQM28es789mrL/eCTrG1jvlvAtGb+W9I5nn5rdubU+Y/KPSytaE/WOe
t07fGzyUKrac+fjHhfSM6WOls+9ys/s3r4EbAlY4Y65MeicAdiy9E8Emep5d
pvaHvYAPdxPQWZfuDin+Z7YZLQpG1IyeYfuY9f3ZjPXXO0FHrb1T962xcyxz
+x19IV0C9abrHfSceEPtvcdu3dxugwpmzFmPgN4pbIX1TgBQQu9EsOn3TkFH
EU2K452G04yeYfuY9f3ZjPXXO0FHnb1T+m9H/YOJUjVO8g10ZXEhWS8lm568
GeeT9xDaO1VaYb0TAOTSOxGsAb1T8Ke7mTCjRcGImtEzbB+zvj+bsf56J+io
s3fKfAdPdjshBzZn/mWnYMbk9KG9U9AK650AoNRUe6f+8dApqbfvwrF9hj77
vnXRtN6cc60hAoY7u79zJ6nRBnI+jYSMP5D/SSasAErPPo4Fbk01uNvSq577
ia59a8i2tybMeHRSiy65r9ZV8a7JvbPBVUkOIFF86+hyPnnu33NtdG833JF7
0+D34/137Lnh2mv7q3nttTfsuWN/atY7buhNc0Ps5tbcsVm3bmp9B4+vQO4a
paYcuCH7a3x4z7A/uWnRCmZtXDRdfLLsHVBxVTN2V3oJ1ZYZtKtjk5Y/pi1l
+7P94BVUKu11yNqO4tVoz5dccGdpAwvLee4FrX97HQbXIndv5N1R+f7sPWKD
j1L+bl/TO41H5seAzst9xoTDvtRvhn9OyO4yej+u8rePId/oK75Tpz54lLyv
lR2L254rZPtK5B7vlH2UUvenQYc155/DlzNj4p6rHe9UvMJZP8jR27flb3/R
K9ENN5RW4XonAGZFI3qnubScg6ezPlIMf/Z9f6FzvWumzS0sDHV2f95oA1n3
Gzj+QFN7p/YOiu2NnE9/mR/BQrc9NWFncIfFCr1T+r7mEvfVmaJzc/Lg+eJb
x6By75T+Tt8poq5pfZXe0v12PVgHdCdrTXRt/7Nst3LozH1tu6HY04DeaX/s
2/9W03BtvHuILzi9BzImqriq2btrtN4pcFdnblHmY9o1Yu/UW6/kdgSsRrp5
6swUX1Tecy9s/ftrUfgsKLqjoP3ZecTaj0fnIcq5n/SaM4L0x4De7/1g9zTS
S32Vzwnx96KMgfqCe6fh3+irvFNnfPAIel8reMNvT1+6feUKxneaG/wD0MAD
Udwwli47b8bBnVd1fKeiFc6YK09v35b3Tvl/f8p7FdI7AdBkDeidQr7Htz8w
tD9AlR7wHHj2fe/TxODhL9ckZg1cfvFoA+mPlAHjDzSzd2o9EIsZ+yx85ITg
sReSHyrTj075faX+bB4tpTcE6criYuLm+C4qvnUMKvZO6dap95PEF+P9dwz+
nTSjDYj9OHH0VLeHmGLv1GsQsg5u2vorcLI4S9zT/oyDbiqsas7uGqV3Ct7V
wY9pz0i9U791Sh2iFLQag3sga8fl7MzQ9d8fPdp37E+u+/6MY60KH7XADdl6
ysUnzHoiZaw5I8g+X2ox/Q4w2kt9hc8J/Woi8w0r8F1glDf6Cu/UWR88St65
pnq80+bgcWeturHXA06+d8rYCxmfFctWOHOubL19q3cCYKeZid6p9wEha4Zh
z77PGwgg+bEwcPl5n2Jy/nYWMv5AQ3un3A9qpSMnhG97yT0F9E7DDkBeci5H
cFMapFLvlHesU8iYNNlT5jUCefc0qd4pu0vKUtBppDa5cu+UcepdcgnBywze
1eGPac8IvVN3tfYkH98KqxHbB5m7o3RRQ47vlFPtJRvI0A3JPmmw6Aa903gE
f/8f6aW+yueEzrLyzu0PahhGe6Ov3DuVbX61d67WdtfXO3VuW1xcWGgdmtY7
wq34U1fIsos+yYRe+SPvzotWWO8EAKVmoXeKfz7I+9hV/ez7MZ/dH9g7VRl/
oJm9U+ZUQSMnhG97wZShj+NQY6B3/6xZPIrY+EZWr9A7ZRUX4UMhF/VOIW3S
JHun0uNjkpPm7IHkOjegdwrYgUMMbz1079Tf06nVq7QanblvyN4ZtfZOpV1Z
8IbkT5j/9U/vNA65r/aBA0GHvdRX+ZzQGsMw64jbnJmqbFTWutTdO1V+5+p1
I6MK/vNP8GefkmVXHlc890+PQb2i3gkAws1A7zQ4Ve5x5lXPvh/z2f2Veqew
48BnqHcKGjkhfNtLB/IofRy7D9p8jsTgrvFhWNMD2hbfOoLg3imzi+meunVD
jtgpajPUO1U54Kf4g3liFWaid6rwmPYM2TvFn1PJ1au6Gr0RlDK2sKbeKW9o
qcyBugI2pOAJm3uT3mkcRuydQl/qK3xOmOsOJ5j9ZhXeOw39Rj+m3mnYd65e
NzKqnPPsFuYTK5OervewDg7xtdh/+Ao/cSVPusw9l3/r2KXS4bZCVngsvVNs
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
MPgLkepmJ/sk1zuNQ/pjQPfBnsJ7V3jvFFvh3qvUkJ8vRnunrmGYI71TffRO
AOxYjeid0maxd8q7X70TOcqLgljvUjRU90wJ7J1a9idGDJ/qjpj13im/V6q1
dyoT9nzIfCLsn9hKZtI7jUPWx4D8a03UrErvNLb1bdw7td6pPnonAHasqfZO
kzSt3glyjeuT52yp0jtRbtb35+yuv95p2wnpnbY/vVN99E4A7Fg7pneCxpm5
L9pjMbs9QzPN+v6c3fXXO7Et6Z3qo3cCYMfSO8G0zNwX7bGY3Z6hmWZ9f87u
+uud2Jb0TvXROwGwY+mdYFpm7ov2WMxuz9BMs74/Z3f99U5sS3qn+uidANix
9E4wLTP3RXssZrdnaKZZ35+zu/56J7YlvVN99E4A7Fh6J5iWmfuiPRaz2zM0
06zvz9ldf70T25LeqT56JwB2LL0TTMvMfdEei9ntGZpp1vfn7K6/3oltSe9U
H70TADuW3gmmZea+aI/F7PYMzTTr+3N211/vxLakd6qP3gmAHUvvBNMyc1+0
x2J2e4ZmmvX9Obvrr3diW9I71UfvBMCOpXeCaZm5L9pjMbs9QzPN+v6c3fXX
O7Et6Z3qo3cCYMfSO8G0zNwX7bGY3Z6hmWZ9f87u+uud2Jb0TvXROwGwY+md
YFpm7ov2WMxuz9BMs74/Z3f99U5sS9dQs029EwA7j94JpmXmvmiPxez2DM00
6/tzdtdf78S2NO1WZvvb1DsBsPPonWBaZu6L9ljMbs/QTLO+P2d3/fVOwHD0
TgDsNHonmJa7d6odvvljN+v7c3bXfzovHMCMq+NVSO8EQJPpnQAAYHbpnQBo
Mr0TAADMLr0TAE2mdwIAgNmldwKgySbfO4mIiIiIyLiidwKgySbcOwEAAOOl
dwKgsSbZOwEAAACwc+idAAAAAKiD3gkAAACAOuidAAAAAKiD3gkAAACAOuid
AAAAAKiD3gkAAACAOuidAAAAAKiD3gkAAACAOuidAAAAAKiD3gkAAACAOoy3
d7ruV68XERERERERERGJoncSEREREREREZE6oncSEREREREREZE6oncSERER
EREREZE6oncSEREREREREZE6oncSEREREREREZE6oncSEREREREREZE6oncS
EREREREREZE6oncSEREREREREZE6oncSEREREREREZE6oncSEREREREREZE6
oncSEREREREREZE6oncSEREREREREZE6MpXe6dD3XVNrpr5XRbZTbrztni+v
rx/b7Fk/9sA9t940/RWbxdiZIiIiIiKyo9Lo3ull33H4R7/nyI99b5Tof6J/
6p1EJp7bv9wpSNa//MCBLz/Q60zWv3zb1Ndt5mJnioiIiIjIzkqTe6fDP/o9
az/98mP/5B9Eif5nq3rSO8lYctuB6Ku+b/phuf2u1AE5N7Z24Obm+l29nw+3
S3fcAxG2M+1DERERERHZLmlK7/T933b4h77ryI9/X5Tof6J/Rln9u3/rxL/5
l0+9/nVRov+J/tn+eXJKvZNUS+uYkwdun/ZqzHZu/NT65uBuvPWB6N8HbvVA
jGNnVkr1PS8iIiIiIjKhNKJ3+v5vO/zSl6y+/KXHX3Xt8X96bfQ/h3/g2w/9
wLcf+7m/f+7ttzzz6U9Gif4n+uehl74kuqkz5ataU770Jenqaep7VZqc1pf0
YY8tkV5uumfrHLH1e25M/CS4PPFAFO3MIWbX4ImIiIiISPPSnN7p6Ct/4qnf
+vdn3vjbJ2745fVf/MfHfv6Vp17368/c+6mrK49Fif4n+mf0w/Vf/NkT1//y
mZt/O5o4mkXvJNXiG/rY0h6qaOAwmwpVkgeibGdWihJPRERERESamUb0Tq3q
6fgv/KOn7/zgcw/cd+mvPvP0J+68cPutT3/kQ1ceXnr+1Mnnnzp15ZGD0T+3
fviJOy997jPRZNHE0SxDnGfXPqUlORxK/rfgG2870Lv41LEHtg5IyFnCzbc+
ELtM1fr6l2+7eeDohZtuv+uB4utYpb975n4bzf6aGVvV6N4r3PUENj9j3fK/
a5eOeFO+M8Mf/ZvvWt/MkVq3whUL2FfZm9y6xtnArsucMvSxCNrV1Z5aWWvY
3m+DS2g9kY596ubrUosNfiAyu5fOYxRfcthOC9/MUaYc/85s75/e9hb/s9Ke
HyGdQdGz76X4dzb9+vCp21MHd2XtxswjwUZ6vWrdS+rQsoxdWvKcTE+Wse1b
T4D0erb31eDPx/rbXfT0C30nGmEXjX9bCt9fQu+uOK0Hpfw3KGey5M5pr3D/
nSX6/wO33lTrr6eIiMh2zuYIpr7y9eW3bvq9pYNLu177v4fPEk0czRLNOOFV
bUrv9H3XrP+Ln7v0l59+4dzZ58+e/tbR1ctLB577yv+6fPDBK1976MqjD19+
+KvPPfC/oh9GN0UTRJNFE0ezDDGueKXeqTPuSvR5cv3Alx9of7g9cFd6Ce3Z
O5/he1PGPvCnJ+gseHzfZ7t30VrV6GvdzRXuelKbP7huxVvXmj7zW0DQzsxM
5rfIbu+0Hn01SCS5bgUrFravsja584W9e42z9fb3l3sSU1Z9LMp2dYWnVu+u
u2vY3gO35+7M8vPFCh6Igh4ydlPYTmtg7xS2M3vPyfaeLP5npT0/Qvr7PONe
in5ns18f0r+wo/ZOFX4HJ9M7dTY84w8Em4PrP+7f7tynX4V3omF30fi3pfD9
JfTuwp7ew/ZOyV/J7lqtd9aq+0t/zBGeIiIiQ2VzBFNf+fqydHDp6uXnHnvs
8cDqKZosmjiaJZpxwqvanN7p+D//2Yuf+sTzJ5984eLTL1669ML5c1e+8ejF
T378wvtv2/jge5757//1yvKj0Q+3brr4dDRZNHE0S829U+fDZGzirT9itp/A
qTIh+Vn0xtvu6X6S70wwcAxSZ2kHxvx9NrkJYXdd7+YXr1t669rfetpfyXNu
Ld+ZmckcyDrwq2XxilXaV/F5M47kue6mzjami4iy5Yfv6uCnVuZ354w1zH1m
jvxA9B7xqjutymZOpncK3pmVj3eq/1S71p22D+FI30u79VrPGqUq7/Uh1SWO
2jtV+R2cSO/U6+KSq5rsncb+21381A17JxpyF9X0SpX3/hJ6d+UZ6/FOW6uX
2Mk33Z7xqiUiIiJhab+5T2auGUqvRwqpnipNPPZMrXd66UsO/+B3HvmRv7H6
8peu/b0fOfrKnzj52l+9tHjP86dOvHj5uRevXnnh/LnLD31148/+9Owtbzr3
lt0bf/6+K48cfGHjwotXr0YTRJNFE0ezRDNGs0cLiRYVLTBa7Fh7p8zP88kP
uqXXosr5uJ7OGHqn5IfzwLuuc/PzVyPnpLPuxJmPVPDOzN3MYb9aFq9Y0L7K
mKxTROSd0Nf7eeDyw3d16FOr/d05Y4dn9Ab9FSj5xlflgeh8eY8/wUJ3WoXN
nEzvVHVnVsow5xZVSOfRyT6SpPMCck/GKVf5rw+p5+qIvVOV38EJ9E6dNc+q
qZO909h/u7OfftXeiYbcRWPelrL3l9C7K89ovVNQRrx8gIiIyA5O66Oy3ikj
gW3SdEun66bXO22VTn/7bx79hz++/ktzJ//tvzr9O/MX3veuyw892G6WWqXT
g8985r9v7H3v+dv++PzC26L/ufTZz1x59OHOBBsXogmiWaIZo9mjhUSLOvJj
37tVPY3/eKfsL8LdJeSO7DE4fchxCOPvnULvus7Nz1u3wq8M7QVmfP0Z6aCO
1leG1JeRIb5aplcsZF9lbXLuSDWJKQOXP/beqeDxzVlC9k4e9oHIrJhCd1r4
Zo44ZW07s1JC9vzQ6X1lztr5vWdd6glZ+PqQXNRYjncK+x2sv3dK1NQDS84+
3mmMv92ZT7+K70QjHe80rm0pfX8JvbvyTKB3Cnu7FBERkXT0TgUp7ZSmXjpd
N8Xe6Ye+e/UnX3b8F37m9O/+hwvvufXif/3opf/vs5cffODKN752deWblx96
8NLi/3j6o3924X0L7d7pwvve9fTHPnzpc5+5/PBXrz7+zSvfeDSaOJolmjGa
PVrI8X/2M6s/9bLDP/zdtYzvtD4w7OrgEkq/mHTPCWoNTJGR/vi6Y++dgu+6
xs3PW7ecrRtck9Rmhu/M4Ic+8KtlyYqF7KusTQ6uUMKWX1PvlLlzcm4K+F4W
/EDkHLcw271TlZ1ZKSHfiG+6J/VbU2FA/tbCC9vg5DoUb1diUWMa3ynkd7D2
3im+LantyhvfaWy/3QVPv+B3ohHHdxrPtpTv/8C7K4/eSUREpMEZrkEabq5Z
TEGz1ITS6bop9k4//N2rP/WDJ/71Lz195wcvLx24+sTjlx/66sX/9rELH7ht
4/23bXzo9ujn0X/P/cktZ9/ypijR/2x88N0bH37/xgffE01w4QPvvvjJj0Wz
bM24dCCaOFrU6t/5wVF7p4wD4PuDRWx92lxvjWs68F04tHfKVfS1azy9U/ld
17j5eeuWvXXJv1PnDIQSsDODH/qwTShbsZB9lbXJFSqUkOU3oHcKuLBa2APR
fazTO0fvlJmQS9r1xgaP/c6EfAuOP/8Ld0iisqizdxrm9Sp9pwPPyXH1Tpnj
cY386jGe3ilX4oEYfheNcVtC9n/Q3ZVnYufZjfhrLiIisiPTfqOfzFwzmsx+
qSGl03XTPM/uu478+Petv/rnt06vO/CV50+dvLryzY07PrBVMf3h7nNv23P+
nX904d1vv/Cn74gmuPD+hQt/+s7z73rb+bffcu6Pfv/cW3affcvujTs/eHXl
sWjGaPZommhR0QKjxY67d2rn5ltvu+eu1mWzehem6S2h9JD+/LMbSr921Xee
3eBd17n5eesWtr3J7x3BOzP4oQ/6alO+YiH7arTeKWT5NY3vlLnDazreKe+7
cCyz2jtV35mVMtKRGMUZ3MDEHQ20KMkGpujcruTLzui9U2dnVvsdjD0nwyud
rIcv/4TKxApn9E4ha17feXYBBWDlex/PtgSfMVdyd+Wpu3e66fbuxSuNKy4i
IlI57Tf3ycw1u0m0TM0pna6b8rji37X2iv/tyV/9pXN/csvlh5eurjx28a6P
XvjTd2z8+fsuvPedZ37//z73tj+49Jefvrx04PLBA9H/nHvrnjNvvunC7e/Y
2PveC+9918X/9l+uPvFYNGM0e7SQaFFbpdOI44qHfVIN+OP1YPImKB9dNn0l
r/jPy3un0LuudfNHG0I2OW/ozsx9IHLrjq0vLPEcSBy9ULJiQU+20Xun4uVX
7Z3Kn1q54/oWDu49wvhOsQei/VaxnrpMYeXeKeQ3qOqUE9mZlVLf+E6ZLxfd
fyaehJn/rGVc8eFer7JePK/rDV+ffUcVe6es16KB/iTkxaryb3feL1RsS6u9
E41zFw3/ShW2r0rvrjzj751uvvVT7XMYe1XYeupKgiIiIhKU9lvpZOaa6cS7
puaUTtdNsXdq5fCPfs/aT7/81P/5G8/e9z+/dXT12S9+/uInP/b0Rz50fuFt
p//T68/d+oeXlw68cP7c1jDjSwfOvfOPzrzxd84v/HE0wTN3f+K5L+3bmuW+
/xnNHi0kWlRvscX3Xni8U/RVN/Fh++a7Hjhwa+InySEaeuNmDAwudONtvREn
si77XjIkSPwnWyuWOZTQjantyjkJouyu69380YaQTX7xDNyZWSm6jFpa2XDQ
6RUr31cjnWcXsPzKvVPAU6v3rTbzFM7sgyLGdj27m7K+AlfvncI3M3jKSezM
SqnvenapJ1X8kSotNzI3OXp9CLv4YNHxTsO9XvUerNgyu0VW4ncn5GKdqXsp
fLloLyrrPLuRf7uzJ84cMC3snWjoXTTeV6qAt9eAuytPDb1T/J3lWNhAaiIi
Iu1sjmDqK1/fDpnMXLOeXvXUnNLpuib1Ti+cP/f8yRPPPXBfq3T6v868+aaN
ve+9uvLNF69cefHK5atPPLbxkT87e8sbz7zpdy+8+08u//X9z586Ec0y5t7p
gds7f9Ltf/TtH4PR+cNl+8b0Jby7nzDbo7YeS34L6E3QWU76A3zB+Tvta5cf
W2/98TR1EkH0Cbz/8/XOILF33XZzhbuubfML121we/PPncm4IlX5zsxM6x7D
LoOV3DnlKxayr0brnQqXX2FXBz+1BlYydtedu8jab619UtqfVHkg0l/Sq59n
F7CZlaecwM6slLA9P0RyS4PWpqXPb815kvd/YQ/0/1mwY2+6/a7+b/f6wPN5
pNerzgrfurUJrbGAeqMDRZPd1lq3gUcwpL6I7aKSl4v+6OvJrmbk3+67PrW+
mVz5rGIn8J1o+F003leq68veXgPfpMpS53l2N249mcuPjxUREellcwRTX/n6
dshk5pr16J16yTjP7pGlFy8/t/nC81cfXz7/rree/o+/efYtu5++80OXH3zg
W2tHvrV6+PJX//rpT3zk3J+85cx/ev35295+9fFvRhNHs0QzjvM8u61Pqr1B
SvvH4dz6qQO9ISO2Pq5nXzTt5htvG5js2AOJrx6t5fRvTx9yXzRuzNZn9d7C
1+O1Uu/v2gMSf9EuuevaNr9w3Qa2t/0VMvtjeeYwvCU7MzOZzUZJ71RlxUr3
1Yjn2RUtP3xXhz+1Ys+Qzvem7oMb3W/mfisfZav6AzHKTgvfzGGmrHlnVkrg
nq+ezCKl9+07t0JJdhGJp27W4R9ZRXTm83mk16v+jrrxtlgD1vsFv+n2gUcw
6BiV/iYXjUfU21fZ546N4bd78OmX96oY9k400i4a4ytVZ4GFb6+Bb1KFqX9c
8aKxzkRERKQw7ff4ycw103GeXTzJccUf/MrzZ57afOH5zRdfvHrkiY0/f9/Z
t7zp/DvfeuED7376o3uf/vidFz92x9N/sXfjw++/8KfvPPfWPRt3fPDqkUPR
xNEs0YzR7GMYV7wRCRzDtmi7mvnn1OasW9ajP44hnUMz0kM8A7s65JJqlR+I
ST5AM5vgPV852SVJp5q4K6tmGfZJGHyeXePS7Z1uKxnwvPNMvi2vOC3JaIOf
NyuNeFOIntu9crigUAqcbCY2WUREZDajdwqJccUT2eqdfvi7V3/qB0/86196
+s4PXj744NUjTzx/5qkXn3326uEnnv6Lvefe/p/P3/b28wt/fO6te86+5U1n
b3njubftuXD7Oy68913n3/H/PP1fPnz1yKFo4miWaMZo9mgh0aJW/84PRovV
O017Kxq+bukzvPROY0uVP+gHPxAuPj7mPT/EkjNeMNv3eKzg1MjKZdHM905f
Lj2Xqt1atM8U0ztN/U2hM8jY1lFbt36qsHcKmWwmNllERGQ2o3cqTWbL1Jzq
aWq90w999+pPvuz4L/zM6d/9Dxduv/XiXX/x3H37v7V+7Mpj39j48PvP/dHv
n7v1D8+97Q/OvOl3Tt/0m6f/42+eeePvnPvjPzj/zj+K/vv0Rz509bHlaOJo
lmjGaPZoIcf/2c+s/tTL9E7N/EzbqHVrrUx6XHS908jJPf1thAfipts7g7dU
/5K+g1Jxz1dJ9qXNroufLZVRCg33PJ/13qmteKtjU+qdmvCmMHDSa/76BE4W
e1DuGhwIvXuJhGZ+9hAREWl69E7FKeiXGlI9Te88u+888rf/5tF/+OPrvzR3
8t/+q9O/M791wt1DD175xtcu3vXRC+9b2PjwB1on1r3j/MLbzr/rredvv3Vj
73ujn2x84N0XP/mxK8uPRhNHs0QzRrNHC4kWdeTHvjdabLp3unFr5If1Y4mL
s2/GfhI6iEfdGe3rQ+uD8fQ/xldYt/YgIZMf7yIxEk5/WNpjiYz/i3z93xCn
t6urj2td+kB0v+atN+o79bSet2Pc88EpOHKpO/5S1mtO56Gs+BU7e0yzYa5N
Nun026TSV+B+XzfEy0veb/cM9k6NelPojYtV/PAFThZ7UHpXGRjhQRcRERG9
U2FKm6UmVE9THVf8O4/8yN9YfflL1/7ejxx95U+cfO2vXlq858ryo89+8QuX
vvBXzz34lSuPPnzlm1+/+vhylOjnVx45ePmv73923189+6UvRP+MJo5miWaM
Zo8WEi1qq3TKGlc8cxTTQQ35UjObXx9G2d5pfaMcGKNj4GrXA2axd5rWrm7t
0sp/yi99INaHGiJ41nfmBPZ8WAoPSikql4Y6miXnt6NzllPrwmrNaiCTuyLs
WdFpJMb38rKd3jim+Mu19SAGPGMDJ+sWa/GXsqCLX4iIiEhG9E55CeyUpl49
Ta13SuX4P//Zi5/6xNXDK1e+/sjlRx+68tg3vrV+9MVnL7WfLdH/fOvY2tZh
Tl97KJogmiyaOJolc1FTf/RFcrKdviGKjDe5vx2xa5n53amw30RERES2R/RO
manUJk23empO77T+L37u0l9++vnTp9r90nNf/tLlgwdeOH+u/WyJ/if653Nf
/mJ0UzRBNFk0cTSL3klERERERERkuybn7JQgU1/5+rJ0cKlSj9SrnqIZJ7yq
Temdvv/bjv/CP3r6zg8+98B9lz73mac/ceeF2299+i/+/Orjyy88czFK9D/R
P7d++Ik7L/3VZ6LJoomjWaIZ9U4iIiIiIiIi2zJ6p8z81k2/t3RwqdLBS9HE
0SzRjBNe1Ub0Tt//bYdf+pKjr/yJp37r35+5+bdPXP/L67/4s8d+/pWn/o/r
Ly3ec/XIE1Gi/4n+Gf1w/Rf/8YkbfvnMG387mjiaJZoxXT1N/QkgIiIiIiIi
IiLN6Z1WX/7S46+6Nkr0P4d/4NsPvfQlx37u7597+y3PfPqTUaL/if556Ae+
Pbppa8p/2p1S7yQiIiIiIiIi0sg0ondqV08/9F1Hfvz7okT/s1Ulff+3rf7d
v3Xi3/zLp17/uijR/0T/bP88OaXz7EREREREREREmpem9E5ZOfyj37P20y8/
9k/+QZTof6J/Bs449b0qIiIiIiIiIiJN7p0Ovew7Dv/o9xz5se+NslU6vew7
9E4iIiIiIiIiIrOSRvdOw2bqe1VERERERERERCr1TpcuXbp48eLGxsb58+fP
nj0bTTBc7yQiIiIiIiIiIts+7b7oK1/5ykMPPfSNb3zjiSeeWF1dPX78+IkT
J5566ql277SxsXHx4sVLLe3e6cKFC/HeKZpR7yQiIiIiIiIiIvG0+6IHHnjg
4YcfXl5ePnTo0NraWq93Onv27Pnz5zN7p3PnzkUTRFMePnw4mlHvJCIiIiIi
IiIi8bT7ogMHDjzyyCPf/OY3Dx8+fPTo0fX19ZMnT54+fTrROz377LPtIZ6i
n7R7p2jKI0eORDPqnUREREREREREJJ52X/Tggw9+7Wtfe+yxx44cOdIb3On0
6dPxwZ2eben1TufPn48miKZcXV2NZtQ7iYiIiIiIiIhIPO2+6Ktf/WpvUPHE
4E6J3ql9ql37qnbRBNGUa2trjz/+uN5JRERERERERETiafdFBw8ebA8qfvTo
0SeffDLvJLvnnnuu1ztFP48miKY8duxYNKPeSURERERERERE4mn3RQ899FB7
cKdjx46lD3Zq907PtbRPtWuPLh5NcOrUqePHjx86dEjvJCIiIiIiIiIi8bT7
okceeeTxxx9vn2SXONipd5Ldc889d/ny5fapdu1RntpDPK2vrx8+fFjvJCIi
IiIiIiIi8bT7okcffbR3kl37YKfz589fuHAhfpLd5Zb2IU/ts+16Qzytrq7q
nUREREREREREJJ52X7S8vNw+ye7kyZPtM+wyD3a6cuVKu3rqHfLUPtXu6NGj
eicREREREREREYmn3Rc9/vjja2tr7YOd2mfYxUd2ah/sdKUlcchTNGU0y/r6
ens5IiIiIiIiIiIi8Rw6dKh3sFP8DLvEwU5Xr16NV0/Rre2r2p06dWrqmyAi
IiIiIiIiIg3M0aNHT5w4cfr06fg17NKl07e+9a149RQf5enUqVPr6+vHjh1b
W1s7cuTI4cOHDx069MQTT6ysrDz++OOPtXwTAAAAgO1iuav9z3b/8/jjj6+s
rDzxxBOHDx9eXV09duxYu3Q6e/ZscemU6J3ahzy1q6do3mgJTz311MmTJ598
8sn19fXjx49HSz569Oja2tpqyxEAAAAAtql2/7O2tnb06NHjx4+vr6+fOHHi
1KlT7bHE46VTe1inRO/0/PPPp6un9lFPGxsb0eznz58/e/ZstLR2BxUt+eTJ
k9FdPNmyDgAAAMA21e5/Tpw4cfLkyVOnTp0+fTpx9breQOKZpVO7d0pUT/ED
n6IlXGg53xIt+WzLmZbTAAAAAGxT7f6n3QW166b2EOK9UcR7hzmlz7B7vitR
PcUPfIr0CqhIe8nxJgoAAACAbaPdL/W0W6B2I9Ruh3qNU/zcuszS6YUXXkhX
T4kDn3rtU7uA6nVQvRoKAAAAgO2nVwG1G6F2OxRvnHqHOWWWTm2J6ilx4FO7
feoVUL0OqldDAQAAALD99CqgXinUG8opcZhTXukUr54yD3xKtE+ZBRQAAAAA
20yibko3TpkDOvXqpv8faJgEDQ==
   "], {{0, 0}, {1576, 954}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{788, 477},
  PlotRange->{{0, 1576}, {0, 954}}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7483917840057354`*^9},
 CellID->361831443]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsection",
 CellID->182977116],

Cell["Use the current notebook instead of creating a new one:", "Text",
 CellID->280595],

Cell[BoxData[
 RowBox[{"TraceInteractive", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "+", "1"}], "&"}], "/@", 
    RowBox[{"Range", "[", "3", "]"}]}], ",", "_Plus", ",", 
   RowBox[{"CreateWindow", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellID->924450365],

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Input",
 CellMargins->{{25, Inherited}, {Inherited, Inherited}},
 CellFrameLabels->{{
    Cell["2:", FontColor -> RGBColor[0.880722, 0.611041, 0.142051]], None}, {
   None, None}},
 ImageSize->{46, 23},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellID->2204728],

Cell[BoxData[
 RowBox[{"2", "+", "1"}]], "Input",
 CellMargins->{{25, Inherited}, {Inherited, Inherited}},
 CellFrameLabels->{{
    Cell["2:", FontColor -> RGBColor[0.880722, 0.611041, 0.142051]], None}, {
   None, None}},
 CellID->94763525],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "+", "1"}]], "Input",
 CellMargins->{{25, Inherited}, {Inherited, Inherited}},
 CellFrameLabels->{{
    Cell["2:", FontColor -> RGBColor[0.880722, 0.611041, 0.142051]], None}, {
   None, None}},
 CellID->360717919],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellID->89191319]
}, Open  ]],

Cell["\<\
Automatically close the trace notebook when evaluation is complete (result is \
returned to the current notebook):\
\>", "Text",
 CellID->284519841],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TraceInteractive", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "+", "1"}], "&"}], "/@", 
    RowBox[{"Range", "[", "3", "]"}]}], ",", "_Plus", ",", 
   RowBox[{"NotebookClose", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellID->532591502],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellID->804815079]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications", "Subsection",
 CellID->206498746],

Cell[TextData[{
 "Enter a subsession when an error occurs to investigate the current ",
 Cell[BoxData[
  ButtonBox["Stack",
   BaseStyle->"Link"]], "InlineFormula"],
 ":"
}], "Text",
 CellChangeTimes->{{3.748389567880882*^9, 3.748389593320159*^9}},
 CellID->237295030],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bytes", "=", 
   InterpretationBox[
    RowBox[{
     TagBox["ByteArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"118 bytes\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"118 bytes\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ByteArray[{56, 67, 58, 120, 156, 45, 200, 177, 14, 130, 48, 16, 6, 96, 67,
      162, 29, 116, 209, 39, 96, 240, 77, 136, 50, 233, 2, 139, 155, 135, 253,
      75, 47, 148, 59, 210, 131, 196, 199, 183, 131, 219, 151, 47, 84, 182, 
     111, 34, 62, 83, 168, 236, 210, 232, 188, 232, 38, 254, 246, 93, 50, 204,
      88, 165, 172, 123, 20, 210, 136, 194, 227, 159, 79, 154, 97, 174, 133, 
     32, 83, 234, 14, 44, 43, 114, 238, 78, 47, 221, 234, 33, 235, 132, 154, 
     215, 176, 179, 115, 155, 116, 160, 244, 246, 218, 71, 244, 145, 101, 52, 
     119, 189, 19, 39, 248, 31, 134, 178, 41, 81}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BinaryDeserialize", "[", "bytes", "]"}]}], "Input",
 CellChangeTimes->{{3.748388784040344*^9, 3.7483888040787725`*^9}, 
   3.7483891010202727`*^9, 3.748389347032215*^9, 3.748389453680156*^9},
 CellLabel->"In[132]:=",
 CellID->369476667],

Cell[BoxData[
 TemplateBox[{
  "General","interr",
   "\"An internal error occurred: \\!\\(\\*RowBox[{\\\"\\\\\\\"You broke it\\\
\\\\\"\\\"}]\\).\"",2,133,15,31073274211410623817,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.748389105505149*^9, 3.7483893485781775`*^9, 
  3.7483894554191046`*^9, 3.7483918090649586`*^9},
 CellLabel->"During evaluation of In[132]:=",
 CellID->471712167],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7483891055091486`*^9, 3.7483893486001787`*^9, 
  3.7483894554441137`*^9, 3.7483918090949554`*^9},
 CellLabel->"Out[133]=",
 CellID->675824649]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TraceInteractive", "[", 
  RowBox[{
   RowBox[{"BinaryDeserialize", "[", "bytes", "]"}], ",", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{"General", "::", "interr"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.748389118400773*^9},
 CellLabel->"In[134]:=",
 CellID->385913009],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.748389200317407*^9, 3.7483893865690627`*^9, 
  3.748389529411992*^9, 3.7483918854465857`*^9},
 CellLabel->"Out[134]=",
 CellID->527816828]
}, Open  ]],

Cell[" ", "Text",
 CellChangeTimes->{3.748393877669798*^9},
 CellID->52506717],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3c+PJMeBL3biGTB89L/gm/8Eo28+vuszfPFF+569vfBFBvYZMHwcnXRs
YI+LOQg66DK3BRrLBwyeQEtccimxSYq/ZnrI4fCHZiguNW+99q4tr3ZcXVmV
lT8iMiMyM7qquj4fDASxOjLyR2VlRH4rMuq/+nf/y785/1evvfbav/8vVv/z
b/7t//bf/vmf/9v//b/7L1f/8d//8N//z3/2wz/9n/71D//XP/2zP/3z/+bf
/WerF//D6n/+6//8tddu/v8ft/556/9b+8Mf/vD/rv0/a/+09o9b//fW/wUA
AADAHVVHQHUoVGVEVV5UZUd/+MMfqjSpDpf+2NZJnKrQqU6cmllTtdJ/2Po/
AQAAALij6gioGUPVAVSdPlVpUjN9ioVO9TCnZuJUZ03VSv9+6z8BAAAAcEfV
EVAzhqoCqGb6FBz4FAydmsOc6sSpjpuqlb5c+z0AAAAAd8v333/f/M8qBapj
qDqAqtOnzsCnzjN3ndCpnsqpTpzqoU1V1vT92t+tfQcAAADAHVXlP1UWVGVQ
9SCoOn1qTvrUj546oVNnmFMncaqzpt+tfQsAAADAHVXlP3UG1UmfggOf6uhp
OHQKJk5V1vTixYvna78FAAAA4I6q8p8XL15UGVQwfRqInjq5U3OkUx061YlT
FTetVvrNN998vfYVAAAAAHfFl1vVf1b5zzfffFNlUC9evKjTpzp6ao566uRO
ncFOndCpGubUTJyqrGm19mfPnn2x9hQAAACAO6dKfp49e1bFUF9//XUzfaoG
PnWip86Qp84Tdp3Q6bvvvvv222+biVMVN61W/fnnn3/22WdPnjy5BgAAAODO
efLkyWefffb5559XGdSzZ8+a6dO333773XffdaKnztN2Ve7UD53qYU6rqqoB
Tqv6q6xptd7Hjx8/evTo008//QQAAACAu+Ljreo/P/3000ePHj1+/Pj6+vqz
zz6rAqgvv/zy66+/Ho6eqtyp+YRd9et11Uin3/3ud6vFV5WsqlrVWcdNq9Wt
Vv3RRx/9Zu2DDz54HwAAAIA754MPPqjyn48++ujjjz/+9NNPq0FQn3/++bNn
z6qBT83oqfqFu+bTds3BTtUP2NWh01dfffX06dNVbY8fP/7kk09Wq/jwww9X
a3zvvfeurq5+vfarX/3qHQAAAADunF/96ldV/nN1dfXee+998MEHH3300Sef
fPL48ePPPvusip6eP39ezfX0+9//vv55u3rIU5U7NQc7fffdd1Xo9Pnnnz96
9Ojjjz/+zW9+s6r83XffrVKmt99++6233nrzzTd/+ctf/uIXv/g/AAAAALhz
fvGLX/zyl798880333rrrbfffvudd9759a9//d5773344YePHj2qoqdvvvnm
xYsXwSFP1UN29cxOqz/9/ve//93vfvfb3/72iy+++B/+xz/zzz///PPPP//8
888///zzzz///PPPv86/jz766PHjx0+fPv3qq686Q57qWZ76P2P3/fffv3jx
YrXIkydP9r4L/vnnn3/++eeff/75559//vnnn3/+HeC/999//9NPP/3ss8++
/PLL3/72t50hT/Wjdp2H7P7u7/7u+fPnz549e/z4cVXPKwAAAAAO3n+6FVVe
9O6773788cdPnjz54osv+rM81Y/aNXOn6iG7b775ZrXIp59+KncCAAAAOBa3
mTv96le/+s1vfvPo0aPqUbv6h+06uVPzl+yq3Onrr7/+/PPPP/nkE7kTAAAA
wLG4zdzpnXfe+eCDDz799NPPP//8yy+/7M8uXj1q18ydVn/69ttvv/rqq88+
++zjjz+WOwEAAAAci9vMnd5+++3333//k08+qX7Vrn7ULpY7rV5s5k4fffSR
3AkAAADgWCQGR/+xIf2VTu701ltvvffee7EpnurcqZrcabVUNal49WN2cicA
AACA43KbudPf/M3fXF1dffTRR9fX11988UU9xVNnavFY7vThhx/KnQAAAACO
xV5yp8ePHzenFk/JnZ48eSJ3AgAAADgit5k7vfnmm+++++6HH35Y5U5ffvnl
cO60elHuBAAAAHCkEnOnmYZzp+on7fq5k/FOAAAAAMfrEHIn8zsBAAAA3D2T
o6Rbnt/J79kBAAAAHJe95E7Tfs9O7gQAAABwROROAAAAAJQgdwIAAACghMm5
Uxa5EwAAAMCpkTsBAAAAUMKC4ZLn7AAAAACoyZ0AAAAAKEHuBAAAAEAJcicA
AAAASlgwdxogdwIAAAA4NXInAAAAAEqQOwEAAABQgtwJAAAAgBLkTgAAAACU
IHcCAAAAoAS5EwAAAAAlyJ0AAAAAKEHuBAAAAEAJcicAAAAASpA7AQAAAFCC
3AkAAACAEuROAAAAAJQgdwIAAACgELkTAAAAACXInQAAAAAoQe4EAAAAQAly
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
qkyj0L179y+vnrcr3Kynt3B0lxJKNmzG9k0f8bSdKmpo8evWR/LmgxP53Kw/
5HWxKhOuVjBx866TLxujV7n8PYocmsYzvp0/5F9hhjbxYmgCu9gBrY7X4IWw
vQ65E8B+VdfqfW8FcNzkTpSW1FoFMpvA3xs3IPFbnvZdSn3T2yvWXVlyyfCq
z1b34919iFZZ3UW+Sqi2v0e9pcZvyzYBSVArNIkHNa2MJit3SqwzPXcKV/jg
4cMlcqfGIuFYKr1k0dwpXHk7EIpvQLvKkrlT86wuljvFPjr9JUKfyLOLi0Cq
nWroshH+hKfkTql7FDw09SYlXbhmvDMTcqfwInIngENWXav3vRXAcZM7UVpS
a5WZO23vrNoDC6qRB+ede7DVC52JvbdTzrRXl1pye+d0tl11awRFs+hmK9fz
il+PjClI36O28duyXT7y4GFjjNHLTRjVyGmqOOmm3Hr80LbgeqTUw4m5U3Kd
ybnTdn8ebCtc11WHSdHlIxsdqX2B3KklEi0N/nEgd6qWuPnbVXgwVKPI/WaZ
5+tRUvdvLXdqxjJTn7MbyZ0aH53th2z1sQk+23dZP9963S42PXzZXJl2625c
Njo1JudO6XvUPzTRpxqnXmFShYakxvcs+UcO5U4Aeyd3AuaTO1HaErlT+45t
cMbuJEn3SJGSdZrUvqcMRFRjYVpj6cl7NHZbVqcjvTymm/NsSyY86JacO2XU
mZw7bZKs7qiq7ZiumbnTgs/ZtSybO408gbcrkRQRFX3Oro5pp39ah3On2BT9
gc9UsOjMxwAjl5LQqlJzp4w96h6aXa4TGU1Zbo6tlGtqyhOT/UXkTgD7JXcC
5pM7UVpG7hS9wWjfsaWnRoO1JdQQKhnOnYJ3lZt5Y86b46GCc79M36OR27Lt
cKNANNLNeVJzmXjRfu6UUefM3Gl8+ZxtWd6yudNgbYkleuspNb/TbINpxcAv
Q/b+FPmYTUhDuivpLxu9HIxGPzl71Nr0oYhv7jVzXMoaJmyF3Alg7+ROwHxy
J0pLaq1GZvZt3bHlTc/brOXyIvJEXFbJ3QMrrQApuFmRGVDOgqWmjEUYvi0b
Gm/UyWlypvVOzZ1y6kwvvHt072nOc3onlTtlBUTHnDsNfXR6y91m7hT4Q9rH
PGuPGi/sniHMrHQhcieAu0ruBMwnd6K0KblTN4Zq/ffIbLahG8vLzg8oRSc0
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
fM6uZdncaeQJvF2JpIio6HN2dUw7/dM6fCMcm4U48JkKFp35GGDkUhJaVWru
lLFH3UMTneBo/jVzTMo1NeWJyf4iqcU3l+CcFG34jBg9d16NHdilkp9pb9/h
505TTke5E+yB3AmYT+5EaRm5U7R32O5Ap6dGg7Ul1BAqGc6dgp38zbwx583x
UMG5X6bv0UifejvcKBCNdHOe1FwmXrSfO2XUOTN3Gl8+Z1uWt2zuNFhbYone
ekrN7zTb4I3wwI9f9f408UZ7UOyjG70cjN5r5+xRa9OHIr6518xxKWuYsBVF
Q4PYO9KPeXLelIQVtBZNTmlyD8Qh507pjWNgr+ROcNvkTsB8cidKS2qtRmb2
bXWg86bnbdZyeRF5Ii6r5O6Jh1YfObhZkYkxzoKllv/yd2i8USenyZnWOzV3
yqkzvfDu0b2nOc/pnVTulBUQHXPuNPTR6S13m7lT4A9pH/OsPWq8sHtiLLPS
hRxj7hTdnu7xynpTBupJW3/sbc59+w46d0ptHEN7JXeC25bUkwcYJHeitKTW
qpM7dWOo1n+PTHIa6vVedn5AKT4jRlLJ+JSonU5+bzqT8Iwg+XvUXHSgTx0b
G3QjnDvFjQ9jiuVOSXXmhFTb5ClE7tRYNK657KHnTkOJyuCtdfcm+FZzp/6W
zc+demvbbvr2ojUyw/SUK0yqk82dhvZq2dwp9+077NwpsXEM7ZXcCW5b9dnc
91YAx03uRGlJrVU7aOo93jYnd2oUH/nR8PSSr0I/Bt7vMoefwOi/Wip3Gpxe
6Yhzp1ebycRDtcudGovehdypEfImpTu9v+11vNOyuVN8vNNFe37syIJTrjCp
jjd3ChzrwxzvlPv2HXTulNo4hvZK7gS3rbrU7HsrgOMmd6K0tNZq3d9sBkvr
r/DbQdT2v+JTkgb+0vjdnJRNSCoZFOjkhzvh0YKJe9StLCt36kVBnfmdQrFN
7y+b8UbdsrH5nZLqDP4a3tDrkZ093typF+fMn98pFBD1/xJbT//19JJLqWfa
OY/cDB/G/E6B9Uefsxtb/8T5nepsInixmH6FSXWMuVP0ne9do0vO79T7c84s
3ENv31JrDy02mDul1JncOAb2Su4Et03uBMwnd6K07Nypip0urm9e2vQXO33U
WM838Hr6zBhzp0AJ9LjTv9LN2KPeVi+UO0WDmf7r9XNu7cKBOCq9zsaWtYtn
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
tfv1W8Z+BUYxrXeqv7k5Jc/OL1rP4V2H56BJn8Ii553qLDfw56H5nfq2yc+D
q3rC7pebbKVdRXN+pW3hl0+vAiXT62wnYvWc4S9Dta4qeHi1qrDxkN7AD/e1
NnrsUDS2YqRoeskbabnTusjVuszzq03GE1om5dfqntfLX22LPb+6H6qz9VDe
vfub4s8D608vuYj2Pf3IHU7zs3O9uw1MuHlfJndqXI0jl4PWLeeubP/Knb5H
GVfjqVeYvAOxv9yp+ZR0xgoaWV3zsn/eu2tOf1P6tY8mP68t2pQvv/b+YmO5
U2NTI3Xeofmddmnb+cXlxfnQ4cua3ymxm9HflNm5U8b5lvwJCqxC7gScFLkT
pSW2VjkDnrb9hcvmbcxrsf7I5Xm/VGxFkbKhAUSt50d2PciBXsRwL+O6no6z
jp0awVPw+bnU/epOuDC/ZKRc+PvBoZkSJu5R8lENpjZDtpFQRyfN2TwkdxUq
3Q9+0urcbOtqS0OzQrULR+cVH9rPPeROzTxpKJnZPPp2uY2FmnZjiEbnbOoN
OArVFxiWVFW82rbQGlqF00suoRfGDzzTFv6UBTPoErlT0tW4flo4NOahN+4j
aY/yrsaTrjAJex/fvsY2DhnYgtK5U+OAjW5X4pvS36ixGZaWb8qXXnvKG70r
d34R2tbQ9zexIz+w2YeXO7XToLorE9uY4VOmX21Pb+HUdyew0OB3gYnnW/on
qL2Y3Ak4MXInSkttrZKfc2v1F5ozCpxFJyZq/0jb2dnQTODrL6qGSof7TY0v
gwe64Am5UzN22gVP4ekG0verMz3nWXNI16SSq2LtCT+ricjjVab1ynLeqc0S
I323vBFPN26GI+2Cnwf1yKNepessqFk6WDa1zl3u9Goza/hQ6VWB9rziq1JX
kZW3NvpWn7PLzJ1ucpubIUn1s2z1iKK1/NypU1+vxlbF1bY9v7q8H1l/Vsn5
Ql/tD9y0pXxwS+ZOvatx/7PbnKVurGziHmVfjfOvMAl737C/3GnSc3b1WrrH
OvY1UHpLst36of0r2pQvuvbM3Omys63RLc1oHBt7dVi5U/dLw8acAdHCiVlq
YjejTO70alYXa/yLVLkTcGrkTpSW3lolDRraFdxXiz35Ji0pd7poxU6bl88v
l5r79u4Z7bvVw3ISfyjuztrvvOLLSnnO7rjFcvicB5JvxZFejffj0OYVH1rr
Ii1OevJTwn7XXsrB5U7di9JyuVNRZd9+8zsB9MidKC2ntWrMEtD4ErU3x9CR
3umk5E6tH7Frru5AumqHJ6Hv1piw+2FrTqSbUUUP70QOk0LudETi85hk/QTD
LTjSq/F+yJ3a5E4THF7u1JxV7Xr7y5I3cwb0Zsc8pE+s3CmL3AmYT+5EaXmt
1XV0xoO7kTudX1xuxAfyx54ZOYSu2uEZOaoboSmTkiYxukP2mTttJlq6t9QU
SHc8dxp+6Piwhjwd6dV4aWnPuKUfrOvtJe3m6Z1jyp3iU90EGvPFT57ya5/x
MONC0pq8Wz6F4j23aH9m6K2ZKufd2VfutOeP9lTVO7TvrQCOm9yJ0vJbq8AM
S63fNDnaO526vzGYO8VmXzmEm6tDNHxUG9bDm/KmRDp+vRnI95E7NSZmWigq
Ws+tdO+O5k71B35kat7DGPJ0rFfjEpsxuinVJDBZudPYZa0MuVPYQQw/Tjw3
bv0U6vbcXnstMBtTydwp4d2ZNBPUjG0Zyp3289Geqjpc+94K4LjJnSitQGvl
TgfSHETutPx4Jw6Gq/Ha/ofBLGqp5+xG7PfkOdLxTkdgcIansiseeXcOIHc6
UnInYD65E6VprQAATsHecieK0ZMH5pM7UZrWCgAAjpGePDCf3InStFYAAHCM
9OSB+eROlKa1AgCAY6QnD8wnd6I0rRUAABwjPXlgPrkTpYV+LRcAADgO+76f
AI6b3InS9t1OAgAA0+37fgI4bnInStNaAQDAMdKTB+aTO1Ga1goAAI6Rnjww
n9yJ0rRWAABwjPTkgfnkTpSmtQIAgGOkJw/MJ3eiNK0VAAAcIz15YD65E6Vp
rQAA4BjpyQPzyZ0oTWt1bK4vznY/m3t2cb3v7aF2ee49oZjdJ//s7PzSSXbK
lmkFjvCM0vxx9yxwVuvJA/PJnShNa3VsVl0U3e3DJHda2qY/vrorvjiO2+KS
WjcnTrSTtkwrcNRn1PghcPXg2Ez+YOvJA/PJnShNa3Vs5E4HS+60tPaNsSNb
ub483xyW88t9bwt7sXArcIxnVHLuNPHqUV3NRx3PAeMIyJ2APZI7UZrW6tjI
nQ6W3KmM691tsYO7sR3L4XicpAKtwLGdUamHwNWD4yF3AvZI7kRpWqtjI3c6
WHKncuqxC8YXbGyOiONxioq0Asd1RuUcAlcPjoPcCdgjuROlTWmtxrqnOd3X
m+8i68Hw24kYqvv30PLr7y53C0SnbuiW2xS87pS5aBcKlcpee+IeRTKK8S+d
Ex4v6O1Y9DDl3WikHNVXyUcgsqv1LULvD81qq4lwe7uUcVS7c5u01Ns5cMOy
fQ5jV2vgyYzbPvKJb3xqycGDFHiLFn6PeksNFBheavSQpO9p1vanXt+m3PJv
di58QHp7fjZycVv+HEutM3nfs87GvKtQQp25Z0hUb0cTj3znUCzWCuwMnlGd
6te1L7JfEzZ0vVjGHfq0q8d81Uir1e4Mr3WzedsD2L7CBD4emb2mapHx9yul
h5N/9Y6cBaHtq0tUk9xXlYZa7YTrZIEWdlrLlXbkG5XJnYB9kTtR2pTWarHc
KdyTPzs/D/egLs/DHf9ocjFUcvDeINTyJ609fY/K5U7RPev/ZFFWQphyVHOO
QHBX641vb1Ns5d0jsXju1Nik9hb1U6ehc+o2jvzgG9+uMblkzp1+gfcoVPXc
3ClSTYncKeP6lp87NX6LLHREBvY89Mtly59j6XUWyJ2yr0KT6wzu03DwlHZp
Gz7Tl2wF+lsy9hkLb/O0/co5o/IOQWhLbjV3Sj6gWblTZq8pvki/VUi4gOdd
va9jdXbWHjoJzi4u+usqkzslnqszW674kW8vIHcC9kXuRGlTWqulcqdtm3y2
/far9Z1XrBvb+rJs/aXuebAf2/5Srfr297x597j6r84XWteNDZi09ow9Kp07
3ezrbkO33b/uaIzkvlniUc05Av1djQ0uanxbvV35qtrQsKj83CmlX9pPnkKp
056PfPCUrlffDc1SS/a3JHLyNTbzuvceBe4xss785m3JhCFB7ff9+iL8loxv
Yub251zfsnOn+re6zsKL9bayeXGLfcCWPcdS65z2eNfQe5TVsiTWmVcytab0
o9S2ZCuwq3LwjApsdHxUUokzqr+9aXfok68e8xUY7zTh3E54v5L7VzlX792B
PwucBcGvdq43e9QceFQ6d0o+V/NbrpQj36tM7gTsi9yJ0qa0VkvlTuFR/eFO
Z3jQSXTdM/qXoRpS156xR8Vzp26ZTt+2ubbkhHD8qGYcge6uhrOcgZUH/lAm
d+quKnY6DB/5SWuffz7fzr106Oy6Me896lUzNgYidZNHdnWZ3Cnn+pabvdTH
u1ow9hRobCtbS5Q4x3LqXD53yjnyqXXmlox9IlpbNPnIL9kKdP4SO6O6Wz3c
RpW/aqXfoU+9etyanNwp/9wef7/SezgZV+/I0OX4ysO5dencKeNczW65Uo58
fxG5E7AvcidKm9Jalc2dgssnN+Dpdw4Zm5W59qQ9uvXcaeCwTu1sRkvmv6fx
W4OEUey7v5XKnZpVxLvoez3yg5udUMN4yYFtGbjJ7v1p8pk/wcg7EltZydwp
/N5nno2NbaiWjAQMA9/Bj35okoXOnJw6byt3Gl/TkrlTyn5NP/JLtgLd8pEz
KmOrb+WqNfkO/fDMz52Gzra0DC/xHcu9+i2c5yyfO2Wcq9kt14TPgdwJ2CO5
E6VNaa2Wyp0aA5xbo5DTU5rpqx6tot+Fyohdpu9RwdwpPiohcRBZ0lFNPwKN
XR3qow4e/G615XKnxlCR/E29lSPfXvDyIunJopyS8XdiaDPnZIOz7TV3yvgs
ZL7RrU0IxwTjIWHkvjbdwJkzZTDhgrlTzpFPrnNCyZHTbEZrtWQr0Ht1JHga
3fdbuGq9Oo7caSzC28jJnfLP7YRzdfaJH7nK5zzHvp/cKb9vI3cC7iy5E6VN
aa0Wy50ag6kDZuROcSPfUO8mFpj65f3MPSqZO/Xfl7y+WeJRTT0C213d/tZL
eK9GNrGzsyVzp+ZxCC+17yO/XuKy8+M50clF0kuO7d7w3nQXO4DcaezZioVy
p/TPQtbZ2F1T8OY2YTjQZmUlzrGsOgvkThlHPqPOKSWHCs5orZZsBRLPqKRd
mrhf2deiV6ebO2Wf2/vIncausFPqbLy2eO6UdK7KnYA7Tu5EaVNaqwVzp1ev
Qj8z2+9BFc+d2pNzBqcaSO4OzNmj8uOdbiP9SDoC9a5e1F+NxgdnxDYx+BBC
odyp2d0fGEiyxyPfKD7yU+zpJRN276jGO0VmpB9bbPSPse1P+izknI39FYUW
Tn8MrcQ5tv/c6VXqkc+rM7/k+Mcm9ch3Fl2sFUg8oxJ2aNp+TbkWvTrl3OlV
3rktdxovlnSuyp2AO07uRGlTWqvE3GnyneXwM1nDqpY+/hBUf/qgduDUG76e
tfaYwB5F8pTFcqek6YdS36nsoxra6oH3tO78xTY6L3dKOqpDHc6BeYpeO7+I
TLCx/yNf5wmjP56TXnJwL7r1ZczvNOHMnyA+MmBwjuGUZ7imb3/KiJP464l3
Y+m5U5FzLKfOae3FhHu60ZarSO40sNrp19XSrcDQkRrf90JXrbZjyJ0a15+z
QMeiU6z9geyMR5z+wFjCuZp+8Uq8+hXOnSZeJ0OvZ5yr2Vd+uRNwXOROlDal
tUrMnXotbup3VaHmfVtn4leH/WKh1+sfgamqPo/2fJPXPrhRodypW+dIzPIq
/Y6jt7XxL7rH36mcozq0UfHbzfoQd3Z95KQJ504pRzUvd6pTp8tX8U71no/8
4t8Fj6+y87doLz/4lEjumT9BJHdKS02Gc6fp2z98NiadD91t69/65LxZJc6x
/DrH9z1pBeMbdeu5U3xXJl9XF2wFUs+o9I0rdNXqOLLc6bWBU68uVv15+5/V
7iUeoPi5nXKuZvavRq9+hXOnhGtFgRY2+8ovdwKOi9yJ0qa0Vum502uN4UPB
ns3l+dn5RWtkffTnwupab2rclr++Ga50HupXNO8t63yps+7eNo7u8+jak/eo
2SPdbmr9CNBQzyP9jqN19IMbkf5OJR/V9CMQeQCrEz2NnGzBJxSSjmr+k02j
3er9H/luyeoU7Y/tSS/ZWyhy8u0+IHWd19f1UMJg4pp75k8QGNyRsqa03Clh
+5Ovb6nnw0i+1y2YGBKWOMfS68xoL3obEn0XM1qW5DonldyuPZzjZBz57nIL
tQLJZ1RnidQcY8GrVm8VB5871XZfcQ2Npa2OTePzcPOfoaQw69xOO1cTezih
8yp09YudViGTcqexa0WBFja75ZI7AcdF7kRpU1qrtNxp1XqGhpTE79Rbgm3v
5Xm/vlDZSLnwqsczp6y1p+7RZhD3RajWwQ534h3Hql80evRz3qnEo5pxBALd
yrr73O/Aho9JZNB8ylFNzp3CDwGGOrDZa1/4yEeP/YySvXLxky+ymYud+ROE
O/7htz51T3O2P/n6lng+xD8M3SR04JYnGJqWOceS6pzTXgzkTsGtnJE3pq99
aCjlxNYqsIplWoHUM2pwn4JbXOKMyjoEB2YgidleUlpRSfutC4676WoUyn+/
0no4qedVzoCn7Nwp5VpRoIVNu/JPOfKtzZY7Afsid6K0Ka1Vcu706lVr+qTg
DAfVTyc3O1gDz7utv4A7P2sUj82a0P6BnECprIHgWWtP26NNH+ays61Ds0DU
G552x3E9fvSz3qlXCUc15wiEv1BvjJtpZUnBNyoyyiPpqCbmTuHUKfyX7LUv
fuS3tXWKhssmlczInRKrnHzmTxC5owm+nJk7JW5/4vUt6XwYvma1PyfxCCVa
S5lzbLzOjM9CztmY2bLsqi+bOwUjnuQj31jFEq1A+hk16W66xBmVfggOzOiT
izfHrz3OZjvspv97kaPn9sT0Y7SHEz2vuh+t5Cf3puVOr8auFQVa2LQrv9wJ
OFpyJ0qb0lpNnpHhoOQMBD8kOXccB22gH94WfadmvYV34yxm0OB4p8P/iMwQ
uwrEc1SO5tK531bgQI7SkeVOk77oWsSi79f/3979x1py3/XBN9DCH0UqEAKt
4FGBlEqtnqqlLhK9qGpKBVQpqKrK02KLKrQ82kYPeQKtH9oEUjnr9AETTLIm
JoGkCzGhOHWX9AmJLlkUt9203mS7jq+dX4591/vTN7uOvXt317G9u7Fznzm/
58x8Z+Y758ycc+be10sfWd5z58d3vjPnnjPvO/OdGgsLXLy8x7jPDugWuRNt
27u5U2hEmp3x0BKr+1Vp7+VO6W+w+REYZj0Od8lRTJnQOMbzHjjdEBjZKv1X
/1297TPryq9OudNOx3KniMHFWrOs3Cl1geDU5WtRo3ftCnInoFvkTrQt7tOq
cECBlA5+j9gsGpFm+V+qi/W+mOw7sD4UaOaKnBZUqnXVSdHF67NvZunl8B08
mNs2vuWjS11T8ourcpyqbm1pVtmWt3BD46K1s49if3Uu/whZ5qfAcj9gNkcb
3bvRbOU/5FYh7l1e7lT2FavTv10jxXfW/Ef1oFdnmBFgTO5E2+I+rXZp7tQT
GNDgQOXQEks1/oqyl3Kn/gz5ERjm2Ea5Ux2ZZyx1RegXV8U7vKNbmhXY8rXq
AY46otF9VG8Es6bXPqslfgoMxmJaeu5UsOErI/sBs7S4t9H9NcslPJ37itWU
+J6f/6ge9O0scwKMyJ1om0+rXWfX5k4s0/Kv8ViUvbOl3dXgPqqdO3XiCOnK
p8DuNR5Ye23fgd0R9/Y4rlaUb/LA/OROtM2nFQAAdJFv8sD85E60zacVAAB0
kW/ywMyOHj364ZH8T+VONMinFQAAdJFv8sCcrly5IneibT6tAACgi3yTB+Zx
5cqVwVVP+R/JnWiQTysAAOgi3+SBmQ1Cpxs3bsidaJtPKwAA6CLf5IHZjEOn
HeOK076bAACAzlr2+QTQMenQaUfuRPuW/TkJAADMbtnnE0DHfO5zn3vwwQfH
D7M7cuRIfhq5EwAAAABtkDsBAAAA0Aa5EwAAAABtkDsBAAAA0Aa5EwAAAABt
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
re/rVE5AgxrPnfo6dUTJnQAAgJrkTiup27lT6Dai0RDKmzGThm4/Cp+dp0Zo
TocBm+sH9o0XPBq7ebSE1JQFs5eZtCM0T+qnk9WXjx29ubm+L5lmqqPyPdXf
ovRU4f6ssczobY/fRzvRPR+/zBprD3R+Wm4z43o+3xNl/ZVsf3ZHVQ0eXn5E
5Ra/b61qrKU2jqhMF8idAACAWHKnlbSo3KkdpVHB2r70KXgruVMwf0hOvddy
U9bPnaaWnZ+pJPpITurzq1jfV7j96YWXLTbQhqhltpE7Rff88nOnyF4K9URJ
f5U1oWC2iiOqekdMZ0BtHFH5NsidAACAWHKnlbSLc6ebCoKfAvVzp8pFzpM7
ZU/Xs+fftaKP8pZGpgSFHVK1zOZzpxo930ruVNFN0YddS7nTTcG4puqIql52
ao42jqhgF8idAACAWHKnlbSU3Kk/fbgOf7xO64OJxmb6QozgaetkttCPo3On
yYRrw7ubpu79mid3Sk0+ukEp09RAK6fXXnBZ1lr6RqzN/iz7plKC3i1QU/dA
pfpztmXOcI9hxT6q0/Oxy6w5ZdxG1eil0NKjcqf0/g/u/mx7C46owKTTbZ5t
u6KPqHAr5E4AAEAsudNK2oW5U8nruR83kzsV3Vc1c+40njqZOP3/la2cSgRG
P0inNPXHqU7HeJP56yyzxdwpoudjl1l/yuphumfu+Zlyp7I1RhxR+WkL19/G
EVXQCrkTAAAQS+60knK501Tykw6UVvs+u8z5a3kk0FDuFLjsprBRtbKX6WAg
HBMUb2HuJwUpTUUbAgNLhy53qrM5jeVOdXo+epkzTFmVv8zU86n118+dCloe
c0QFFlGZOzV4RBW0Qu4EAADEkjutpHzu1EuQBmHRmcP3rXUzd1rM9U5Tr4bM
mDtlz+qDzS3OnXKrqhgKKNumzfCA0dPDtNdZZgu502wDJzWeO1VtW82ezy12
rtypJCUs37w61ztFbVfUEVXQCrkTAAAQK5g7XW6f3KlUKHearjsezU85cOL9
w4QqInd69HBqUbtkfKfx+nLPsw80Kj1mTnn4kr+YJNTekiu6sj+qlRLkJg4/
83623KlG8BST/ET1fM1l1p0yck9E9Hxg/Q3lTnFHVOki5tiuyCOqoBVyJwAA
IJbcaSUFxnf6+KPHXzsMoO674/DF0JQDg/jovjsePb783GmWs/qCs9rUefJM
FyxV3Gc3tdb8tOH1jNtU8dS94I8KNzdwu1R648suR6mzzOhtj1pBiYXfZzdU
uC/q9FJoxrjn2RUM8JR/+F/5ERVoddH62ziiCtYhdwIAAGLJnVZS/N1wwSkv
fvze+4aR0XLvs8srOcmNzp0mJ9CpNaXn6T+sa+rijfRDxYqfOz8clSi/1KJz
/twJfY3cKfyAss1gcjFZT7rxw6eUpVdUY5mx215jH9Xo+RrLnGXK7PRFN3xW
9lJoeXG5U38xo6f65S4tiz6iKjdmtu2KPqLCq5A7AQAAseROK6lm7tSPmF47
uQiqZ3oYqNQrb1hy7pQ5aQ7dHFSdO+WXGx7du2LKyVDO+8Jj3WTjrewpfzYm
iMmdghedRLYzoOjaloa2vc4+qrH2lOosK3Lt5dfZFVx/FN/O+rlTcSOij6jq
e+cyiWvkdtU4okJdIHcCAABiyZ1WUgO5U+Lj9y47d0rd1VV02Uvd3Glt34FA
TDI9R8nZd8Rz7HNLLXs+WiZoqvE8u0xXlbazLCfIdVbkMuO2vdY+qtHzwfa2
mjsVjrgU285auVMwzBvPGH9E1cyd2jmi8nPJnQAAgFhyJxpXcDFHOF+onTv1
Hzm/Pnn0+1ro1r3N9QOZwa3XBuMmF7R00NDU2OdrkxuVykKC4pigMA3I30A1
9SD7teD2BCYcjQQdMWlwmVHbnt3G6nAisueDfbPI3Cmyl0IriMqdkmn6i5/s
q8myaxxRtXOnWttV44ia7gK5EwAAEEvuROOKnmdXnhrsCqHcKX2pV51nx+0V
s4xVvhyzP8+uuZUv+RCSOwEAADXJnWjcjM+z2w2qLk/ZxZs+s87lTv1LiPqy
g5Xt1txps38JW1839hQAALA65E40rjx3Knpc1vhGr/zZfHeUj+vc+bP1BvdR
nXv3ml/7bHIHdi4B2rW5U2bDO38kAwAACyN3onEFuVP5OD9TM3X2tDaYO1UN
cNQZTe6j+rnTChwhm+sZFcPMN7vy4dBZy7hoLrvhm7vgaAYAABZD7sSKWPrV
LFTa49c7VWszdwIAAOii2XKnn/7pn575p3InAAAAgL3gF37hF2bLnYrCpZIf
yZ0AAAAA9ognn3zylltumTl3yudLRa/LnQAAAAD2jieffPJNb3rTm9/85nly
p3TEFHxR7gQAAACwpwxCpy9/+cszjyueSZlqhU5yJwAAAIBd6Rd+4RduueWW
N7/5zbfffvurX/3qmZ9n99MhkfPKnQAAAAB2n5/5mZ/5yZ/8yR8b+Sf/5J9k
JojMjvLRU/yMcicAAACA3ef2nMwE8fHR5TpjicudAAAAAPa4WgnSIHqqO4vc
CQAAAGAPqhsizUDuBAAAALAHyZ0AAAAAaIPcCQAAAIA2yJ0AAAAAaIPcCQAA
AIA2yJ0AAAAAaIPcCQAAAIA2yJ0AAAAAaIPcCQAAAIA2yJ0AAAAAaIPcCQAA
AIA2yJ0AAAAAaIPcCQAAAIA2dC53eggAAAAA+uROAAAAALRB7gQAAABAG+RO
AAAAALSh2dxpAQNSAQAAANAJcicAAAAA2iB3AgAAAKANcicAAAAA2iB3AgAA
AKANcicAAAAA2iB3AgAAAKANcicAAAAA2iB3AgAAAKANcicAAAAA2iB3AgAA
AKANi8ydvvziS0oppZRSSimlVqoWceYJ7FWLzJ0+AgAAwCqROwGtWnDulPxO
2wEAAGAFyJ2AtsmdAAAA9ia5E9A2uRMAAImbgBXW0htf7gS0Te4EAMCO3AlW
W0tvfLkT0Da5EwAAO6PcadmtALLkTkCnyZ0AANiRO8GqkjsBnSZ3AgBgR+4E
q0ruBHSa3AkAgB25E6wquRPQaXInWJY/3Kv2+OY3ruv92d32L+cXB7RJ7gSr
afzebONTTO4EtE3uBMuSfOKf2Xv+MJUzLLstu0HX+7O77Zc7sSvJnWA1pXOn
xj/F5E5A2+ROsCydO9FuRHdzhtXU9f7sbvvlTuxKcidYTXInoNPkTrAsnTvR
bkR3c4bV1PX+7G775U7sSnKnFbe5fmDf2IH1zWW3h3lspnbmvgMVO1PuBHSa
3AmWpXMn2o3obs6wmrren91tv9yJXUnutOI2D6zdNLZWFVWw2tb3TXbmTfvW
yyeWOwGdJneCZenciXYjupszrKau92d32y93YleSO624Qe60dmB9s2fZrWFe
/d04iJ/kTsCuJnciWv9zcVF/XOtdSb62lv6r3tquu6C8cyfajehuzrCaut6f
q9H+992a/I65+fYjdeaRO7EryZ1W3Ch32l3fh/Y4uROwB8idiLbI3Gl06fHa
Wv+m93EAtVb1sdwlHQ0K5rQaOcPu0fX+XI32y51gSO604uROu5DcCdgD5E5E
W2judCB3ddPwOuSV+bY1/3e/jgYFc1qNnGH36Hp/rkb75U4wFJc7VX0AFv28
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
WePFjC6EGq3jUGAdBddODVeQ+edOyX1268P4pz8Y+GjIpsnFShvrk9f3Z4cM
7y1kOMvU/IEk6+DGKOcaLb7o9Z2Gcqdbb54YHjipV+ROwLKtfO5UdENb4Hrr
0vv058mdYpYfO77TPEMcTC90WeM7RVwlX9YXUdteYzCH2uua+sn4j+XBL+bl
P51faVAwLXTaW3yqHI49upA71RvfqCykyi6pE7lTjX06NkPulL1+rsZ9dkVP
6rv59veFt7HR3OnIOHIqOpyj77OLjSVLNkDu1IRwPFE4rvisv+onS678njAe
SrLsXu+c6eGD5vugnzd3mvOTa7BBVVPNlDv1f7B+YF/qqYVra9nrj3cKe6A/
a6rL1zcD3+QKv8Llr1LPtCTdkGCgOTk0cq8XtzK3GyYNydwAOGn51CJyHZTv
2uqBxcO2T21MDeedueQoHfVMTXrogY3slHELnFyZNR5IfJIj9eZNzZxbR1PX
O/Ve6YVL40HC96djpfDo4ZnrltJz9wKsjemrlybPrTs/Sqmmcqfs6zvuswP2
hBXInfLjA+zL/kUq9Fev8pSkwfvs4pYfmzvVH+Kg+mb/AiVXqs+zwIghFgqG
L4jf9hqDORQNlRA30kL5zo77IjC7itwp83er/CPoi86VI3OjurlT1BDk6ddn
zp1iBndKtavGuOJRTa2ZO0UsM76ro/fpWO3cKf9svXzz4puReiW4lU3lTqnE
KfPQudIVxW5I4YPrSo4xuVMT8l8DRrt5LfTBP+uv+pJ1h8Z3KrhlKrjc0PBB
84xlVOuTOvjFY85PrkH3V001c+4UI34L4nOnWXql5n12CxJae27ApV2o7vhO
cykZArwVcidgD1iJ3Cmr6rqZ/LgP1ffpz3Wf3RzjAEQOU1AyxEH1zf4FClc9
3wJzbS8cfaBw+IL4ba8ezKFwXVEjLYT22ub4nonyn86vzrjiwSQnnyCcKbm+
Ze7rnW6+OXg5Sf9HgctpCrKGBq93SsUFUzMcCaQINZpaN3eqXmaNAbLqtKiv
Zu4UWn6geZHNyByWhQuaL3dKXeQUHOKqbEW1NiR3KJUeynKnJoSvHwlcqTPf
r/oa3xPGL4Q/ryKHD2pgLKOYT+qS653qfK5NGay86Kela67x81It5E4ztac7
udM4eVpQLLMMcie5E9BtK5A7Ff+eLf5on/4NXXGffvh3eq3cqXT5pff7lw5T
EDfEQeXN/gUKr96fa4FrB0Z3QEx1RtzwBfHbHj2YQ8m6YkZamHzDn2xO/tyh
4KfzqpE7nSm6cmN8Sj4YO3n0j3EQ8L7bJy/fPD2acv1xxccn56OfDqe8fZhL
pZtQ+IUnYnyn6Auexm1Lbd7kn1MLiWpqWXcVX+tTvfn1Bmav2KcZ9XKnkvyy
5qGVW3R2g0o7s277+3fyhTugckUx/Tl1s+BowtieZw6BgGjwEZP9SJj3V330
94T0n1AC6VHk8EHzjGUU9Ukd8cUj+Mk17ofCT7LBrAU/zGxeR3Kn0Y6s25yV
zp2Svd2THuVpOMJR7na5ne3ebW0bpxbazMbtztxpc7O/G4uvkEwbvzflTkAX
rXLuVHb3V+72tZL79IMz1LzPbpZxAIqXFlhg+RAH5Tf7FygbNWL2BfY3bHr2
+OEL4rd9MuH0agrGdypf103FTR1MM92cA9kvrCU/nUu93Kkwkumddk9GhLp5
6iak4MDKw/PoWZ5nlxnSeTLlVCNKrkqpzBlqB0+jHpjqgvz6o5pa1l2l95hV
bH7tBwKW7dOMOrlTwf2Phc0rbUbBHWjjTSrtzOj2l92yOd2QshVV9udkuKfp
XRnV88yhbLjwqQ/ORn7Vx3xPCMdVqYwru+rCJtf9oM+/UvJJXTXQUOEn1964
3il15+a4E2a483CwA4sGqVpq7pTf5Tv9x8Klh1fqy4zg3V11c6fBEEqzRkf9
MZwWkDtNDRjXXO7UGw7xSMnHZuBTTO4EtG2Vc6dGtT1Uz5L//kUX1cyd6o19
lJ8z/u61VlXlJBFBQ8tWqrsqxedOhT07+5FVbc777OL3xeL3mtypCaV30y/m
28FEzBM2mhw+aH5tfPHYJblTOo6L/eNaV2ym5H86GKB7kjf1AqgHNgpGAu+Q
xeZOi1O6M6fVyZ1qf4rJnYC2yZ2aIneirnq5U8kAx1VWKkipHs8nPGjT4qxU
d1WKzZ1uH/Vq0SQrmTuVPrOw3ooaJ3dqQvTIiIswR+60pG8Ay8udWjVP7sRu
tdD77FaT3AnoNLlTU+RO1FVrXPGiR8rFWKkgJeb5ZeMxffI3zB058r5bc0/2
a9ZKdVelyNzp5pLUcpVzp9FVWtkUsnc73O21BjBvnNypCeExsGMfdtGwWXOn
WYcPmt8uzZ2AALkT0GkrkDulbsMfaz4fav+vp+H7/QcDUSwljlriqolSNZDy
2OhugZtnjQYGAyCtRpASkzudSY0kleqL8b9a3pJwdw0atCK9OBE7LndJstRm
7lR57FUfD6ktmH5D5LLZxR7kcqcm5L8GjHb2Ej674nOnhoYPGixwnk/qFgYa
kjvBapI7AZ22ErlTXhdzp6L1yp0oUB0UpHKXsqG6OyUyd+o7khkxfKkd0fXc
qThXajV3qhJ3PAQPhCMLa2SQ3KkJoa8BSxuOp07u1Fh7V+6TWu4Eq0nuBHTa
UnOnRVpW7gSFmvrm0C11cieqdb0/u9t+udOuE5M77X5yJ1hNcieg0/ZM7gQr
p3Mn2o3obs6wmrren91tv9yJXUnuBKtJ7gR0mtwJlqVzJ9qN6G7OsJq63p/d
bb/ciV1J7gSrSe4EdJrcCZalcyfajehuzrCaut6f3W2/3IldSe4Eq0nuBHSa
3AmWpXMn2o3obs6wmrren91tv9yJXUnuBKtJ7gR0mtwJlqVzJ9qN6G7OsJq6
3p/dbb/ciV1J7gSrSe4EdJrcCZalcyfajehuzrCaut6f3W2/3IldSe4Eq0nu
BHSa3AmWpXMn2o3obs6wmrren91tv9yJXUnuBKtJ7gR0mtwJlqVzJ9qN6G7O
sJq63p/dbb/ciV1J7gSrSe4EdJrcCZalcyfajehuzrCaut6f3W2/3IldSe4E
q0nuBHSa3AmWpXMn2o3obs6wmrren91tv9yJXUnuBKtJ7gR0mtwJlqVzJ9qN
6G7OsJq63p/dbb/ciV3pJmCF7cidgG6SO8GydO5EuxHdzRlWU9f7s7vtlzux
Ky37rBoosyN3ArpJ7gTL0rkT7UZ0N2dYTV3vz+62X+4EwOLJnYAukjvBsvzh
XrXHN79xXe/P7rZ/Ob84ANjD2vgUkzsBbZM7AQAA7E1yJ6BtcicAAIC9Se4E
tE3uBAAAsDfJnYC2LT53UkoppZRSSim1CiV3Atq24NwJAACA1SF3Alq1yNwJ
AAAAgL1D7gQAAABAG+ROAAAAALRB7gQAAABAG+ROAAAAALRB7gQAAABAG+RO
AAAAALRB7gQAAABAG+ROAAAAALRB7gQAAABAG+ROAAAAALSh2dzpNT9xi1JK
KaWUUkoppZRSScmdlFJKKaWUUkoppVQbJXdSSimllFJKKaWUUm2U3EkppZRS
SimllFJKtVFyJ6WUUkoppZRSSinVRsmdlFJKKaWUUkoppVQbJXdSSimllFJK
KaWUUm2U3EkppZRSSimllFJKtVFyJ6WUUkoppZRSSinVRsmdlFJKKaWUUkop
pVQbJXdSSimllFJKKaWUUm2U3EkppZRSSimllFJKtVFyJ6WUUkoppZRSSinV
Ri0ld3rym29qtZbeq0rtpnr93R/6xNbWuZ2xrXPHPnTXbctvWBdLZyqllFJK
KaX2VK107vTKP3XyO7/x1Hd9U1LJ/yT/lDsptfC65xPDgGTrE8eOf+LYODPZ
+sTdS29b50pnKqWUUkoppfZWrXLudPI7v/HM33jVub/915JK/qcXPcmdVCN1
9/HkVN+Zflzdc3/ugpzX9ztwZ2fr/vHrs3XpntsRcZ2pD5VSSimllFK7pVYl
d/qWrzn57V9/6ru/Oankf5J/JnX6L//58//0H3zpDT+TVPI/yT8Hr2enlDup
etW/5uTYPctuRrfr9R/c2pnuxruOJf8+fpcd0URn1qr6Pa+UUkoppZRSC6qV
yJ2+5WtOvuJrT7/qFU+9+uan/u7Nyf+c/Nave/Jbv+7cD/7VS2+748t/dCip
5H+Sfz75iq9NfjSc8tX9KV/xtfnoaem9qla5+ifps15bosZ124d694htfej1
mVeiwxM7oqwzZ5hdgqeUUkoppZRavVqd3Ons933Pl372nz/7pp87f+uPb/3I
3zr3d77v6Z/5yS9/+IM3Nh9PKvmf5J/Ji1s/8gPnb/nxZ9/4c8nEySxyJ1Wv
nKE3VoOhiqYus6kRJdkRVZ1Zq4R4SimllFJKqdWslcid+tHTUz/0N6/e+54X
jz34/J985OoH7r18z11Xf++91x99+KWnL7z0paevf3oj+WfvxQ/c+/zhjyST
JRMns8xwn93glpbscCjFZ8Gvv/v4+OFT5471LkgoWMIb7zqWekzV1tYn7n7j
1NULt91z/7Hy51jlzz0Lz0bDp5mppiZrr7HqBWx+oG3F59qVI95Ud2b83n/j
/Vs7BXJtK21YRF+FN7n/jLOprgtOGbsvorq63qEVauGg36aX0D+Qzn3wja/J
LTZ6RwSzl+E+Si85rtPiN3OeKZvvzEH/jLe3/J+1en6OGg6KHl5L+Xs2//vh
g/fkLu4KdWPwSrC5fl/115K7tCzQpRXHZH6ywLb3DoB8Owd9Nf16o+/ussMv
9pNoji5qfltKP19iV1de/Z1S/Q4qmCzbOYMGTz5Zkv8/ftdtrb49lVJKqd1c
O3NYeuPbq5+97d88vPHw//HafxE/SzJxMksy44Kbuiq50zfftPX3f/D5P/6j
ly9dfOniM185e/raw8df/OT/vLbx0PXPPHL9s49ee/RTLx77n8mLyY+SCZLJ
komTWWYYV7xW7jQcdyX5Prl1/BPHBl9uj9+fX8Jg9uF3+PGUqS/8+QmGC27u
fHa0in5Tk9O6N9ZY9aI2f7pt5VvXnz54FhDVmcEKnkWOcqet5NQgU9m2lTQs
rq9Cmzw8YR8942xrcP7yocyUdfdFVVfXOLTGqx61cNAD9xR2ZvX9YiU7oiSH
TP0ortNWMHeK68zxMTnoyfJ/1ur5OWrS54G1lL1nw78f8m/YeXOnGu/BxeRO
ww0P/IFgZ7r9Tb+7Cw+/Gp9Es3ZR89tS+vkSu7q4w3vW3Cn7lhy1amvYqtGb
/pwrPJVSSqmZamcOS298e/XwxsM3rr34+ONPREZPyWTJxMksyYwLburq5E5P
/fAPPPfBD7x04YsvP3f1q88///L2peuf/+xzh+67/Ft3X3nPO7/8X/7T9cc+
m7zY+9FzV5PJkomTWVrOnYZfJlMT9/6IOTiAc2FC9rvo6+/+0Oib/HCCqWuQ
hks73vD5bHYT4lbd7uaXty2/dYOznsEpecFPqzszWMGBrCNPLcsbVquv0vMG
ruR5zW3DbcwHEVXLj+/q6EMreO4caGHhkTn3jhjv8bqdVmczF5M7RXdm7eud
2r/Vrr/SwSUc+bUMUq+t0ChVRb8fclnivLlTnffgQnKncRaXbWo2d2r83V1+
6MZ9Es3YRS39pir6fIldXXU1er1Tr3mZTr7tnsBvLaWUUkrF1eDDfTFzdajG
OVJM9FRr4sZrabnTK7725Lf96VPf8WdOv+oVZ/7Kd5z9vu+58NqfeH79Qy89
ff6r11786o3rL29fuvbIp678h9+8eMcvXnrrL135nXdf//TGy1cuf/XGjWSC
ZLJk4mSWZMZk9mQhyaKSBSaLbTR3Cn6fz37RrXwWVcHX9Xw1kDtlv5xHrrrN
zS9uRsFNZ6OJg3squjMLN3PWU8vyhkX1VWCyYRBRdEPf+PXI5cd3deyhNTh3
DnR4IDeYNKDijK/OjhievKcPsNhOq7GZi8md6nZmrZrl3qIaNdw74StJhr9A
PhS45ar490PuWJ0zd6rzHlxA7jRseSimzuZOjb+7w4dfvU+iGbuo4W2p+nyJ
XV11zZc7RdWcjw9QSiml9nD1vyrLnQIVmSYtN3R6zfJyp17o9Bf+7Nm//t1b
P7p24Z/9o2d+ft/ld7/j2iMPDZKlfuj00Jc/8l+uHHzX9t2/un3gzuR/nv/o
R65/9tHhBFcuJxMksyQzJrMnC0kWdeq7vqkXPTV/vVP4RHi0hMKRPaanj7kO
ofncKXbVbW5+UdtKTxkGCwyc/sx1UUf/lCF3MjLDqWW+YTF9FdrkwpFqMlNG
Lr/x3Klk/xYsIdzJs+6IYMQU22nxmznnlK11Zq2K6fmZa3zKHOr88VGXOyBL
fz9kF9XI9U5x78H2c6dMTD215PD1Tg2+u4OHX81Pormud2pqWyo/X2JXV10L
yJ3iPi6VUkoplS+5U0lVZkpLD51es8Tc6du/4fRffOVTP/T9z/yrf3n5nXc9
95/e//zHPnrtoWPXP/+ZG5tfuPbIQ8+v/39X3/8fLr/7wCB3uvzud1z9g999
/vBHrj36qRtPfOH65z+bTJzMksyYzJ4s5Km/9/2nv/eVJ//cN7QyvtPW1LCr
00uoPDEZ3RPUH5giUJPxdRvPnaJX3eLmF7WtYOumW5LbzPjOjN71kaeWFQ2L
6avQJkdHKHHLbyl3CnZOwY8izsuid0TBdQvdzp3qdGatijkjvu1DuXdNjQH5
+wsvTYOzbSjfrsyiGhrfKeY92HrulN6W3HYVje/U2Lu75PCL/iSac3ynZral
uv8jV1ddciellFJqhWu2BGm2ubpYJcnSKoROr1li7vTnvuH0937b+X/8o1fv
fc+1h4/fOPHEtUc+9dx//oPLv333ld+6+8p770leT/576dfuuPjWX0wq+Z8r
7/mNK7/7W1fe885kgsu//RvPHfqDZJbejA8fTyZOFnX6L33bvLlT4AL4yWAR
vW+bW/1xTafOhWNzp0Jlp13N5E7Vq25x84vaFt667N+pCwZCiejM6F0ftwlV
DYvpq9Am14hQYpa/ArlTxIPV4nbEaF/nO0fuFKyYR9qNxwZPvWdizoLTx39p
h2QiizZzp1l+X+VXOnVMNpU7Bcfjmvu3RzO5U6HMjpi9ixrclpj+j1pddS3s
Prs53+ZKKaXUnqzBB/1i5upoBfOlFQmdXrPM++y+/tR3f/PWj/2d3u11xz/5
0tMXbmx+4cr7frsXMf37X7p05+3bb//ly7/xtsu/+evJBJd/68Dl33z79jvu
3H7bHZd++d9deusvXXzrL1259z03Nh9PZkxmT6ZJFpUsMFls07nToN54190f
ur//2Kzxg2nGS6i8pL/47obK06727rObXnWbm1/UtrjtzZ53RHdm9K6POrWp
blhMX82XO8Usv6XxnYId3tL1TkXnwqnqau5UvzNr1VxXYpTX9AZmVjSVomQT
mLJ7u7K/dubPnYadWe89mDom4yOd0O4rvqEy0+BA7hTT8vbus4sIAGuvvZlt
ib5jrmJ11dV27nTbPaOHVxpXXCmllKpdgw/3xczV3cqkTKsTOr1myeOKf/2Z
//1/++JP/OilX7vj2qMP39h8/Ln733/5N3/9yu+8+/K73v7sv/t/Lt35luf/
+I+uPXz82sbx5H8u/crtz775tsv3/PqVg++6/K53PPef/+ONE48nMyazJwtJ
FtULneYcVzzum2rEH6+nq2iC6tFl80/ySr9enTvFrrrVzZ9vCNnsvLGdWbgj
CuOO3glLuo5nrl6oaFjUwTZ/7lS+/Lq5U/WhVTiub+ng3nOM75TaEYOPiq3c
Ywpr504x76C6Uy6kM2tVe+M7BX9djP6ZOQiD/2xlXPHZfl+Ffnm+Zjx8fXhF
NXOn0O+iqfwk5pdV7Xd30RsqtaX1Poma7KLZf1PF9VXl6qqr+dzpjXd9cHAP
4zgK28o9SVAppZRSUTX4KF3MXJ2udNa0OqHTa5aYO/Xr5Hd+45m/8aqn/6+f
fuHB//6Vs6df+PgDzx36g6u/997tA3c+82/fcOmuf3/t4eMvb1/qDTP+8PFL
b//lZ9/089sHfjWZ4Mt/+IEX/8d/683y4H9PZk8WkixqvNjytZde75Sc6ma+
bL/x/mPH78q8kh2iYTxuxtTgQq+/ezziROix7xVDgqRf6TUsOJTQ63PbVXAT
RNWq2938+YaQzZ54RnZmqMoeo5ZXNRx0vmHVfTXXfXYRy6+dO0UcWuOz2uAt
nOGLIhp7nt1toVPg+rlT/GZGT7mIzqxV7T3PLndQpfdUZbgR3OTk90PcwwfL
rnea7ffVeGelljkKsjLvnZiHdebWUvrrYrCo0H12c7+7wxMHB0yL+ySauYua
/U0V8fEasbrqaiF3Sn+ynIsbSE0ppZQa1M4clt749jpkMXN1vcbR0+qETq9Z
pdzp5e1LL104/+KxB/uh0//97Jtvu3LwXTc2v/DV69e/ev3ajROPX/m9/3Dx
jjc9+4v/6vJv/Nq1/3X0pafPJ7M0nDsdu2f4J93JV9/JNRjDP1wOfph/hPfo
G+Zg1NZz2bOA8QTD5eS/wJfcvzN4dvm5rf4fT3M3ESTfwCevbw0Hib3/7jfW
WHVrm1/atuntLb53JvBEqurODFZ/jXGPwcp2TnXDYvpqvtypdPk1ujr60Jpq
ZGrVw1WE+q3fJ5X5SZ0dkT9Jr3+fXcRm1p5yAZ1Zq+J6foYqDA36m5a/v7Xg
IJ+8YY9P/lnSsbfdc//k3b01dTzP9ftq2OC7epvQHwtoPDpQMtnd/bZN7cGY
+CLVRRW/Liajr2ezmrnf3fd/cGsn2/hQsBP5STR7FzX7m+qWqo/XyA+pqmrz
PrvX9w7m6utjlVJKqXHtzGHpjW+vQxYzV9dL7jSuwH12n374q9de3Hn5pRtP
PLb9jl955l+/7uJbf+nqve+99tCxr5w59ZXTJ6996n9d/cDvXfq1tz77b9+w
fffbbjzxhWTiZJZkxibvs+t9Ux0PUjq5DueuDx4fDxnR+7oefmjaG19/99Rk
545lTj36y5n8PH/Jfdm4Mb3v6uOFb6VjpfHftadk/qJdserWNr+0bVPbOziF
DH8tDw7DW9GZwQomGxW5U52GVfbVnPfZlS0/vqvjD63UETI8bxrt3GS9wX6r
HmWr/o6Yp9PiN3OWKVvuzFoV2fP1KxikjM++CyOUbBaROXRDl3+Egujg8TzX
76tJR73+7lQCNn6D33bP1B6MukZlssll4xGN+yp871gD7+7pw6/ot2LcJ9Fc
XdTgb6rhAks/XiM/pEqr/XHFy8Y6U0oppVRpDT7jFzNXp8t9dunKjiv+0Cdf
evZLOy+/tPPVr944deLK77z74lt/cfvtv3L5t3/j6vsPXr3v3uf+4H1Xf//g
ld/9rcu/+fZLv3L7lfe958apJ5OJk1mSGZPZGxhXfCUqcgzbsu1azT+nrk7b
Qnu/iSGdY2uuXdyBro55pFrtHbHIHdTZiu752hUOSYbRxP2hmGXWgzD6PruV
q1HudHfFgOfDI/nuouC0ouYb/Hy1aiU+FJJjexwOlwRKkZN1YpOVUkqpbpbc
KaaMK56pXu70577h9Pd+2/l//KNX733PtY2Hbpw68dKzX/rqCy/cOHni6u8f
vPS2/dt3v237wK9e+pXbL771Fy/e8aZLd95++Z5fv/yud2z/+v979T/+7o1T
TyYTJ7MkMyazJwtJFnX6L31bsli507K3YsXblr/DS+7UWNX5g370jvDw8YZ7
foYlB35hDtZ4ruTWyNphUedzp09U3ks1SC0Gd4rJnZb+oTAcZKx31dZdHyzN
nWIm68QmK6WUUt0suVNlBVOm1YmelpY7ffs3nP6Lr3zqh77/mX/1Ly/fc9dz
9//+iw8e+crWueuPf/7K7/7WpV/+d5fu+veX7nzLs7/488/c9rpn/vXrnn3T
z1/61bdsv/2Xk/9e/b333nj8sWTiZJZkxmT2ZCFP/b3vP/29r5Q7reZ32pVq
W78x+XHR5U5zV+Htb3PsiNvuGQ7eUv8kfQ9VzZ6vU+FHm70mfbdUIBSa7Tjv
eu40UL7VqSnlTqvwoTB102txeyInS+2U+6cHQh89ImE1v3sopZRSq15yp/Iq
yZdWJHpa3n12f/rUX/izZ//6d2/96NqFf/aPnvn5fb0b7h556PrnP/Pc/e+/
/O4DV373t/s31v369oE7t9/xK9v33HXl4LuSV6789m88d+gPrj/22WTiZJZk
xmT2ZCHJok591zcli83nTq/vjfywdS7zcPad1Cuxg3i0XfOdPvS/GC//a3yN
tg0GCVn8eBeZkXAmw9Key1TzJ/LtnyEur6vrj2tduSNGp3lbK3VOvazjtsGe
j66SK5dG4y+FfucMd2XNU+zwmGazPJts0TVJkyp/A0/yuhl+vRS9uzuYO63U
h8J4XKzy3Rc5WWqnjJ8yMMdOV0oppZTcqbQqk6VViJ6WOq74nz71HX/m9Kte
ceavfMfZ7/ueC6/9iefXP3T9sc++8PH/+vx//ZMXH/rk9c8+ev0Ln7vxxGNJ
Ja9f//TGtf919IX/9icv/I//mvwzmTiZJZkxmT1ZSLKoXugUGlc8OIrptBU5
qenm6cM827usM8qpMTqmnnY9pYu507K6ut+ltf+UX7kjtmYaIrjrnbmAno+r
0otSysKlma5mKXh3DO9y6j9YbbUSyGxXxB0Vw0SiuV8vu+mDY4lvrt5OjDhi
IycbBWvpX2VRD79QSimlVKDkTkUVmSktPXpaWu6Uq6d++Aee++AHbpzcvP65
T1/77CPXH//8V7bOfvWF5wdHS/I/Xzl3pneZ02ceSSZIJksmTmYJLmrpe1+p
gtpNZ4hKNVuF747Us8y8d2r0m1JKKaXU7ii5U7BqpUnLjZ5WJ3fa+vs/+Pwf
/9FLzzw9yJde/MT/uLZx/OXtS4OjJfmf5J8vfuLjyY+SCZLJkomTWeROSiml
lFJKKaXUbq2Cu1OiLL3x7dXDGw/XypHG0VMy44Kbuiq507d8zVM/9Dev3vue
F489+Pzhj1z9wL2X77nr6u//zo0nHnv5y88llfxP8s/eix+49/k/+UgyWTJx
Mksyo9xJKaWUUkoppZTalSV3CtbP3vZvHt54uNbFS8nEySzJjAtu6krkTt/y
NSdf8bVnv+97vvSz//zZN/7c+Vt+fOtHfuDc3/m+p//PW55f/9CNUyeSSv4n
+Wfy4taP/K3zt/74s2/6uWTiZJZkxnz0tPQDQCmllFJKKaWUUkqtTu50+lWv
eOrVNyeV/M/Jb/26J1/xted+8K9eetsdX/6jQ0kl/5P888lv/brkR70p/+5o
SrmTUkoppZRSSiml1ErWSuROg+jp27/+1Hd/c1LJ//SipG/5mtN/+c+f/6f/
4Etv+Jmkkv9J/jl4PTul++yUUkoppZRSSimlVq9WJXcK1cnv/MYzf+NV5/72
X0sq+Z/kn5EzLr1XlVJKKaWUUkoppdQq505PvvJPnfzObzz1Xd+UVC90euWf
kjsppZRSSimllFJKdaVWOneatZbeq0oppZRSSimllFKqVu70/PPPP/fcc1eu
XNne3r548WIywWy5k1JKKaWUUkoppZTa9TXIiz75yU8+8sgjn//850+cOHH6
9Omnnnrq/PnzX/rSlwa505UrV5577rnn+wa50+XLl9O5UzKj3EkppZRSSiml
lFJKpWuQFx07duzRRx997LHHnnzyyTNnzoxzp4sXL25vbwdzp0uXLiUTJFOe
PHkymVHupJRSSimllFJKKaXSNciLjh8//ulPf/oLX/jCyZMnz549u7W1deHC
hWeeeSaTO73wwguDIZ6SVwa5UzLlqVOnkhnlTkoppZRSSimllFIqXYO86KGH
HvrMZz7z+OOPnzp1ajy40zPPPJMe3OmFvnHutL29nUyQTHn69OlkRrmTUkop
pZRSSimllErXIC/61Kc+NR5UPDO4UyZ3GtxqN3iqXTJBMuWZM2eeeOIJuZNS
SimllFJKKaWUStcgL9rY2BgMKn727NkvfvGLRTfZvfjii+PcKXk9mSCZ8ty5
c8mMciellFJKKaWUUkopla5BXvTII48MBnc6d+5c/mKnQe70Yt/gVrvB6OLJ
BE8//fRTTz315JNPyp2UUkoppZRSSimlVLoGedGnP/3pJ554YnCTXeZip/FN
di+++OK1a9cGt9oNRnkaDPG0tbV18uRJuZNSSimllFJKKaWUStcgL/rsZz87
vslucLHT9vb25cuX0zfZXesbXPI0uNtuPMTT6dOn5U5KKaWUUkoppZRSKl2D
vOixxx4b3GR34cKFwR12wYudrl+/Poiexpc8DW61O3v2rNxJKaWUUkoppZRS
SqVrkBc98cQTZ86cGVzsNLjDLj2y0+Bip+t9mUuekimTWba2tgbLUUoppZRS
SimllFIqXU8++eT4Yqf0HXaZi51u3LiRjp6Snw6eavf0008vfROUUkoppZRS
Siml1ArW2bNnz58//8wzz6SfYZcPnb7yla+ko6f0KE9PP/301tbWuXPnzpw5
c+rUqZMnTz755JMnTpzY3Nx84oknHu/7AgAAAAC7xWMjg38O8p8nnnhic3Pz
xIkTJ0+ePH369Llz5wah08WLF8tDp0zuNLjkaRA9JfMmS/jSl7504cKFL37x
i1tbW0899VSy5LNnz545c+Z03ykAAAAAdqlB/nPmzJmzZ88+9dRTW1tb58+f
f/rppwdjiadDp8GwTpnc6aWXXspHT4Ornq5cuZLMvr29ffHixWRpgwwqWfKF
CxeSVXyxbwsAAACAXWqQ/5w/f/7ChQtPP/30M888k3l63Xgg8WDoNMidMtFT
+sKnZAmX+7b7kiVf7Hu27xkAAAAAdqlB/jPIggZx02AI8fEo4uPLnPJ32L00
kome0hc+JcYBVGKw5HQSBQAAAMCuMciXxgYp0CARGqRD48QpfW9dMHR6+eWX
89FT5sKncfo0CKDGGdQ4hgIAAABg9xlHQINEaJAOpROn8WVOwdBpIBM9ZS58
GqRP4wBqnEGNYygAAAAAdp9xBDQOhcZDOWUucyoKndLRU/DCp0z6FAygAAAA
ANhlMnFTPnEKDug0jpv+f/pgo5k=
   "], {{0, 0}, {1576, 954}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{788, 477},
  PlotRange->{{0, 1576}, {0, 954}}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.7483918754278975`*^9},
 CellID->5929973],

Cell[BoxData[
 TemplateBox[{
  "CloudObjectInformation","srverr",
   "\"Cloud server is not able to complete a request.\"",2,1,1,
   20271093915960388030,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.749808475521372*^9},
 CellLabel->"During evaluation of In[1]:="],

Cell[BoxData[
 TemplateBox[{
  "First","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"First\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\).\"",2,1,2,20271093915960388030,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7498084755846767`*^9},
 CellLabel->"During evaluation of In[1]:="],

Cell[BoxData[
 TemplateBox[{
  "Part","pspec1",
   "\"Part specification \\!\\(\\*RowBox[{\\\"\\\\\\\"FileByteCount\\\\\\\"\\\
\"}]\\) is not applicable.\"",2,1,3,20271093915960388030,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.749808475592105*^9},
 CellLabel->"During evaluation of In[1]:="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Deletable->False,
 CellTags->"Source & Additional Information",
 CellID->318391102],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  TemplateBox[{"Contributed By",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
       Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
       GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", Deletable -> 
     True, CellTags -> {"SectionMoreInfoContributedBy"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Contributed By",
 CellID->127820888],

Cell["Richard Hennigan (Wolfram Research)", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  TemplateBox[{"Keywords",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
        "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoKeywords"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Keywords",
 CellID->547400482],

Cell["trace", "Item"],

Cell["debug", "Item"],

Cell["evaluation", "Item"],

Cell["metaprogramming", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Categories",
 CellID->749076926],

Cell["Notebook Documents & Presentation", "Item"],

Cell["User Interface Construction", "Item"],

Cell["Programming Utilities", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  TemplateBox[{"Related Symbols",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Related Symbols",
 CellID->161079978],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->79477165]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  TemplateBox[{"Related Resource Objects",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Related Resource Objects",
 CellID->588449267],

Cell["AbortOnMessage", "Item"],

Cell["FailOnMessage", "Item"],

Cell["CheckMatch", "Item"],

Cell["MonitoredTestReport", "Item"],

Cell["OnceUnlessFailed", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  TemplateBox[{"Source/Reference Citation",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Source/Reference Citation",
 CellID->642091068],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->343081869]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  TemplateBox[{"Links",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoLinks"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Links",
 CellID->521525586],

Cell["Link to other related material", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->485448166]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  TemplateBox[{"Tests",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Specify an optional list of tests for verifying that the function is \
working properly in any environment. Tests can be specified as Input/Output \
cell pairs or as symbolic VerificationTest expressions for including \
additional options.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoTests"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->"Tests",
 CellID->74308299],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->667877521],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->993233288]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Author Notes", "Section",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Author Notes",
 CellID->795110225],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->567921317]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  TemplateBox[{"Submission Notes",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Section",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Submission Notes",
 CellID->843283583],

Cell["Additional information for the reviewer.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->920818074]
}, Open  ]]
},
WindowSize->Automatic,
WindowMargins->Automatic,
TaggingRules->{
 "ResourceType" -> "Function", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "1.2.19"},
CreateCellID->True,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, 
       CellTags -> {"MainDockedCell"}], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       Background -> RGBColor[0.996078, 0.941176, 0.921569], 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CellFrameColor -> GrayLevel[0.75], CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, False]]]}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.07142857142857142], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+DB7YPph9sDMh9EwcZg6mD5c
5qLbC3MXTD/M3TDzYf6C2YMrHGD2AAAVXK28
               "], CurveClosed -> {1}]}, 
             
             JoinForm[{"Miter", 3.25}], 
             Thickness[0.049999999999999996`], 
             RGBColor[0.627441, 0.627441, 0.627441, 1.], StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6
eve8lMOjwkBdpVlKDtNeMcWlaUg5rLeT+/XumZKDfHH3s3cNkhD1xsoOydvP
axnrSjrM0+V9eXcqgi+2tCUhlFcFzu+R+XP9TIsKXD/Y/GcqcPPB6g1V4fZ7
3Ng+uaNGFe4+sPpFqg4w98P4b+wjNu/OlYXzwerN5eD6T8maTZx5Ww7V/Hp5
uP0GLXO+/78oD3cfjA9zP4wP8x9MP8z/MPNh4QOzHxZ+MPfBwhc9/AFZSbHT

                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOe35VvNh9m88Bxg+bItQUGsrtcErW
bOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfN0f78Zk/gnC+
thfnwVVSwnC+lOWP9TMtReD8Z6xHa9LMROH8SRvy1QUFxdD4EnA+p8bzeR0a
knD+ooMNFkpCUnB+XK3Nl7tnpVDt65RGlfeVQXOfLIQvKe7wQ+xab3k5gn/0
8aIolz9yDinbz2sZ35VzWG8n9+vdKQWIfKK8Qw3362O7pyP4EP3ScD6Kf4B8
FP8C+Q3z48QYLETgfLD7RIXhfHD4fhaE88HueSIA58PiAz1+AUR/638=
                
                "]}]}, 
             FaceForm[
              RGBColor[0.627441, 0.627441, 0.627441, 1.]], StripOnInput -> 
             False]}, ImageSize -> {14., 14.}, 
           PlotRange -> {{0., 14.}, {0., 14.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.07142857142857142], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+DB7YPph9sDMh9EwcZg6mD5c
5qLbC3MXTD/M3TDzYf6C2YMrHGD2AAAVXK28
               "], CurveClosed -> {1}]}, 
             
             JoinForm[{"Miter", 3.25}], 
             Thickness[0.049999999999999996`], 
             RGBColor[0.5, 0.5, 0.5, 1.], StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+DB7YPph9sDMh9EwcZg6mD5c
5qLbC3MXTD/M3TDzYf6C2YMrHGD2AAAVXK28
               "]]}, 
             FaceForm[
              RGBColor[0.5, 0.5, 0.5, 1.]], StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6
eve8lMOjwkBdpVlKDtNeMcWlaUg5rLeT+/XumZKDfHH3s3cNkhD1xsoOydvP
axnrSjrM0+V9eXcqgi+2tCUhlFcFzu+R+XP9TIsKXD/Y/GcqcPPB6g1V4fZ7
3Ng+uaNGFe4+sPpFqg4w98P4b+wjNu/OlYXzwerN5eD6T8maTZx5Ww7V/Hp5
uP0GLXO+/78oD3cfjA9zP4wP8x9MP8z/MPNh4QOzHxZ+MPfBwhc9/AFZSbHT

                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOe35VvNh9m88Bxg+bItQUGsrtcErW
bOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfN0f78Zk/gnC+
thfnwVVSwnC+lOWP9TMtReD8Z6xHa9LMROH8SRvy1QUFxdD4EnA+p8bzeR0a
knD+ooMNFkpCUnB+XK3Nl7tnpVDt65RGlfeVQXOfLIQvKe7wQ+xab3k5gn/0
8aIolz9yDinbz2sZ35VzWG8n9+vdKQWIfKK8Qw3362O7pyP4EP3ScD6Kf4B8
FP8C+Q3z48QYLETgfLD7RIXhfHD4fhaE88HueSIA58PiAz1+AUR/638=
                
                "]}]}, 
             FaceForm[
              RGBColor[0.999985, 0.999985, 0.999985, 1.]], StripOnInput -> 
             False]}, ImageSize -> {14., 14.}, 
           PlotRange -> {{0., 14.}, {0., 14.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (If[
            MatchQ[
             CurrentValue[
              ButtonNotebook[], {TaggingRules, "AttachedCells", #}], 
             Blank[CellObject]], NotebookDelete[
              CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}]]; 
            CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}] = 
             Inherited, CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]; 
            Null]; Null), Appearance -> None, Evaluator -> Automatic, Method -> 
         "Preemptive"], BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{
           FunctionResourceTools`BuildDefinitionNotebook`Private`clickTime$$ = 
            0., FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$\
$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[
                    AbsoluteTime[] - 
                    FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$ > FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.65], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[0.988235, 0.419608, 0.203922], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 2/3, 0], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {
                    FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$}], StandardForm], Evaluator -> "System"], 
                 ButtonFunction :> (
                  FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$ = AbsoluteTime[]; CopyToClipboard[#2]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          FunctionResourceTools`BuildDefinitionNotebook`Private`$$tooltip, 
           "Text", FontColor -> RGBColor[0.537255, 0.537255, 0.537255], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               FunctionResource`DocuToolsTemplate`FunctionTemplateToggle[]]), 
            FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
            ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection as literal Wolfram Language code\""}, 
             "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               
               FunctionResource`DocuToolsTemplate`\
FunctionTemplateLiteralInput[]]), FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
            ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Insert Delimiter\"", "Text", FontFamily -> "Source Sans Pro",
                FontSize -> 11, StripOnInput -> False], 
              "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               FunctionResource`DocuToolsTemplate`DocDelimiter[]]), 
            FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
            ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Subscripted Variable\"", "Text", FontFamily -> 
               "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
              "\"Insert subscripted variable placeholder\""}, 
             "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               FunctionResource`DocuToolsTemplate`InsertSubscript[]]), 
            FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
            ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Tables\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\"", "Text", FontFamily -> "Source Sans Pro", FontSize -> 
                11, StripOnInput -> False], "\"Table Functions\""}, 
              "PrettyTooltipTemplate"], 
             ButtonFunction :> (
              Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                Symbol["System`ResourceFunction"]]; 
              FunctionResource`DefinitionNotebook`Private`showProgress[Null]),
              FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
                FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
               Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                 "], "Byte", ColorSpace -> 
                 "RGB", Interleaving -> True], "Hover" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
             RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
             ImageSize -> {All, 20}, Evaluator -> Automatic], {
            "\"Insert table with two columns\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableInsert[2]]", InputForm], 
             "\"Insert table with three columns\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableInsert[3]]", InputForm], 
             "\"Add a row to the selected table\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
System`FrontEndExecute[{System`FrontEndToken[System`ButtonNotebook[], \
\"NewRow\"]}]]", InputForm], "\"Sort the selected table\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableSort[]]", InputForm], 
             "\"Merge selected tables\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableMerge[]]", InputForm]}, Appearance -> 
            None, Method -> "Queued"], 
           DynamicBox[
            ToBoxes[
             If[
              CurrentValue[
               EvaluationNotebook[], {
               TaggingRules, "SubmissionReviewData", "Review"}, False], 
              Button[
               RawBoxes[
                TemplateBox[{
                  StyleBox[
                  "\"Insert Comment\"", "Text", FontFamily -> 
                   "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                  "\"Insert comment for reviewer\""}, 
                 "PrettyTooltipTemplate"]], 
               Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                 Symbol["System`ResourceFunction"]]; Identity[
                 FunctionResource`DocuToolsTemplate`InsertComment[]], 
               FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1, 1, 1]}, {
                  FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
                 Evaluator -> "System"], 
               Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                   "], "Byte", 
                   ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
                 Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                   "], "Byte", 
                   ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
                 Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                   "], "Byte", 
                   ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
               RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
               ImageSize -> {All, 20}], ""], StandardForm], Evaluator -> 
            "System", SingleEvaluation -> True], 
           ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.996078, 0.941176, 0.921569]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.996078, 0.941176, 0.921569]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{
                 Thickness[0.022222222222222223`], {
                  FaceForm[{
                    RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                   0.}, {22.5, 0.}, {10.074, 0.}, {0., 10.073999999999998`}, {
                   0., 22.5}, {0., 34.926}, {10.074, 45.}, {22.5, 45.}, {
                   34.926, 45.}, {45., 34.926}, {45., 22.5}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                    
                    "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                    27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                    26.308999999999997`}, {21.375, 26.258000000000003`}, {
                    21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 
                    15.315999999999999`}, {23.828, 14.242}}, {{24.578, 
                    18.75}, {24.578, 23.078000000000003`}, {24.578, 23.539}, {
                    24.953, 23.914}, {25.418, 23.91}, {29.746, 23.91}, {
                    30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078000000000003`}, {30.578, 18.75}, {
                    30.581999999999997`, 18.288999999999998`}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.315999999999999`}, {33.684, 
                    15.539000000000001`}, {33.789, 15.602}, {33.789, 
                    17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                    26.281}, {31.328, 26.512000000000004`}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 
                    14.234000000000002`}}}]}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], Background -> 
                 RGBColor[0.988235, 0.419608, 0.203922], AspectRatio -> 
                 Automatic, ImageSize -> {45., 45.}, 
                 PlotRange -> {{0., 45.}, {0., 45.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> 
                    "Source Sans Pro SemiBold", FontWeight -> "SemiBold", 
                    StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", 
           ItemBox[
            TemplateBox[{
              StyleBox[
              "\"Function Repository \[RightGuillemet]  \"", "Text", 
               FontColor -> GrayLevel[1], StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository/"}, 
             "HyperlinkURL"], Alignment -> {Right, Bottom}, StripOnInput -> 
            False]}, {
           TemplateBox[{
             
             TemplateBox[{
              "\"Open Sample\"", 
               "\"View a completed sample definition notebook\""}, 
              "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`viewExampleNotebook[]\
& , "\"View a completed sample definition notebook\"", True}, 
            "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
              "\"Style Guidelines\"", 
               "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`viewStyleGuidelines[]\
& , "\"View general guidelines for authoring resource functions\"", True}, 
            "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 12, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 12, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`getResource[
              ButtonNotebook[], "Tools"]& , 
             "\"Toggle documentation toolbar\"", False}, 
            "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, 
             GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.994118, 0.709804, 0.601961]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`checkNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             True}, "OrangeButtonTemplate"], 
           ActionMenuBox[
            
            TemplateBox[{
             "\"Preview \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"In a notebook\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Preview\"]]", InputForm], "\"On the cloud\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Cloud\"]]", InputForm]}, Appearance -> None, Method -> "Queued"], 
           ActionMenuBox[
            
            TemplateBox[{
             "\"Deploy \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"Locally on this computer\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Local\"]]", InputForm], "\"For my cloud account\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Cloud\"]]", InputForm], "\"Publicly in the cloud\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"CloudPublic\"]]", InputForm], 
             "\"In this session only (without documentation)\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"KernelSession\"]]", InputForm]}, Appearance -> None, Method -> "Queued"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           DynamicBox[
            ToBoxes[
             If[
              CurrentValue[
               EvaluationNotebook[], {
               TaggingRules, "SubmissionReviewData", "Review"}, False], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349206349206349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, 
                    FaceForm[
                    RGBColor[0.960784, 0.705882, 0.498039, 1.]], StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, 
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]], StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit changes to update your resource submission\""}, 
                  "PrettyTooltipTemplate"], 
                 FunctionResource`DefinitionNotebook`Private`\
submitRepositoryUpdate[
                  ButtonNotebook[]]& , 
                 "\"Submit changes to update your resource submission\"", 
                 True}, "OrangeButtonTemplate"]], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349206349206349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, 
                    FaceForm[
                    RGBColor[0.960784, 0.705882, 0.498039, 1.]], StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, 
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]], StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit your function to the Wolfram Function Repository\
\""}, "PrettyTooltipTemplate"], 
                 FunctionResource`DefinitionNotebook`Private`submitRepository[
                 
                  ButtonNotebook[]]& , 
                 "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
            "System", SingleEvaluation -> True]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.988235, 0.419608, 0.203922], 
             RGBColor[0.921569, 0.341176, 0.105882]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.988235, 0.419608, 0.203922], 2 -> 
             RGBColor[0.921569, 0.341176, 0.105882]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.988235, 0.419608, 0.203922]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222222222222223`], {
                FaceForm[{
                  RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                 0.}, {22.5, 0.}, {10.074, 0.}, {0., 10.073999999999998`}, {
                 0., 22.5}, {0., 34.926}, {10.074, 45.}, {22.5, 45.}, {34.926,
                  45.}, {45., 34.926}, {45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                  
                  "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                  27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                  26.308999999999997`}, {21.375, 26.258000000000003`}, {
                  21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                  15.602}, {21.426, 15.547}, {23.828, 15.315999999999999`}, {
                  23.828, 14.242}}, {{24.578, 18.75}, {24.578, 
                  23.078000000000003`}, {24.578, 23.539}, {24.953, 23.914}, {
                  25.418, 23.91}, {29.746, 23.91}, {30.203, 23.91}, {30.578, 
                  23.539}, {30.578, 23.078000000000003`}, {30.578, 18.75}, {
                  30.581999999999997`, 18.288999999999998`}, {30.207, 
                  17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                  17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                  14.242}, {31.328, 15.315999999999999`}, {33.684, 
                  15.539000000000001`}, {33.789, 15.602}, {33.789, 17.641}, {
                  33.789, 24.188}, {33.789, 26.227}, {33.684, 26.281}, {
                  31.328, 26.512000000000004`}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234000000000002`}}}]}}, {
              ImageSize -> 12, Background -> None, AspectRatio -> Automatic, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro SemiBold", 
         FontWeight -> "SemiBold", FontTracking -> -0.9, FontSize -> 13, 
         FontColor -> GrayLevel[1], StripOnInput -> False], ButtonFunction :> 
        Block[{ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
           False}, Symbol["System`ResourceFunction"]; If[
            TrueQ[#4], CurrentValue[
               ButtonNotebook[], {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]; 
            FunctionResource`DefinitionNotebook`Private`showProgress, 
            Identity][
            #2[]]], FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqPngeIQhCyIrAwodd2K5Yo5IwQB2XDFcGXPA8Wu
WjBdNmVARkARoDhCWZjUdUsWNDUQBBQHykJcC9RyxRzdKAgCigNlGcCAGGVE
mka824j1KdHhRkwsEBOnAMp0Eag=
            "], "Byte", ColorSpace -> "RGB", 
            Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqMHARIQhCyIrAwotdGIa7UuOwQB2XDFcGX3/MXX
6LEv12ZDRkARoDhc2ctQqQ1GnGhqIAgoDpSFuBarUcgGMoABMcqINI14txHp
U+LDjZhYICZOAZ5bBHA=
            "], "Byte", ColorSpace -> "RGB", 
            Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqN3hfYQhCyIrAwo9e36ma8PbkIQkA1XDFf2vtzt
28Obu6Jsl2uzQRCQDRQBisOVvYlR+nr99I5gU7gaCAKKAMWBshDXArV8vnUR
TQ0EAcWBsgxgQIwyIk0j3m1E+pT4cCMmFoiJUwBDsjmM
            "], "Byte", 
            ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
        RGBColor[0.921569, 0.341176, 0.105882], Method -> "Queued", 
        ImageSize -> {All, 23}, Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], #, 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 0}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro SemiBold", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{FunctionResourceTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, Before, 
          CellContents]; Null], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{FunctionResourceTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, 
          Cell[
           BoxData[""], "UsageInputs"], All]; 
        SelectionMove[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, Before, 
          CellContents]; Null], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.921569, 0.341176, 0.105882]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.614379, 0.227451, 0.0705882]], 
   Cell[
    StyleData["InlineFormula"], FontSize -> 0.99 Inherited], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False]}, Visible -> 
  False, FrontEndVersion -> "12.0 for Linux x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[558, 20, 53, 1, 70, "Title",ExpressionUUID->"dbea2a7c-2dfd-4504-a3e2-c9d98410f08d",
   CellTags->"Title"]},
 "Description"->{
  Cell[614, 23, 121, 3, 70, "Text",ExpressionUUID->"e27ec4b6-e313-45da-a785-b0fd42343312",
   CellTags->"Description"]},
 "Definition"->{
  Cell[760, 30, 887, 21, 70, "Section",ExpressionUUID->"eb7733e6-3afe-45b8-92a6-06a6cac1921f",
   CellTags->"Definition",
   CellID->474513213]},
 "Documentation"->{
  Cell[24271, 664, 99, 3, 70, "Section",ExpressionUUID->"931211f6-8941-4c98-9a3a-f46d719fad42",
   CellTags->"Documentation",
   CellID->855965831]},
 "Usage"->{
  Cell[24395, 671, 1615, 42, 70, "Subsection",ExpressionUUID->"94d083b6-8113-40a1-8fac-0bb6a6cf7049",
   CellTags->"Usage",
   CellID->310800389]},
 "Details & Options"->{
  Cell[26723, 749, 1131, 24, 70, "Subsection",ExpressionUUID->"98e59729-599b-484f-8b87-ce4c61b8e303",
   CellTags->"Details & Options",
   CellID->66019318]},
 "Nothing"->{
  Cell[27857, 775, 403, 12, 70, "Notes",ExpressionUUID->"e65d6511-abdd-4f94-a503-a027161e5bcc",
   CellTags->"Nothing",
   CellID->329531895],
  Cell[28263, 789, 736, 24, 70, "TableNotes",ExpressionUUID->"8481f9e4-4751-4e79-b858-20b45e90f5ce",
   CellTags->"Nothing",
   CellID->187709111]},
 "Examples"->{
  Cell[29036, 818, 6400, 143, 70, "Section",ExpressionUUID->"ab4ae039-e324-4cbb-ae86-540b5581d97a",
   CellTags->"Examples",
   CellID->180595041]},
 "Source & Additional Information"->{
  Cell[297603, 5507, 135, 3, 70, "Section",ExpressionUUID->"6804eead-1be0-472f-bf20-c776d8ccccd4",
   CellTags->"Source & Additional Information",
   CellID->318391102]},
 "Contributed By"->{
  Cell[297763, 5514, 683, 18, 70, "Subsection",ExpressionUUID->"1bf4a616-9202-46b7-8d23-1fd13f1a84c3",
   CellTags->"Contributed By",
   CellID->127820888]},
 "Keywords"->{
  Cell[298537, 5539, 684, 18, 70, "Subsection",ExpressionUUID->"be65e90d-4922-49e8-b510-bf0327c40497",
   CellTags->"Keywords",
   CellID->547400482]},
 "Categories"->{
  Cell[299369, 5570, 126, 4, 70, "Subsection",ExpressionUUID->"f87f34bb-6b45-4c47-835b-45782fc99294",
   CellTags->"Categories",
   CellID->749076926]},
 "Related Symbols"->{
  Cell[299670, 5585, 661, 18, 70, "Subsection",ExpressionUUID->"f3353dda-9c67-4077-b978-26e79f481e54",
   CellTags->"Related Symbols",
   CellID->161079978]},
 "TabNext"->{
  Cell[300334, 5605, 501, 8, 70, "Item",ExpressionUUID->"06848d69-3968-49b1-be22-b34f921b3e4d",
   CellTags->"TabNext",
   CellID->79477165],
  Cell[302552, 5672, 496, 8, 70, "Text",ExpressionUUID->"1e718466-6c8c-4392-9046-185d6cb42f68",
   CellTags->"TabNext",
   CellID->343081869],
  Cell[303702, 5705, 485, 8, 70, "Item",ExpressionUUID->"0daffdc4-5a2a-4e43-b881-3ac2d25380dc",
   CellTags->"TabNext",
   CellID->485448166],
  Cell[305432, 5764, 509, 8, 70, "Text",ExpressionUUID->"4053408b-7089-4ed2-98c0-4691366dc075",
   CellTags->"TabNext",
   CellID->567921317],
  Cell[306701, 5798, 495, 8, 70, "Text",ExpressionUUID->"03afdd47-0459-4036-8c91-c60a0f72ccc9",
   CellTags->"TabNext",
   CellID->920818074]},
 "Related Resource Objects"->{
  Cell[300872, 5618, 711, 18, 70, "Subsection",ExpressionUUID->"74357905-5cc0-4b02-b58c-46924b75cf52",
   CellTags->"Related Resource Objects",
   CellID->588449267]},
 "Source/Reference Citation"->{
  Cell[301787, 5651, 762, 19, 70, "Subsection",ExpressionUUID->"556211b2-a309-4612-9d56-7e9b5a35120a",
   CellTags->"Source/Reference Citation",
   CellID->642091068]},
 "Links"->{
  Cell[303085, 5685, 614, 18, 70, "Subsection",ExpressionUUID->"2a6bca6f-538c-4127-a066-539fe8aa6093",
   CellTags->"Links",
   CellID->521525586]},
 "Tests"->{
  Cell[304224, 5718, 767, 20, 70, "Subsection",ExpressionUUID->"eb93441a-52b9-443b-99cf-5af88fc2ddc6",
   CellTags->"Tests",
   CellID->74308299]},
 "Author Notes"->{
  Cell[305302, 5758, 127, 4, 70, "Section",ExpressionUUID->"d890ed76-4a03-4e59-bed5-57cd6719903b",
   CellTags->"Author Notes",
   CellID->795110225]},
 "Submission Notes"->{
  Cell[305978, 5777, 720, 19, 70, "Section",ExpressionUUID->"6f3b033e-9ab1-4862-94f9-699cc86dbfc7",
   CellTags->"Submission Notes",
   CellID->843283583]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 378172, 7174},
 {"Description", 378305, 7177},
 {"Definition", 378443, 7180},
 {"Documentation", 378609, 7184},
 {"Usage", 378771, 7188},
 {"Details & Options", 378943, 7192},
 {"Nothing", 379116, 7196},
 {"Examples", 379423, 7203},
 {"Source & Additional Information", 379610, 7207},
 {"Contributed By", 379802, 7211},
 {"Keywords", 379975, 7215},
 {"Categories", 380144, 7219},
 {"Related Symbols", 380319, 7223},
 {"TabNext", 380492, 7227},
 {"Related Resource Objects", 381238, 7243},
 {"Source/Reference Citation", 381438, 7247},
 {"Links", 381619, 7251},
 {"Tests", 381780, 7255},
 {"Author Notes", 381947, 7259},
 {"Submission Notes", 382122, 7263}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 53, 1, 70, "Title",ExpressionUUID->"dbea2a7c-2dfd-4504-a3e2-c9d98410f08d",
 CellTags->"Title"],
Cell[614, 23, 121, 3, 70, "Text",ExpressionUUID->"e27ec4b6-e313-45da-a785-b0fd42343312",
 CellTags->"Description"],
Cell[CellGroupData[{
Cell[760, 30, 887, 21, 70, "Section",ExpressionUUID->"eb7733e6-3afe-45b8-92a6-06a6cac1921f",
 CellTags->"Definition",
 CellID->474513213],
Cell[1650, 53, 1594, 41, 70, "Input",ExpressionUUID->"c25dd20f-ff12-4cdf-9056-b414f382047d",
 InitializationCell->True],
Cell[3247, 96, 479, 12, 70, "Input",ExpressionUUID->"a2af9c66-8c13-4f7e-8abc-c8af5cc16529",
 InitializationCell->True],
Cell[3729, 110, 2709, 68, 70, "Input",ExpressionUUID->"339fd30a-cbe0-4db0-94ca-4a65ee4ead0f",
 InitializationCell->True],
Cell[6441, 180, 2159, 53, 70, "Input",ExpressionUUID->"429f5788-1604-4649-94b1-037f1dc55823",
 InitializationCell->True],
Cell[8603, 235, 3175, 70, 70, "Input",ExpressionUUID->"503a9be5-b6fa-4607-bdd7-f3073a9db57d",
 InitializationCell->True],
Cell[11781, 307, 528, 12, 70, "Input",ExpressionUUID->"39abeb9d-f4c5-403b-948e-1974fdd3138c",
 InitializationCell->True],
Cell[12312, 321, 461, 11, 70, "Input",ExpressionUUID->"8aa8154f-e9a3-4f07-834d-bd6af8f32ccb",
 InitializationCell->True],
Cell[12776, 334, 456, 11, 70, "Input",ExpressionUUID->"1908fffd-1df4-4f85-bd4a-2d41b2fefc8e",
 InitializationCell->True],
Cell[13235, 347, 398, 10, 70, "Input",ExpressionUUID->"e5028955-9380-4527-a97f-7d0e5a7ef0b4",
 InitializationCell->True],
Cell[13636, 359, 572, 14, 70, "Input",ExpressionUUID->"81a41f0c-3f66-4b48-9cc6-0650e1661667",
 InitializationCell->True],
Cell[14211, 375, 470, 12, 70, "Input",ExpressionUUID->"6410a476-355f-4905-ad28-d00c883d839e",
 InitializationCell->True],
Cell[14684, 389, 1250, 32, 70, "Input",ExpressionUUID->"1c68070d-47bc-459d-a473-c60d0ca9f7dc",
 InitializationCell->True],
Cell[15937, 423, 2557, 64, 70, "Input",ExpressionUUID->"5257e04c-70ef-421a-94cf-ade3e653a3d6",
 InitializationCell->True],
Cell[18497, 489, 1721, 45, 70, "Input",ExpressionUUID->"578d6f06-7b62-46f6-9876-72adfd32700e",
 InitializationCell->True],
Cell[20221, 536, 106, 2, 70, "Input",ExpressionUUID->"bad3e41a-11fb-495f-9cb7-4ba5bb7ec896",
 InitializationCell->True],
Cell[20330, 540, 662, 18, 70, "Input",ExpressionUUID->"b9a673a2-6afc-4b16-adf0-5fe68e5185aa",
 InitializationCell->True],
Cell[20995, 560, 270, 6, 70, "Input",ExpressionUUID->"b511699a-2244-411b-88a0-01ceb1476c27",
 InitializationCell->True],
Cell[21268, 568, 315, 9, 70, "Input",ExpressionUUID->"2baf98c9-4c14-4ce5-8bc2-7c999462add5",
 InitializationCell->True],
Cell[21586, 579, 394, 12, 70, "Input",ExpressionUUID->"c0704623-d7e7-4c14-9485-04c6aae2a8fd",
 InitializationCell->True],
Cell[21983, 593, 1138, 33, 70, "Input",ExpressionUUID->"14937b01-aafd-43a7-be05-0664fad7edbb",
 InitializationCell->True],
Cell[23124, 628, 685, 19, 70, "Input",ExpressionUUID->"6d1c90a5-c62c-4a75-a8ed-afd4eeca5016",
 InitializationCell->True],
Cell[23812, 649, 444, 12, 70, "Input",ExpressionUUID->"cc7d9e24-b7d6-47f1-a719-451a1c0c0810",
 InitializationCell->True]
}, Open  ]],
Cell[24271, 664, 99, 3, 70, "Section",ExpressionUUID->"931211f6-8941-4c98-9a3a-f46d719fad42",
 CellTags->"Documentation",
 CellID->855965831],
Cell[CellGroupData[{
Cell[24395, 671, 1615, 42, 70, "Subsection",ExpressionUUID->"94d083b6-8113-40a1-8fac-0bb6a6cf7049",
 CellTags->"Usage",
 CellID->310800389],
Cell[CellGroupData[{
Cell[26035, 717, 97, 2, 70, "UsageInputs",ExpressionUUID->"f9e4b602-2ffa-48ed-a89e-c29754c27fa0"],
Cell[26135, 721, 200, 6, 70, "UsageDescription",ExpressionUUID->"30d2d869-901d-465e-81a6-dc597237bb73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26372, 732, 144, 4, 70, "UsageInputs",ExpressionUUID->"db49737c-4e0f-4df2-8d7d-274a4ffdce19"],
Cell[26519, 738, 155, 5, 70, "UsageDescription",ExpressionUUID->"e5545a7a-d323-4b0c-b96e-c66b8ec43b9d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26723, 749, 1131, 24, 70, "Subsection",ExpressionUUID->"98e59729-599b-484f-8b87-ce4c61b8e303",
 CellTags->"Details & Options",
 CellID->66019318],
Cell[27857, 775, 403, 12, 70, "Notes",ExpressionUUID->"e65d6511-abdd-4f94-a503-a027161e5bcc",
 CellTags->"Nothing",
 CellID->329531895],
Cell[28263, 789, 736, 24, 70, "TableNotes",ExpressionUUID->"8481f9e4-4751-4e79-b858-20b45e90f5ce",
 CellTags->"Nothing",
 CellID->187709111]
}, Open  ]],
Cell[CellGroupData[{
Cell[29036, 818, 6400, 143, 70, "Section",ExpressionUUID->"ab4ae039-e324-4cbb-ae86-540b5581d97a",
 CellTags->"Examples",
 CellID->180595041],
Cell[CellGroupData[{
Cell[35461, 965, 56, 1, 70, "Subsection",ExpressionUUID->"19c1e4ba-2ccf-40f2-bcd2-62de06cae9e8",
 CellID->103550037],
Cell[35520, 968, 159, 7, 70, "Text",ExpressionUUID->"d8e93748-57e8-406c-81e3-b41e750a4be0",
 CellID->241571174],
Cell[CellGroupData[{
Cell[35704, 979, 113, 3, 70, "Input",ExpressionUUID->"2ffc71d7-1935-4ef2-bc6c-ec1e4c84b2b4",
 CellID->39153316],
Cell[35820, 984, 63, 1, 70, "Output",ExpressionUUID->"041159b5-19a0-4de3-8a37-cc3ca0640769",
 CellID->575923692]
}, Open  ]],
Cell[35898, 988, 90, 1, 70, "Text",ExpressionUUID->"3b4089a5-1d99-4946-a780-307e34e4030a",
 CellID->256805882],
Cell[CellGroupData[{
Cell[36013, 993, 285, 9, 70, "Input",ExpressionUUID->"ab7c0be3-dfda-4ddc-8908-26ab2d161e56",
 CellID->780572474],
Cell[36301, 1004, 170, 5, 70, "Output",ExpressionUUID->"271d8660-df2b-458f-a4dd-3693e7be09f1",
 CellID->436579877]
}, Open  ]],
Cell[36486, 1012, 79, 2, 70, "Text",ExpressionUUID->"47775f31-4539-4c16-b956-dc33101addd1",
 CellID->129777857],
Cell[36568, 1016, 35108, 580, 70, "Print",ExpressionUUID->"d8efa1bc-edb9-4fd1-9fbf-9d50d79f1782",
 CellID->89971072],
Cell[71679, 1598, 111, 3, 70, "Text",ExpressionUUID->"b104ff2d-ffb5-469b-8dff-ce80ee91e8fa",
 CellID->215845540],
Cell[71793, 1603, 398, 11, 70, "Text",ExpressionUUID->"db0bba73-4982-410e-9e1d-a97fdac8b46e",
 CellID->378675105],
Cell[72194, 1616, 307, 9, 70, "Text",ExpressionUUID->"e032320d-73ba-46ed-ad10-f5509720b686",
 CellID->110516947],
Cell[72504, 1627, 288, 9, 70, "Text",ExpressionUUID->"d450b11c-43e1-46fa-9632-f6534b5ef53f",
 CellID->431443114],
Cell[72795, 1638, 345, 10, 70, "Text",ExpressionUUID->"97e5f8d4-0407-443a-b5eb-b61437a54974",
 CellID->1021861671],
Cell[73143, 1650, 161, 4, 70, "Text",ExpressionUUID->"fa210087-b5a1-4e35-95b9-5743f2ea6952",
 CellID->142242215],
Cell[73307, 1656, 79, 2, 70, "Text",ExpressionUUID->"81a6cc41-5c97-4858-a985-f20cf6ac3a1a",
 CellID->156731695],
Cell[73389, 1660, 40937, 676, 70, "Print",ExpressionUUID->"2e9a36d9-19e9-4e44-a0c0-5421d3914824",
 CellID->209436321],
Cell[114329, 2338, 152, 2, 70, "Text",ExpressionUUID->"b8f4f72c-7af9-4db4-be46-adbd3cb7ffa5",
 CellID->88176781],
Cell[114484, 2342, 140, 2, 70, "Text",ExpressionUUID->"8fb1fcc0-53e7-4014-9cd3-d0d3e35bc264",
 CellID->275176949],
Cell[114627, 2346, 79, 2, 70, "Text",ExpressionUUID->"005a6c08-bd5f-42d7-b0dd-bc35e4c9f280",
 CellID->542909312],
Cell[114709, 2350, 38525, 636, 70, "Print",ExpressionUUID->"8aa5c942-5e6a-4fab-b202-ce2093a092f1",
 CellID->1454768],
Cell[153237, 2988, 123, 4, 70, "Text",ExpressionUUID->"1097879a-234e-4b14-89bf-d1c88dcd4480",
 CellID->44350],
Cell[153363, 2994, 79, 2, 70, "Text",ExpressionUUID->"99efc505-5818-4306-a2d5-f3ec71942126",
 CellID->532258910],
Cell[153445, 2998, 34219, 566, 70, "Print",ExpressionUUID->"aa68c54e-eedb-40d4-b55b-de9b285e5bbf",
 CellID->82563332],
Cell[187667, 3566, 212, 5, 70, "Text",ExpressionUUID->"609ce299-2745-440a-be4e-87c69119b074",
 CellID->96263973],
Cell[CellGroupData[{
Cell[187904, 3575, 532, 18, 70, "Input",ExpressionUUID->"1adbddc9-7f65-4d2d-83dc-a77fd7a30179",
 CellID->218259673],
Cell[188439, 3595, 137, 3, 70, "Output",ExpressionUUID->"580c9a36-3c47-452b-a02e-705c7fb3bcf6",
 CellID->27675719]
}, Open  ]],
Cell[188591, 3601, 79, 2, 70, "Text",ExpressionUUID->"590de608-7b5c-45af-bb60-3713b7feb16c",
 CellID->819598997],
Cell[188673, 3605, 43832, 723, 70, "Print",ExpressionUUID->"32f0aaf4-e4cf-4187-aaa2-98be1aa8d908",
 CellID->361831443]
}, Open  ]],
Cell[CellGroupData[{
Cell[232542, 4333, 49, 1, 70, "Subsection",ExpressionUUID->"3556f3ae-c8c9-4ebd-b53a-92a7e7ec50f4",
 CellID->182977116],
Cell[232594, 4336, 88, 1, 70, "Text",ExpressionUUID->"9f84cc97-d7c8-4ab2-99d9-93a4e9f8b5f9",
 CellID->280595],
Cell[232685, 4339, 276, 8, 70, "Input",ExpressionUUID->"1d95eedf-7500-41f4-b968-9a0e71d3e5da",
 CellID->924450365],
Cell[232964, 4349, 327, 9, 70, "Input",ExpressionUUID->"bf34d525-7f66-4d28-b096-f82ac16ad3ed",
 CellID->2204728],
Cell[233294, 4360, 241, 6, 70, "Input",ExpressionUUID->"d1a29b77-598f-48c5-bf41-83537e349174",
 CellID->94763525],
Cell[CellGroupData[{
Cell[233560, 4370, 242, 6, 70, "Input",ExpressionUUID->"50e38a11-bd50-48e7-a926-06c9323c5c83",
 CellID->360717919],
Cell[233805, 4378, 102, 3, 70, "Output",ExpressionUUID->"fd2e3de7-5a28-416d-be07-f6e3be59aaf7",
 CellID->89191319]
}, Open  ]],
Cell[233922, 4384, 158, 4, 70, "Text",ExpressionUUID->"3dd4b5b2-cb0d-48ce-b709-a7c2fb4ef9ee",
 CellID->284519841],
Cell[CellGroupData[{
Cell[234105, 4392, 276, 8, 70, "Input",ExpressionUUID->"8c9370f3-a49b-4b43-9184-eff5d1689e70",
 CellID->532591502],
Cell[234384, 4402, 103, 3, 70, "Output",ExpressionUUID->"21e985e8-6df4-4523-890e-96fd13e3b567",
 CellID->804815079]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234536, 4411, 54, 1, 70, "Subsection",ExpressionUUID->"8fa948e0-976c-4230-9c17-19222a46332a",
 CellID->206498746],
Cell[234593, 4414, 268, 8, 70, "Text",ExpressionUUID->"f2721741-9b4c-4e64-92ea-12f3f44c872c",
 CellID->237295030],
Cell[CellGroupData[{
Cell[234886, 4426, 2985, 58, 70, "Input",ExpressionUUID->"088a887c-a442-4ddc-9b85-ffb1067a7fed",
 CellID->369476667],
Cell[237874, 4486, 413, 9, 70, "Message",ExpressionUUID->"bc8a1962-5d89-4ec4-b523-8b0d5d1b0158",
 CellID->471712167],
Cell[238290, 4497, 198, 4, 70, "Output",ExpressionUUID->"2c37a2b3-0685-404c-a74f-2d4550d43332",
 CellID->675824649]
}, Open  ]],
Cell[CellGroupData[{
Cell[238525, 4506, 304, 8, 70, "Input",ExpressionUUID->"17e8f329-e025-4397-b202-7b2a05782170",
 CellID->385913009],
Cell[238832, 4516, 194, 4, 70, "Output",ExpressionUUID->"9a329154-11ce-46c9-b6e6-5893f6999a61",
 CellID->527816828]
}, Open  ]],
Cell[239041, 4523, 78, 2, 70, "Text",ExpressionUUID->"6aa0a5a2-5cf1-4608-b33b-15576421eb62",
 CellID->52506717],
Cell[239122, 4527, 57433, 946, 70, "Print",ExpressionUUID->"ab45a7b4-6777-44ce-b724-80cf5752404d",
 CellID->5929973],
Cell[296558, 5475, 290, 7, 70, "Message",ExpressionUUID->"57f09579-758d-424c-a36a-d33a9ac0f257"],
Cell[296851, 5484, 380, 8, 70, "Message",ExpressionUUID->"8db1beeb-fe23-4338-95f3-c7c1bbd4ed3b"],
Cell[297234, 5494, 320, 7, 70, "Message",ExpressionUUID->"71cd2eff-f018-4f8c-aa10-4167493a50e2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[297603, 5507, 135, 3, 70, "Section",ExpressionUUID->"6804eead-1be0-472f-bf20-c776d8ccccd4",
 CellTags->"Source & Additional Information",
 CellID->318391102],
Cell[CellGroupData[{
Cell[297763, 5514, 683, 18, 70, "Subsection",ExpressionUUID->"1bf4a616-9202-46b7-8d23-1fd13f1a84c3",
 CellTags->"Contributed By",
 CellID->127820888],
Cell[298449, 5534, 51, 0, 70, "Text",ExpressionUUID->"24e80d0a-2fc3-44a7-ac0d-40d23fb4e26b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298537, 5539, 684, 18, 70, "Subsection",ExpressionUUID->"be65e90d-4922-49e8-b510-bf0327c40497",
 CellTags->"Keywords",
 CellID->547400482],
Cell[299224, 5559, 21, 0, 70, "Item",ExpressionUUID->"87736388-79a3-46cf-8d96-ac6a0a3d07ef"],
Cell[299248, 5561, 21, 0, 70, "Item",ExpressionUUID->"f2d79448-bd67-4f9c-8f54-646dc45f78a4"],
Cell[299272, 5563, 26, 0, 70, "Item",ExpressionUUID->"de4836ec-7bff-4a1c-aafb-08b34262acd8"],
Cell[299301, 5565, 31, 0, 70, "Item",ExpressionUUID->"e42cbb10-1f40-45cf-950f-fee451db21ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299369, 5570, 126, 4, 70, "Subsection",ExpressionUUID->"f87f34bb-6b45-4c47-835b-45782fc99294",
 CellTags->"Categories",
 CellID->749076926],
Cell[299498, 5576, 49, 0, 70, "Item",ExpressionUUID->"f0bd2dc5-1b0a-4672-8591-5fe5453ea364"],
Cell[299550, 5578, 43, 0, 70, "Item",ExpressionUUID->"c0493214-1d30-4465-b720-d070962171a9"],
Cell[299596, 5580, 37, 0, 70, "Item",ExpressionUUID->"958d8b33-58d3-427a-96e3-d8cbb8c619a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299670, 5585, 661, 18, 70, "Subsection",ExpressionUUID->"f3353dda-9c67-4077-b978-26e79f481e54",
 CellTags->"Related Symbols",
 CellID->161079978],
Cell[300334, 5605, 501, 8, 70, "Item",ExpressionUUID->"06848d69-3968-49b1-be22-b34f921b3e4d",
 CellTags->"TabNext",
 CellID->79477165]
}, Open  ]],
Cell[CellGroupData[{
Cell[300872, 5618, 711, 18, 70, "Subsection",ExpressionUUID->"74357905-5cc0-4b02-b58c-46924b75cf52",
 CellTags->"Related Resource Objects",
 CellID->588449267],
Cell[301586, 5638, 30, 0, 70, "Item",ExpressionUUID->"89855310-703e-4c73-8945-dde1493c25f4"],
Cell[301619, 5640, 29, 0, 70, "Item",ExpressionUUID->"240053cb-e03d-41c3-b5dd-0bf834fa05e1"],
Cell[301651, 5642, 26, 0, 70, "Item",ExpressionUUID->"7098d8ae-09df-4bca-a1b9-e343ca58aa2d"],
Cell[301680, 5644, 35, 0, 70, "Item",ExpressionUUID->"85341952-6c1c-453d-85c7-00030a431eb1"],
Cell[301718, 5646, 32, 0, 70, "Item",ExpressionUUID->"d838887d-ddb0-4ef1-a7e1-405379a48533"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301787, 5651, 762, 19, 70, "Subsection",ExpressionUUID->"556211b2-a309-4612-9d56-7e9b5a35120a",
 CellTags->"Source/Reference Citation",
 CellID->642091068],
Cell[302552, 5672, 496, 8, 70, "Text",ExpressionUUID->"1e718466-6c8c-4392-9046-185d6cb42f68",
 CellTags->"TabNext",
 CellID->343081869]
}, Open  ]],
Cell[CellGroupData[{
Cell[303085, 5685, 614, 18, 70, "Subsection",ExpressionUUID->"2a6bca6f-538c-4127-a066-539fe8aa6093",
 CellTags->"Links",
 CellID->521525586],
Cell[303702, 5705, 485, 8, 70, "Item",ExpressionUUID->"0daffdc4-5a2a-4e43-b881-3ac2d25380dc",
 CellTags->"TabNext",
 CellID->485448166]
}, Open  ]],
Cell[CellGroupData[{
Cell[304224, 5718, 767, 20, 70, "Subsection",ExpressionUUID->"eb93441a-52b9-443b-99cf-5af88fc2ddc6",
 CellTags->"Tests",
 CellID->74308299],
Cell[CellGroupData[{
Cell[305016, 5742, 129, 4, 70, "Input",ExpressionUUID->"13d17fee-7884-4ee0-b197-1f84e91d4c22",
 CellID->667877521],
Cell[305148, 5748, 93, 3, 70, "Output",ExpressionUUID->"049f0fd5-97e7-4968-8605-cdfb0de524f4",
 CellID->993233288]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[305302, 5758, 127, 4, 70, "Section",ExpressionUUID->"d890ed76-4a03-4e59-bed5-57cd6719903b",
 CellTags->"Author Notes",
 CellID->795110225],
Cell[305432, 5764, 509, 8, 70, "Text",ExpressionUUID->"4053408b-7089-4ed2-98c0-4691366dc075",
 CellTags->"TabNext",
 CellID->567921317]
}, Open  ]],
Cell[CellGroupData[{
Cell[305978, 5777, 720, 19, 70, "Section",ExpressionUUID->"6f3b033e-9ab1-4862-94f9-699cc86dbfc7",
 CellTags->"Submission Notes",
 CellID->843283583],
Cell[306701, 5798, 495, 8, 70, "Text",ExpressionUUID->"03afdd47-0459-4036-8c91-c60a0f72ccc9",
 CellTags->"TabNext",
 CellID->920818074]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
